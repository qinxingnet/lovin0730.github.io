<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mirone</title>
  <subtitle>Mirone&#39;s blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://lovin0730.github.io/"/>
  <updated>2016-12-05T02:34:48.000Z</updated>
  <id>http://lovin0730.github.io/</id>
  
  <author>
    <name>Mirone</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MongoDB权限管理</title>
    <link href="http://lovin0730.github.io/2016/10/25/mongo-admin/"/>
    <id>http://lovin0730.github.io/2016/10/25/mongo-admin/</id>
    <published>2016-10-25T07:12:34.000Z</published>
    <updated>2016-12-05T02:34:48.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://oanr6klwj.bkt.clouddn.com/blog/mongo-admin-cover.png" alt="cover"></p>
<blockquote>
<p><a href="http://www.pixiv.net/member_illust.php?mode=medium&amp;illust_id=58984559" target="_blank" rel="external"><em>pixiv-ID: 58984559</em></a></p>
</blockquote>
<p>MongoDB&#x6570;&#x636E;&#x5E93;&#x9ED8;&#x8BA4;&#x662F;&#x4E0D;&#x9700;&#x8981;&#x7528;&#x6237;&#x540D;&#x548C;&#x767B;&#x9646;&#x5BC6;&#x7801;&#x7684;&#xFF0C;&#x5728;&#x5B9E;&#x9645;&#x73AF;&#x5883;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x8BBE;&#x7F6E;&#x4E0D;&#x540C;&#x7684;&#x6743;&#x9650;&#x65B9;&#x4FBF;&#x5F00;&#x53D1;&#x8005;&#x64CD;&#x4F5C;&#x6570;&#x636E;&#x5E93;&#x4F46;&#x8981;&#x907F;&#x514D;&#x5F00;&#x653E;&#x6240;&#x6709;&#x6743;&#x9650;&#x5F15;&#x8D77;&#x7684;&#x5371;&#x9669;&#xFF0C;&#x56E0;&#x6B64;&#x5982;&#x679C;&#x4F7F;&#x7528;mongodb&#xFF0C;&#x4E86;&#x89E3;&#x5B83;&#x7684;&#x6743;&#x9650;&#x8BE5;&#x5982;&#x4F55;&#x5206;&#x914D;&#x662F;&#x5341;&#x5206;&#x91CD;&#x8981;&#x7684;&#x3002;<br>&#x672C;&#x6587;&#x4EE5;Mac&#x4E0A;&#x4F7F;&#x7528;homebrew&#x5B89;&#x88C5;&#x7684;MongoDB^3.2.10&#x7248;&#x672C;&#x4E3A;&#x51C6;&#xFF0C;mongodb&#x7248;&#x672C;&#x66F4;&#x65B0;&#x53EF;&#x80FD;&#x4F1A;&#x5BFC;&#x81F4;&#x547D;&#x4EE4;&#x7684;&#x53D8;&#x5316;&#x548C;&#x4E0D;&#x53EF;&#x7528;&#x3002;</p>
<a id="more"></a>
<p>&#x5148;&#x5F00;&#x542F;&#x6570;&#x636E;&#x5E93;&#x547D;&#x4EE4;&#x884C;&#xFF0C;&#x5E76;&#x521B;&#x5EFA;admin&#x6570;&#x636E;&#x5E93;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ mongo</div><div class="line">use admin</div></pre></td></tr></table></figure></p>
<p>&#x521B;&#x5EFA;&#x7528;&#x6237;&#x7684;&#x683C;&#x5F0F;&#x4E3A;&#xFF1A;<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">db.createUser({</div><div class="line">  <span class="attr">user</span>: <span class="string">&apos;your username&apos;</span>,</div><div class="line">  <span class="attr">pwd</span>: <span class="string">&apos;your password&apos;</span>,</div><div class="line">  <span class="attr">customData</span>: {</div><div class="line">    <span class="string">&quot;description&quot;</span>: <span class="string">&quot;your description&quot;</span></div><div class="line">  },</div><div class="line">  <span class="attr">roles</span>: [</div><div class="line">    {</div><div class="line">      <span class="attr">role</span>: <span class="string">&quot;your role&quot;</span>,</div><div class="line">      <span class="attr">db</span>: <span class="string">&quot;the data base to set the user&quot;</span></div><div class="line">    }</div><div class="line">  ]</div><div class="line">})</div></pre></td></tr></table></figure></p>
<p>&#x5176;&#x4E2D;cunstomData&#x5B57;&#x6BB5;&#x662F;&#x53EF;&#x9009;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x4E0D;&#x586B;&#x3002;<br>roles&#x652F;&#x6301;&#x4E3A;&#x4E00;&#x4E2A;&#x7528;&#x6237;&#x5206;&#x914D;&#x591A;&#x4E2A;&#x89D2;&#x8272;&#xFF0C;&#x7528;&#x6570;&#x7EC4;&#x7684;&#x5F62;&#x5F0F;&#x6765;&#x8868;&#x793A;&#x3002;<br>&#x5176;&#x4E2D;role&#x5B57;&#x6BB5;&#x7684;&#x503C;&#x7531;MongoDB&#x63D0;&#x4F9B;&#xFF0C;&#x76EE;&#x524D;&#x652F;&#x6301;&#x7684;&#x6709;&#xFF1A;</p>
<blockquote>
<ul>
<li>&#x6570;&#x636E;&#x5E93;&#x7528;&#x6237;&#x89D2;&#x8272;&#xFF08;Database User Roles&#xFF09;read&#x3001;readWrite</li>
<li>&#x6570;&#x636E;&#x5E93;&#x7BA1;&#x7406;&#x89D2;&#x8272;&#xFF08;Database Administration Roles&#xFF09;dbAdmin&#x3001;dbOwner&#x3001;userAdmin</li>
<li>&#x7BA1;&#x7406;&#x5458;&#x7EC4;&#xFF08;Cluster Administration Roles&#xFF09;clusterAdmin&#x3001;clusterManager&#x3001;clusterMonitor&#x3001;hostManager</li>
<li>&#x5907;&#x4EFD;&#x8FD8;&#x539F;&#x89D2;&#x8272;&#x7EC4;&#xFF08;Backup and Restoration Roles&#xFF09;backup&#x3001;restore</li>
<li>&#x6240;&#x6709;&#x6570;&#x636E;&#x5E93;&#x89D2;&#x8272;&#xFF08;All-Database Roles&#xFF09;readAnyDatabase&#x3001;readWriteAnyDatabase&#x3001;userAdminAnyDatabase&#x3001;dbAdminAnyDatabase</li>
<li>&#x8D85;&#x7EA7;&#x7BA1;&#x7406;&#x5458;&#xFF08;Superuser Roles&#xFF09;root</li>
<li>&#x5185;&#x90E8;&#x89D2;&#x8272;&#xFF08;Internal Role&#xFF09;_system&#xFF08;&#x4E00;&#x822C;&#x4E0D;&#x5EFA;&#x8BAE;&#x8BBE;&#x7F6E;&#xFF09;</li>
</ul>
<p>&#x6BCF;&#x4E2A;&#x89D2;&#x8272;&#x7684;&#x5177;&#x4F53;&#x804C;&#x8D23;&#x8BF7;&#x67E5;&#x9605;<a href="http://docs.mongoing.com/manual-zh/reference/built-in-roles.html" target="_blank" rel="external">&#x5B98;&#x7F51;</a><br>&#x5EFA;&#x7ACB;&#x5B8C;&#x7528;&#x6237;&#x540E;&#xFF0C;&#x53EF;&#x4EE5;&#x53BB;&#x76F8;&#x5E94;&#x6570;&#x636E;&#x5E93;&#x4E0B;&#x8FDB;&#x884C;&#x9A8C;&#x8BC1;&#xFF0C;&#x4F8B;&#x5982;&#x4E0B;&#x9762;&#x6211;&#x5C06;&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;test&#x6570;&#x636E;&#x5E93;&#x7684;user&#x7528;&#x6237;&#xFF0C;&#x4ED6;&#x7684;&#x6743;&#x9650;&#x4E3A;<code>dbOwner</code>&#xFF0C;&#x7136;&#x540E;&#x8FDB;&#x884C;&#x9A8C;&#x8BC1;&#x3002;</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">db.createUser({</div><div class="line">  <span class="attr">user</span>: <span class="string">&apos;test&apos;</span>,</div><div class="line">  <span class="attr">pwd</span>: <span class="string">&apos;testpwd&apos;</span>,</div><div class="line">  <span class="attr">roles</span>: [</div><div class="line">    {</div><div class="line">      <span class="attr">role</span>: <span class="string">&apos;dbOwner&apos;</span>,</div><div class="line">      <span class="attr">db</span>: <span class="string">&apos;test&apos;</span></div><div class="line">    }</div><div class="line">  ]</div><div class="line">})</div><div class="line">use test</div><div class="line">db.auth(<span class="string">&apos;test&apos;</span>, <span class="string">&apos;testpwd&apos;</span>)</div></pre></td></tr></table></figure>
<p>&#x7136;&#x540E;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x5728;MongoDB&#x7684;&#x9ED8;&#x8BA4;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#x5F00;&#x542F;&#x5B89;&#x5168;&#x8BA4;&#x8BC1;&#xFF0C;Homebrew&#x5B89;&#x88C5;&#x7684;MongoDB&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4F4D;&#x7F6E;&#x5728;<code>/usr/local/etc/mongod.conf</code>&#xFF0C;&#x6211;&#x4EEC;&#x5728;&#x5176;&#x4E2D;&#x52A0;&#x5165;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">security:</div><div class="line">  authorization: &quot;enabled&quot;</div></pre></td></tr></table></figure></p>
<p>&#x4E4B;&#x540E;&#x91CD;&#x542F;&#x670D;&#x52A1;<br><code>$ brew services restart mongodb</code></p>
<p>&#x4E4B;&#x540E;&#x767B;&#x9646;mongodb&#x5C31;&#x9700;&#x8981;&#x7528;&#x6237;&#x5BC6;&#x7801;&#x4E86;</p>
<ul>
<li>&#x4F7F;&#x7528;shell&#x767B;&#x9646;<br><code>$ mongo db -u username -p</code></li>
<li>node&#x4E2D;&#x7684;&#x8FDE;&#x63A5;<br><code>mongodb.connect(&apos;mongodb://user:pwd@host:port/db&apos;)</code></li>
</ul>
<p>db&#x662F;&#x8981;&#x767B;&#x9646;&#x7684;&#x6570;&#x636E;&#x5E93;&#x7684;&#x540D;&#x5B57;&#xFF0C;&#x767B;&#x9646;&#x540E;&#x8FDB;&#x884C;&#x6743;&#x9650;&#x4E0D;&#x591F;&#x7684;&#x64CD;&#x4F5C;&#x5C06;&#x4F1A;&#x88AB;&#x62D2;&#x7EDD;&#xFF0C;&#x5927;&#x5927;&#x63D0;&#x5347;&#x4E86;&#x5B89;&#x5168;&#x6027;&#x3002;</p>
<p>&#x4E4B;&#x540E;&#x5F53;&#x6211;&#x4EEC;&#x8981;&#x4E3A;&#x67D0;&#x4E2A;&#x6570;&#x636E;&#x5E93;&#x6DFB;&#x52A0;&#x65B0;&#x7684;&#x7528;&#x6237;&#x65F6;&#xFF0C;&#x8FDB;&#x884C;&#x7684;&#x64CD;&#x4F5C;&#x5982;&#x4E0B;&#xFF1A;</p>
<ol>
<li>&#x4F7F;&#x7528;&#x7BA1;&#x7406;&#x5458;&#x8D26;&#x6237;&#x767B;&#x5F55;mongodb</li>
<li>&#x5207;&#x6362;&#x81F3;&#x8981;&#x6DFB;&#x52A0;&#x7528;&#x6237;&#x7684;&#x6570;&#x636E;&#x5E93;</li>
<li>&#x6DFB;&#x52A0;&#x7528;&#x6237;</li>
<li>&#x4F7F;&#x7528;<code>db.auth({username, pwd})</code>&#x6765;&#x8BA4;&#x8BC1;&#x7528;&#x6237;</li>
<li>&#x9000;&#x51FA;&#x7BA1;&#x7406;&#x5458;&#x8D26;&#x6237;&#xFF0C;&#x7528;&#x65B0;&#x521B;&#x5EFA;&#x7684;&#x7528;&#x6237;&#x767B;&#x5F55;&#x8BE5;&#x6570;&#x636E;&#x5E93;&#x8FDB;&#x884C;&#x68C0;&#x67E5;</li>
</ol>
<p>&#x51E0;&#x4E2A;&#x5E38;&#x7528;&#x7684;&#x547D;&#x4EE4;&#xFF1A;</p>
<ul>
<li>&#x67E5;&#x770B;&#x5DF2;&#x5B58;&#x5728;&#x7528;&#x6237;&#xFF08;&#x9700;&#x8981;&#x7BA1;&#x7406;&#x5458;&#x6743;&#x9650;&#xFF09;<br><code>db.system.users.find()</code></li>
<li>&#x5220;&#x9664;&#x4E00;&#x4E2A;&#x7528;&#x6237;&#xFF08;&#x9700;&#x8981;&#x8D85;&#x7EA7;&#x7BA1;&#x7406;&#x5458;&#x6743;&#x9650;&#xFF09;<br><code>db.system.users.remove({user: username})</code></li>
<li>&#x67E5;&#x770B;&#x5F53;&#x524D;&#x6570;&#x636E;&#x5E93;&#x7684;&#x7528;&#x6237;<br><code>show users</code></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oanr6klwj.bkt.clouddn.com/blog/mongo-admin-cover.png&quot; alt=&quot;cover&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://www.pixiv.net/member_illust.php?mode=medium&amp;amp;illust_id=58984559&quot;&gt;&lt;em&gt;pixiv-ID: 58984559&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;MongoDB数据库默认是不需要用户名和登陆密码的，在实际环境中，我们需要设置不同的权限方便开发者操作数据库但要避免开放所有权限引起的危险，因此如果使用mongodb，了解它的权限该如何分配是十分重要的。&lt;br&gt;本文以Mac上使用homebrew安装的MongoDB^3.2.10版本为准，mongodb版本更新可能会导致命令的变化和不可用。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Database" scheme="http://lovin0730.github.io/tags/database/"/>
    
  </entry>
  
  <entry>
    <title>使用SSH进行远程连接</title>
    <link href="http://lovin0730.github.io/2016/10/25/ssh-base/"/>
    <id>http://lovin0730.github.io/2016/10/25/ssh-base/</id>
    <published>2016-10-25T04:59:20.000Z</published>
    <updated>2016-10-26T03:49:02.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://oanr6klwj.bkt.clouddn.com/blog/ssh-base-cover.png" alt="cover"></p>
<blockquote>
<p><a href="http://www.pixiv.net/member_illust.php?mode=medium&amp;illust_id=59600727" target="_blank" rel="external"><em>pixiv-ID: 59600727</em></a></p>
</blockquote>
<p>&#x5728;&#x5F00;&#x53D1;&#x573A;&#x666F;&#x4E2D;&#xFF0C;&#x5F00;&#x53D1;&#x4EBA;&#x5458;&#x514D;&#x4E0D;&#x4E86;&#x548C;&#x670D;&#x52A1;&#x5668;&#x6253;&#x4EA4;&#x9053;&#xFF0C;&#x65E0;&#x8BBA;&#x662F;&#x8FDE;&#x63A5;&#x670D;&#x52A1;&#x5668;&#x8FD8;&#x662F;&#x81EA;&#x5DF1;&#x865A;&#x62DF;&#x673A;&#x4E2D;&#x642D;&#x5EFA;&#x7684;&#x5F00;&#x53D1;&#x73AF;&#x5883;&#xFF0C;&#x90FD;&#x79BB;&#x4E0D;&#x5F00;SSH&#x7684;&#x5E94;&#x7528;&#x3002;</p>
<p>SSH&#x662F;&#x4E00;&#x79CD;&#x7F51;&#x7EDC;&#x534F;&#x8BAE;&#xFF0C;&#x7528;&#x4E8E;&#x8BA1;&#x7B97;&#x673A;&#x4E4B;&#x95F4;&#x7684;&#x52A0;&#x5BC6;&#x767B;&#x9646;&#x3002;&#x901A;&#x8FC7;&#x516C;&#x94A5;&#x52A0;&#x5BC6;&#x8FDB;&#x884C;&#x4FE1;&#x606F;&#x4FDD;&#x62A4;&#xFF0C;&#x8FC7;&#x7A0B;&#x4E3A;&#xFF1A;</p>
<ol>
<li>&#x8FDC;&#x7A0B;&#x4E3B;&#x673A;&#x6536;&#x5230;&#x7528;&#x6237;&#x767B;&#x9646;&#x8BF7;&#x6C42;&#xFF0C;&#x53D1;&#x9001;&#x516C;&#x94A5;&#x5230;&#x7528;&#x6237;&#x3002;</li>
<li>&#x7528;&#x6237;&#x7528;&#x516C;&#x94A5;&#x52A0;&#x5BC6;&#x5BC6;&#x7801;&#x53D1;&#x9001;&#x5230;&#x8FDC;&#x7A0B;&#x4E3B;&#x673A;&#x3002;</li>
<li>&#x8FDC;&#x7A0B;&#x4E3B;&#x673A;&#x7528;&#x79C1;&#x94A5;&#x89E3;&#x5BC6;&#x767B;&#x5F55;&#x5BC6;&#x7801;&#xFF0C;&#x5BC6;&#x7801;&#x6B63;&#x786E;&#x5219;&#x901A;&#x8FC7;&#x9A8C;&#x8BC1;&#x3002;</li>
</ol>
<a id="more"></a>
<p>&#x5982;&#x679C;&#x901A;&#x4FE1;&#x88AB;&#x622A;&#x83B7;&#xFF0C;&#x5185;&#x5BB9;&#x4E5F;&#x662F;&#x52A0;&#x5BC6;&#x8FC7;&#x7684;&#xFF0C;&#x800C;&#x4E0D;&#x4F1A;&#x76F4;&#x63A5;&#x66B4;&#x9732;&#x51FA;&#x6765;&#xFF0C;&#x56E0;&#x6B64;&#x4E00;&#x76F4;&#x662F;&#x4E3B;&#x6D41;&#x7684;&#x7F51;&#x7EDC;&#x5B89;&#x5168;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x4E4B;&#x4E00;&#x3002;SSH&#x6709;&#x5F88;&#x591A;&#x79CD;&#x5B9E;&#x73B0;&#xFF0C;&#x6211;&#x4EEC;&#x4E0B;&#x6587;&#x6240;&#x8BF4;&#x7684;OpenSSH&#x5C31;&#x662F;&#x5176;&#x4E2D;&#x4E00;&#x79CD;&#x3002;</p>
<p>&#x5BF9;&#x4E8E;linux&#xFF0C;&#x4E00;&#x822C;&#x4F7F;&#x7528;&#x7684;&#x90FD;&#x662F;OpenSSH&#xFF0C;&#x5BF9;&#x4E8E;&#x5C1A;&#x672A;&#x5B89;&#x88C5;&#x76F8;&#x5E94;&#x8F6F;&#x4EF6;&#x7684;&#x673A;&#x5668;&#xFF0C;&#x9700;&#x8981;&#x901A;&#x8FC7;apt-get&#x8FDB;&#x884C;&#x5B89;&#x88C5;&#xFF1A;<br><code>$ sudo apt-get install openssh-server openssh-client</code></p>
<p>&#x7528;SSH&#x8FDC;&#x7A0B;&#x767B;&#x9646;&#x65F6;&#xFF0C;&#x901A;&#x7528;&#x7684;&#x547D;&#x4EE4;&#x662F;(&#x65B9;&#x62EC;&#x53F7;&#x4E2D;&#x7684;&#x5185;&#x5BB9;&#x662F;&#x53EF;&#x9009;&#x7684;)<br><code>$ ssh [-p port] user@host</code></p>
<ul>
<li>user&#x4EE3;&#x8868;&#x8FDC;&#x7A0B;&#x6240;&#x4F7F;&#x7528;&#x7684;&#x767B;&#x9646;&#x540D;(&#x9700;&#x88AB;&#x8FDC;&#x7A0B;&#x673A;&#x5668;&#x4E0A;&#x6709;&#x6B64;&#x7528;&#x6237;&#x540D;)</li>
<li>host&#x4EE3;&#x8868;&#x8FDC;&#x7A0B;&#x673A;&#x5668;&#x7684;&#x5730;&#x5740;</li>
<li>&#x9ED8;&#x8BA4;&#x4F1A;&#x4F7F;&#x7528;22&#x4F5C;&#x4E3A;&#x8FDC;&#x7A0B;&#x4E3B;&#x673A;&#x7684;&#x7AEF;&#x53E3;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x60F3;&#x6539;&#x53D8;&#x7AEF;&#x53E3;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;p&#x53C2;&#x6570;</li>
</ul>
<p>&#x5982;&#x679C;&#x60F3;&#x8981;&#x9000;&#x51FA;&#x767B;&#x9646;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x8F93;&#x5165;exit&#x5C31;&#x80FD;&#x9000;&#x51FA;&#x4E86;&#x3002;</p>
<p>&#x90A3;&#x4E48;&#x80FD;&#x4E0D;&#x80FD;&#x4E0D;&#x7528;&#x6BCF;&#x6B21;&#x8F93;&#x5165;&#x5BC6;&#x7801;&#x767B;&#x9646;&#x5462;&#xFF1F;&#x5F53;&#x7136;&#x53EF;&#x4EE5;&#xFF0C;&#x56E0;&#x4E3A;SSH&#x652F;&#x6301;&#x516C;&#x94A5;&#x767B;&#x9646;&#x3002;</p>
<blockquote>
<p>&#x9996;&#x5148;&#x7B80;&#x5355;&#x8BB2;&#x8BB2;&#x516C;&#x94A5;&#x9A8C;&#x8BC1;&#x673A;&#x5236;&#xFF1A;&#x516C;&#x94A5;(public key)&#x548C;&#x79C1;&#x94A5;(private key)&#x662F;&#x4E24;&#x4EFD;&#x6587;&#x4EF6;&#xFF0C;&#x670D;&#x52A1;&#x7AEF;&#x6301;&#x6709;&#x516C;&#x94A5;&#xFF0C;&#x7528;&#x6765;&#x52A0;&#x5BC6;&#xFF1B;&#x5BA2;&#x6237;&#x7AEF;&#x6301;&#x6709;&#x79C1;&#x94A5;&#xFF0C;&#x7528;&#x6765;&#x89E3;&#x5BC6;&#x3002;&#x5BA2;&#x6237;&#x7AEF;&#x5411;&#x670D;&#x52A1;&#x7AEF;&#x53D1;&#x8D77;&#x8FDE;&#x63A5;&#x8BF7;&#x6C42;&#x65F6;&#xFF0C;&#x670D;&#x52A1;&#x7AEF;&#x4F1A;&#x751F;&#x6210;&#x4E00;&#x4E32;&#x968F;&#x673A;&#x6570;&#xFF0C;&#x7ECF;&#x8FC7;&#x516C;&#x94A5;&#x52A0;&#x5BC6;&#x540E;&#x4F20;&#x7ED9;&#x5BA2;&#x6237;&#x7AEF;&#x3002;&#x8FD9;&#x65F6;&#x5BA2;&#x6237;&#x7AEF;&#x4F1A;&#x7528;&#x79C1;&#x94A5;&#x89E3;&#x5BC6;&#x83B7;&#x53D6;&#x968F;&#x673A;&#x6570;&#xFF0C;&#x518D;&#x8FD4;&#x56DE;&#x670D;&#x52A1;&#x7AEF;&#x3002;&#x6700;&#x540E;&#x670D;&#x52A1;&#x7AEF;&#x5224;&#x65AD;&#x4E00;&#x4E0B;&#xFF0C;&#x5982;&#x679C;&#x5BA2;&#x6237;&#x7AEF;&#x80FD;&#x591F;&#x8FD4;&#x56DE;&#x6B63;&#x786E;&#x7684;&#x968F;&#x673A;&#x6570;&#xFF0C;&#x5C31;&#x8BA4;&#x4E3A;&#x6821;&#x9A8C;&#x901A;&#x8FC7;&#x4E86; &#xFF0C;&#x53EF;&#x4EE5;&#x8FDB;&#x884C;&#x8FDE;&#x63A5;&#x3002;&#x5426;&#x5219;&#x5C31;&#x4E0D;&#x80FD;&#x8FDE;&#x63A5;&#x3002;</p>
</blockquote>
<p>&#x7528;&#x6237;&#x9700;&#x8981;&#x63D0;&#x4F9B;&#x81EA;&#x5DF1;&#x7684;&#x516C;&#x94A5;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#xFF0C;&#x53EF;&#x4EE5;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#xFF0C;&#x4F7F;&#x7528;&#x547D;&#x4EE4;<br><code>$ ssh-keygen</code><br>&#x8FD9;&#x4E2A;&#x547D;&#x4EE4;&#x4F1A;&#x5728;&#x9ED8;&#x8BA4;&#x4E3A;<code>$HOME/.ssh/</code>&#x76EE;&#x5F55;&#x4E0B;&#x751F;&#x6210;&#x4E24;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;&#x4E00;&#x4E2A;&#x662F;<code>id_rsa.pub</code>(&#x516C;&#x94A5;)&#xFF0C;&#x53E6;&#x4E00;&#x4E2A;&#x662F;<code>id_rsa</code>(&#x79C1;&#x94A5;)&#xFF0C;&#x751F;&#x6210;&#x79C1;&#x94A5;&#x7684;&#x65F6;&#x5019;&#x53EF;&#x80FD;&#x4F1A;&#x8BE2;&#x95EE;&#x4F60;&#x9700;&#x8981;&#x4E0D;&#x9700;&#x8981;&#x8BBE;&#x7F6E;&#x53E3;&#x4EE4;(passphrase)&#xFF0C;&#x5982;&#x679C;&#x62C5;&#x5FC3;&#x5B83;&#x7684;&#x5B89;&#x5168;&#xFF0C;&#x53EF;&#x4EE5;&#x8BBE;&#x7F6E;&#x4E00;&#x4E2A;&#x3002;</p>
<p>&#x63A5;&#x7740;&#x4F60;&#x5C31;&#x53EF;&#x4EE5;&#x4F20;&#x9001;&#x516C;&#x94A5;&#x5230;&#x60F3;&#x8981;&#x8BBF;&#x95EE;&#x7684;&#x4E3B;&#x673A;&#x4E0A;&#x9762;&#xFF1A;<br><code>$ ssh-copy-id user@host</code></p>
<p>&#x4ECE;&#x6B64;&#x767B;&#x9646;&#x8FD9;&#x53F0;&#x4E3B;&#x673A;&#xFF0C;&#x5C31;&#x4E0D;&#x9700;&#x8981;&#x5BC6;&#x7801;&#x4E86;&#x3002;<br>&#x9700;&#x6CE8;&#x610F;&#xFF0C;&#x4E3B;&#x673A;&#x7684;<code>/etc/ssh/sshd_config</code>&#x6587;&#x4EF6;&#x4E2D;&#x9700;&#x5B58;&#x5728;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;&#x3002;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">RSAAuthentication yes</div><div class="line">PubkeyAuthentication yes</div><div class="line">AuthorizedKeysFile .ssh/authorized_keys</div></pre></td></tr></table></figure></p>
<p>&#x6709;&#x65F6;&#x9700;&#x8981;&#x5728;&#x672C;&#x5730;&#x548C;&#x8FDC;&#x7A0B;&#x673A;&#x5668;&#x95F4;&#x4F20;&#x9001;&#x6587;&#x4EF6;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;scp&#x547D;&#x4EE4;&#x6765;&#x8FDB;&#x884C;&#x3002;</p>
<ul>
<li>&#x4E0A;&#x4F20;&#x6587;&#x4EF6;&#x5230;&#x8FDC;&#x7A0B;&#x76EE;&#x5F55;&#xFF1A;<br><code>$ scp /path/file user@host:/path</code></li>
<li>&#x4ECE;&#x8FDC;&#x7A0B;&#x76EE;&#x5F55;&#x4E0B;&#x8F7D;&#x6587;&#x4EF6;&#xFF1A;<br><code>$ scp user@host:/path/file /path</code></li>
<li>&#x4E0A;&#x4F20;&#x6587;&#x4EF6;&#x5939;&#x5230;&#x8FDC;&#x7A0B;&#x76EE;&#x5F55;&#xFF1A;<br><code>$ scp -r /path/dir user@host:/path</code></li>
<li>&#x4ECE;&#x8FDC;&#x7A0B;&#x76EE;&#x5F55;&#x4E0B;&#x8F7D;&#x6587;&#x4EF6;&#x5939;&#xFF1A;<br><code>$ scp -r user@host:/path/dir /path</code></li>
</ul>
<p>&#x6700;&#x540E;&#x8C08;&#x8C08;SSH&#x7684;&#x5C40;&#x9650;&#x6027;&#xFF1A;</p>
<p>SSH&#x5B58;&#x5728;&#x4E00;&#x4E2A;&#x98CE;&#x9669;&#xFF0C;&#x5C31;&#x662F;SSH&#x7684;&#x534F;&#x8BAE;&#x516C;&#x94A5;&#x662F;&#x6CA1;&#x6709;&#x8BC1;&#x4E66;&#x516C;&#x8BC1;&#x7684;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x53EF;&#x80FD;&#x5B58;&#x5728;<strong>&#x201C;&#x4E2D;&#x95F4;&#x4EBA;&#x201D;</strong>&#x622A;&#x83B7;&#x4E86;&#x767B;&#x9646;&#x8BF7;&#x6C42;&#xFF0C;&#x5E76;&#x5192;&#x5145;&#x8FDC;&#x7A0B;&#x4E3B;&#x673A;&#x5C06;&#x81EA;&#x5DF1;&#x4F2A;&#x9020;&#x7684;&#x516C;&#x94A5;&#x53D1;&#x9001;&#x7ED9;&#x7528;&#x6237;&#xFF0C;&#x5C31;&#x80FD;&#x5F97;&#x5230;&#x7528;&#x6237;&#x63A5;&#x4E0B;&#x6765;&#x53D1;&#x9001;&#x7684;&#x5BC6;&#x7801;&#x3002;&#x8FD9;&#x79CD;&#x653B;&#x51FB;&#x53EB;&#x505A;<strong>&#x4E2D;&#x95F4;&#x4EBA;&#x653B;&#x51FB;</strong>&#x3002;</p>
<p>SSH&#x89E3;&#x51B3;&#x7684;&#x529E;&#x6CD5;&#x662F;&#x5728;&#x767B;&#x9646;&#x65F6;&#x53D1;&#x9001;&#x516C;&#x94A5;&#x6307;&#x7EB9;&#x7ED9;&#x7528;&#x6237;&#xFF0C;&#x7528;&#x6237;&#x81EA;&#x5DF1;&#x6839;&#x636E;&#x8FD9;&#x4E00;&#x6307;&#x7EB9;&#x548C;&#x8FDC;&#x7A0B;&#x4E3B;&#x673A;&#x516C;&#x5E03;&#x7684;&#x6307;&#x7EB9;&#x8FDB;&#x884C;&#x6838;&#x5BF9;&#x3002;&#x7528;&#x6237;&#x4E5F;&#x8981;&#x81EA;&#x884C;&#x627F;&#x62C5;&#x98CE;&#x9669;&#x3002;</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oanr6klwj.bkt.clouddn.com/blog/ssh-base-cover.png&quot; alt=&quot;cover&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://www.pixiv.net/member_illust.php?mode=medium&amp;amp;illust_id=59600727&quot;&gt;&lt;em&gt;pixiv-ID: 59600727&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在开发场景中，开发人员免不了和服务器打交道，无论是连接服务器还是自己虚拟机中搭建的开发环境，都离不开SSH的应用。&lt;/p&gt;
&lt;p&gt;SSH是一种网络协议，用于计算机之间的加密登陆。通过公钥加密进行信息保护，过程为：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;远程主机收到用户登陆请求，发送公钥到用户。&lt;/li&gt;
&lt;li&gt;用户用公钥加密密码发送到远程主机。&lt;/li&gt;
&lt;li&gt;远程主机用私钥解密登录密码，密码正确则通过验证。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="Network" scheme="http://lovin0730.github.io/tags/network/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript异步编程进化论</title>
    <link href="http://lovin0730.github.io/2016/09/07/js-async/"/>
    <id>http://lovin0730.github.io/2016/09/07/js-async/</id>
    <published>2016-09-07T09:12:43.000Z</published>
    <updated>2016-09-08T14:08:05.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://oanr6klwj.bkt.clouddn.com/blog/js-async-cover.jpg" alt="cover"></p>
<blockquote>
<p><a href="http://www.pixiv.net/member_illust.php?mode=medium&amp;illust_id=16810195" target="_blank" rel="external"><em>pixiv-ID: 16810195</em></a></p>
</blockquote>
<p>&#x4F17;&#x6240;&#x5468;&#x77E5;&#xFF0C;JavaScript&#x7684;&#x6267;&#x884C;&#x73AF;&#x5883;&#x662F;&#x5355;&#x7EBF;&#x7A0B;&#x7684;&#xFF0C;&#x8FD9;&#x610F;&#x5473;&#x7740;&#x5982;&#x679C;&#x6709;&#x5F88;&#x591A;&#x4EFB;&#x52A1;&#xFF0C;&#x5C31;&#x53EA;&#x80FD;&#x6392;&#x961F;&#x4E00;&#x4E2A;&#x4E00;&#x4E2A;&#x6267;&#x884C;&#x3002;&#x8BF7;&#x770B;&#x4E0B;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x3002;<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">console</span>.log(<span class="number">1</span>);</div><div class="line"><span class="keyword">var</span> X = <span class="number">100000</span>;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; X; i++) {</div><div class="line">}</div><div class="line"><span class="built_in">console</span>.log(<span class="number">2</span>);</div></pre></td></tr></table></figure></p>
<p>&#x968F;&#x7740;X&#x7684;&#x589E;&#x5927;&#xFF0C;&#x6253;&#x5370;1&#x548C;2&#x4E4B;&#x95F4;&#x51FA;&#x73B0;&#x7684;&#x65F6;&#x95F4;&#x95F4;&#x9694;&#x4E5F;&#x5728;&#x660E;&#x663E;&#x53D8;&#x957F;&#x3002;&#x5BF9;&#x6B64;&#xFF0C;JavaScript&#x91C7;&#x53D6;&#x5F02;&#x6B65;&#x6765;&#x5904;&#x7406;&#x8FD9;&#x79CD;&#x95EE;&#x9898;&#x3002;<br><a id="more"></a><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">console</span>.log(<span class="number">1</span>);</div><div class="line">setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> {</div><div class="line">  <span class="built_in">console</span>.log(<span class="number">2</span>)</div><div class="line">}, <span class="number">2000</span>);</div><div class="line"><span class="built_in">console</span>.log(<span class="number">3</span>)</div></pre></td></tr></table></figure></p>
<p>&#x4E8B;&#x5B9E;&#x4E0A;&#xFF0C;&#x6253;&#x5370;&#x7684;&#x7ED3;&#x679C;&#x662F;1&#x3001;3&#x3001;2&#xFF0C;setTimeout&#x662F;&#x4E00;&#x4E2A;&#x5178;&#x578B;&#x7684;&#x5F02;&#x6B65;&#x64CD;&#x4F5C;&#xFF0C;&#x6240;&#x4EE5;JavaScript&#x5F15;&#x64CE;&#x6267;&#x884C;&#x5230;&#x5B83;&#x65F6;&#xFF0C;&#x4F1A;&#x8BA9;&#x5B83;&#x5F02;&#x6B65;&#x6267;&#x884C;&#xFF0C;&#x800C;&#x81EA;&#x5DF1;&#x7EE7;&#x7EED;&#x6267;&#x884C;&#x540E;&#x9762;&#x7684;&#x4EFB;&#x52A1;&#xFF0C;&#x7B49;&#x5230;&#x5F02;&#x6B65;&#x64CD;&#x4F5C;&#x6709;&#x4E86;&#x7ED3;&#x679C;&#xFF0C;&#x518D;&#x8FDB;&#x884C;&#x5904;&#x7406;&#x3002;<br>&#x4F46;&#x662F;&#x5F02;&#x6B65;&#x7F16;&#x7A0B;&#x7684;&#x65B9;&#x6CD5;&#x662F;&#x503C;&#x5F97;&#x8BA8;&#x8BBA;&#x7684;&#xFF0C;&#x4E0B;&#x9762;&#x6211;&#x7528;Node.js&#x73AF;&#x5883;&#x6765;&#x8FDB;&#x884C;&#x540E;&#x7EED;&#x7684;&#x6F14;&#x793A;&#x3002;<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&apos;http&apos;</span>);</div><div class="line">http.createServer(<span class="function">(<span class="params">req, res</span>) =&gt;</span> {</div><div class="line">  res.writeHead(<span class="number">200</span>, {</div><div class="line">    <span class="string">&apos;Content-Type&apos;</span>: <span class="string">&apos;text/plain&apos;</span></div><div class="line">  });</div><div class="line">  <span class="comment">//TODO</span></div><div class="line">}).listen(<span class="number">3000</span>, <span class="built_in">console</span>.log(<span class="string">&apos;callback running at localhost:3000&apos;</span>));</div></pre></td></tr></table></figure></p>
<p>&#x6211;&#x521B;&#x5EFA;&#x4E86;&#x4E00;&#x4E2A;&#x672C;&#x5730;&#x670D;&#x52A1;&#x5668;&#xFF0C;<strong>&#x540E;&#x9762;&#x4E66;&#x5199;&#x7684;&#x6240;&#x6709;&#x4EE3;&#x7801;&#x90FD;&#x653E;&#x5728;&#x6CE8;&#x91CA;&#x4E3A;<code>TODO</code>&#x7684;&#x4F4D;&#x7F6E;&#x6267;&#x884C;</strong>&#x3002;</p>
<hr>
<h2 id="callback"><a href="#Callback" class="headerlink" title="Callback"></a>Callback</h2><p>&#x65E9;&#x671F;&#x7684;&#x5927;&#x591A;&#x6570;&#x5F02;&#x6B65;&#x64CD;&#x4F5C;&#x90FD;&#x662F;&#x901A;&#x8FC7;&#x56DE;&#x8C03;&#x51FD;&#x6570;&#x6765;&#x5B8C;&#x6210;&#x7684;&#x3002;&#x4E0B;&#x9762;&#x6211;&#x4EEC;&#x7528;delay&#x51FD;&#x6570;&#x6765;&#x6A21;&#x62DF;&#x5F02;&#x6B65;&#x7684;&#x6570;&#x636E;&#x83B7;&#x53D6;(&#x5C31;&#x50CF;&#x5BA2;&#x6237;&#x7AEF;&#x901A;&#x8FC7;Ajax&#x6216;&#x662F;&#x670D;&#x52A1;&#x7AEF;&#x64CD;&#x4F5C;&#x6570;&#x636E;&#x5E93;&#x6240;&#x83B7;&#x53D6;&#x7684;&#x6570;&#x636E;)&#x3002;<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> delay = <span class="function">(<span class="params">msg, callback</span>) =&gt;</span> {</div><div class="line">  setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> {</div><div class="line">    callback(msg + <span class="string">&apos;\n&apos;</span>);</div><div class="line">  }, <span class="number">0</span>);</div><div class="line">}</div><div class="line">delay(<span class="string">&apos;delay begin&apos;</span>, (data) =&gt; {</div><div class="line">  res.write(data);</div><div class="line">  delay(<span class="string">&apos;delay end&apos;</span>, (data) =&gt; {</div><div class="line">    res.write(data);</div><div class="line">    delay(<span class="string">&apos;callback work&apos;</span>, (data) =&gt; {</div><div class="line">      res.write(data);</div><div class="line">      delay(<span class="string">&apos;done&apos;</span>, (data) =&gt; {</div><div class="line">        res.write(data);</div><div class="line">        res.end();</div><div class="line">      })</div><div class="line">    })</div><div class="line">  })</div><div class="line">});</div></pre></td></tr></table></figure></p>
<p>&#x6211;&#x4EEC;&#x53D1;&#x73B0;&#x95EE;&#x9898;&#x7684;&#x6240;&#x5728;&#x4E86;&#xFF0C;&#x7531;&#x4E8E;&#x6570;&#x636E;&#x53EA;&#x80FD;&#x5728;&#x56DE;&#x8C03;&#x51FD;&#x6570;&#x5185;&#x8FDB;&#x884C;&#x4F7F;&#x7528;&#x548C;&#x64CD;&#x4F5C;&#xFF0C;&#x8FD9;&#x5BFC;&#x81F4;&#x4E86;&#x5197;&#x957F;&#x7684;&#x56DE;&#x8C03;&#x51FD;&#x6570;&#x7684;&#x51FA;&#x73B0;&#xFF0C;&#x800C;&#x4E14;&#x975E;&#x5E38;&#x96BE;&#x4EE5;&#x9605;&#x8BFB;&#x3002;&#x8FD9;&#x5C31;&#x662F;&#x8457;&#x540D;&#x7684;callback hell&#xFF0C;&#x5BF9;&#x4E8E;&#x9700;&#x8981;&#x8FDE;&#x7EED;&#x8FDB;&#x884C;&#x5F02;&#x6B65;&#x64CD;&#x4F5C;&#x7684;&#x5E94;&#x7528;&#xFF0C;&#x8FD9;&#x6837;&#x7684;&#x5B9E;&#x73B0;&#x65B9;&#x6848;&#x65E0;&#x7591;&#x662F;&#x7EF4;&#x62A4;&#x8005;&#x7684;&#x5669;&#x68A6;&#x3002;</p>
<hr>
<h2 id="promise"><a href="#Promise" class="headerlink" title="Promise"></a>Promise</h2><p>&#x56E0;&#x6B64;&#xFF0C;Promise&#x5E94;&#x8FD0;&#x800C;&#x751F;&#xFF0C;&#x5B83;&#x6539;&#x53D8;&#x4E86;&#x5199;&#x6CD5;&#x3002;&#x8BF7;&#x770B;&#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x3002;<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> delay = <span class="function">(<span class="params">msg</span>) =&gt;</span> {</div><div class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> {</div><div class="line">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> {</div><div class="line">      resolve(msg + <span class="string">&apos;\n&apos;</span>);</div><div class="line">    }, <span class="number">0</span>);</div><div class="line">  });</div><div class="line">}</div><div class="line">delay(<span class="string">&apos;delay begin&apos;</span>).then(<span class="function">(<span class="params">data</span>) =&gt;</span> {</div><div class="line">  res.write(data);</div><div class="line">}).then(<span class="function"><span class="params">()</span> =&gt;</span> {</div><div class="line">  <span class="keyword">return</span> delay(<span class="string">&apos;delay end&apos;</span>);</div><div class="line">}).then(<span class="function">(<span class="params">data</span>) =&gt;</span> {</div><div class="line">  res.write(data);</div><div class="line">}).then(<span class="function"><span class="params">()</span> =&gt;</span> {</div><div class="line">  <span class="keyword">return</span> delay(<span class="string">&apos;promise work&apos;</span>);</div><div class="line">}).then(<span class="function">(<span class="params">data</span>) =&gt;</span> {</div><div class="line">  res.write(data);</div><div class="line">}).then(<span class="function"><span class="params">()</span> =&gt;</span> {</div><div class="line">  <span class="keyword">return</span> delay(<span class="string">&apos;done&apos;</span>);</div><div class="line">}).then(<span class="function">(<span class="params">data</span>) =&gt;</span> {</div><div class="line">  res.write(data);</div><div class="line">  res.end();</div><div class="line">});</div></pre></td></tr></table></figure></p>
<p>&#x8FD9;&#x6837;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x80FD;&#x901A;&#x8FC7;&#x94FE;&#x5F0F;&#x8C03;&#x7528;&#x6765;&#x4E66;&#x5199;&#x5F02;&#x6B65;&#x64CD;&#x4F5C;&#xFF0C;&#x4EFB;&#x52A1;&#x5148;&#x540E;&#x987A;&#x5E8F;&#x6E05;&#x6670;&#x6613;&#x61C2;&#x3002;&#x53EA;&#x662F;&#xFF0C;&#x8FD9;&#x4EFD;&#x4EE3;&#x7801;&#x5BF9;&#x4E8E;&#x7EF4;&#x62A4;&#x8005;&#x663E;&#x7136;&#x4E5F;&#x4E0D;&#x662F;&#x90A3;&#x4E48;&#x53CB;&#x597D;&#xFF0C;&#x8981;&#x8FDB;&#x884C;&#x4FEE;&#x6539;&#xFF0C;&#x5C31;&#x8981;&#x5BF9;&#x957F;&#x957F;&#x7684;&#x94FE;&#x5F0F;&#x8C03;&#x7528;&#x8FDB;&#x884C;&#x9605;&#x8BFB;&#x548C;&#x4FEE;&#x6539;&#x3002;&#x5728;&#x5EA6;&#x8FC7;jQuery&#x65F6;&#x4EE3;&#x65F6;&#xFF0C;&#x8FD9;&#x79CD;&#x5199;&#x6CD5;&#x7684;&#x5F0A;&#x7AEF;&#x5DF2;&#x7ECF;&#x66B4;&#x6F0F;&#x65E0;&#x7591;&#x3002;</p>
<hr>
<h2 id="generator"><a href="#Generator" class="headerlink" title="Generator"></a>Generator</h2><p>ES6&#x4E3A;&#x6211;&#x4EEC;&#x63D0;&#x4F9B;&#x4E86;&#x66F4;&#x65B0;&#x7684;&#x5F02;&#x6B65;&#x64CD;&#x4F5C;&#x601D;&#x8DEF;&#xFF0C;&#x90A3;&#x5C31;&#x662F;&#x4F7F;&#x7528;Generator&#x51FD;&#x6570;&#x3002;<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> delay = <span class="function">(<span class="params">msg</span>) =&gt;</span> {</div><div class="line">  setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> {</div><div class="line">    to.next(msg + <span class="string">&apos;\n&apos;</span>);</div><div class="line">  }, <span class="number">100</span>);</div><div class="line">}</div><div class="line"><span class="function"><span class="keyword">function</span>* <span class="title">todo</span>(<span class="params"></span>) </span>{</div><div class="line">  <span class="keyword">const</span> begin = <span class="keyword">yield</span> delay(<span class="string">&apos;delay begin&apos;</span>);</div><div class="line">  res.write(begin);</div><div class="line">  <span class="keyword">const</span> end = <span class="keyword">yield</span> delay(<span class="string">&apos;delay end&apos;</span>);</div><div class="line">  res.write(end);</div><div class="line">  <span class="keyword">const</span> generator = <span class="keyword">yield</span> delay(<span class="string">&apos;generator work&apos;</span>);</div><div class="line">  res.write(generator);</div><div class="line">  <span class="keyword">const</span> done = <span class="keyword">yield</span> delay(<span class="string">&apos;done&apos;</span>);</div><div class="line">  res.write(done);</div><div class="line">  res.end();</div><div class="line">}</div><div class="line"><span class="keyword">let</span> to = todo();</div><div class="line">to.next();</div></pre></td></tr></table></figure></p>
<p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5728;&#x51FD;&#x6570;&#x58F0;&#x660E;&#x65F6;&#x52A0;&#x4E0A;&#x661F;&#x53F7;&#x521B;&#x5EFA;Generator&#x51FD;&#x6570;&#x3002;&#x5B83;&#x5141;&#x8BB8;&#x51FD;&#x6570;&#x5728;&#x6267;&#x884C;&#x8FC7;&#x7A0B;&#x4E2D;&#x9000;&#x51FA;&#x548C;&#x91CD;&#x65B0;&#x8FDB;&#x5165;&#xFF0C;&#x4E14;&#x91CD;&#x65B0;&#x8FDB;&#x5165;&#x65F6;&#x7684;&#x73AF;&#x5883;&#xFF08;&#x4F8B;&#x5982;&#x53D8;&#x91CF;&#x7B49;&#xFF09;&#x53EF;&#x4EE5;&#x7EE7;&#x7EED;&#x4F7F;&#x7528;&#x3002;<br>&#x8C03;&#x7528;Generator&#x5E76;&#x4E0D;&#x4F1A;&#x7ACB;&#x5373;&#x6267;&#x884C;&#xFF0C;&#x800C;&#x662F;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;Iterator&#x5BF9;&#x8C61;&#xFF0C;&#x6BCF;&#x6B21;&#x8C03;&#x7528;&#x8FD9;&#x4E2A;&#x5BF9;&#x8C61;&#x7684;next&#x65B9;&#x6CD5;&#xFF0C;&#x5B83;&#x4F1A;&#x6267;&#x884C;&#x5230;&#x7B2C;&#x4E00;&#x4E2A;yield&#x8868;&#x8FBE;&#x5F0F;&#x4E4B;&#x524D;&#xFF0C;&#x8FD9;&#x4E2A;&#x8868;&#x8FBE;&#x5F0F;&#x5B9A;&#x4E49;&#x4E86;&#x8FD4;&#x56DE;&#x503C;&#x4EE5;&#x53CA;&#x8FD4;&#x56DE;&#x72B6;&#x6001;&#x3002;&#x53EF;&#x4EE5;&#x5BF9;next&#x65B9;&#x6CD5;&#x76F4;&#x63A5;&#x4F20;&#x5165;&#x53C2;&#x6570;&#x6765;&#x89C4;&#x5B9A;&#x8FD4;&#x56DE;&#x503C;&#x3002;<br>&#x5176;&#x5B9E;&#xFF0C;Generator&#x60F3;&#x505A;&#x7684;&#x5C31;&#x662F;<strong>&#x8BA9;&#x5F02;&#x6B65;&#x7F16;&#x7A0B;&#x8D8A;&#x6765;&#x8D8A;&#x50CF;&#x540C;&#x6B65;&#x7F16;&#x7A0B;</strong>&#x3002;&#x4E0A;&#x8FF0;&#x4EE3;&#x7801;&#x4E2D;&#x6211;&#x4EEC;&#x53D1;&#x73B0;&#x5B83;&#x786E;&#x5B9E;&#x8FBE;&#x5230;&#x4E86;&#x76EE;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x5B83;&#x4E5F;&#x6709;&#x663E;&#x800C;&#x6613;&#x89C1;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x90A3;&#x5C31;&#x662F;&#x6211;&#x4EEC;&#x5728;&#x4E66;&#x5199;&#x5F02;&#x6B65;&#x64CD;&#x4F5C;&#x65F6;&#x603B;&#x8981;&#x7262;&#x8BB0;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x8981;&#x8C03;&#x7528;next&#xFF0C;&#x4E14;&#x5F02;&#x6B65;&#x64CD;&#x4F5C;&#x548C;&#x8C03;&#x7528;Generator&#x51FD;&#x6570;&#x751F;&#x6210;&#x7684;&#x5B9E;&#x4F8B;&#x603B;&#x8981;&#x653E;&#x5728;&#x540C;&#x4E00;&#x4F5C;&#x7528;&#x57DF;&#xFF0C;&#x8026;&#x5408;&#x5EA6;&#x5F88;&#x9AD8;&#xFF0C;&#x518D;&#x52A0;&#x4E0A;&#x7B2C;&#x4E00;&#x6B21;&#x7684;next&#x65B9;&#x6CD5;&#x8981;&#x624B;&#x52A8;&#x8C03;&#x7528;&#xFF0C;&#x56E0;&#x6B64;&#x8FD9;&#x4E00;&#x65B9;&#x6848;&#x6CE8;&#x5B9A;&#x8FD8;&#x6709;&#x5F88;&#x5927;&#x7684;&#x63D0;&#x5347;&#x7A7A;&#x95F4;&#x3002;</p>
<hr>
<h2 id="thunk-generator"><a href="#Thunk-Generator" class="headerlink" title="Thunk Generator"></a>Thunk Generator</h2><p>Thunk&#x51FD;&#x6570;&#x662F;&#x4E00;&#x79CD;&#x9AD8;&#x9636;&#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x652F;&#x6301;&#x6211;&#x4EEC;&#x5C06;&#x4E00;&#x4E2A;<strong>&#x5E26;&#x6709;&#x56DE;&#x8C03;&#x51FD;&#x6570;&#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#x7684;&#x591A;&#x53C2;&#x51FD;&#x6570;&#x8F6C;&#x5316;&#x4E3A;&#x5355;&#x53C2;&#x7248;&#x672C;</strong>&#x3002;&#x4E3E;&#x4E2A;&#x4F8B;&#x5B50;&#xFF1A;<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//&#x5E26;&#x56DE;&#x8C03;&#x51FD;&#x6570;&#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#x7684;&#x591A;&#x53C2;&#x51FD;&#x6570;</span></div><div class="line"><span class="keyword">const</span> delay = <span class="function">(<span class="params">msg, callback</span>) =&gt;</span> {</div><div class="line">  setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> {</div><div class="line">    callback(msg);</div><div class="line">  }, <span class="number">0</span>);</div><div class="line">};</div><div class="line"><span class="comment">//&#x5E38;&#x89C4;&#x8C03;&#x7528;</span></div><div class="line">delay(<span class="string">&apos;your msg&apos;</span>, () =&gt; {</div><div class="line">  <span class="comment">//whatever</span></div><div class="line">});</div><div class="line"><span class="comment">//Thunk&#x5316;</span></div><div class="line"><span class="keyword">const</span> delay_thunk = Thunk(delay);</div><div class="line"><span class="comment">//Thunk&#x5316;&#x4E4B;&#x540E;&#x7684;&#x8C03;&#x7528;</span></div><div class="line">delay(<span class="string">&apos;your msg&apos;</span>)(<span class="function"><span class="params">()</span> =&gt;</span> {</div><div class="line">  <span class="comment">//whatever</span></div><div class="line">});</div></pre></td></tr></table></figure></p>
<p>&#x5982;&#x679C;&#x6211;&#x4EEC;&#x4F7F;&#x7528;Thunk&#x5316;&#x4E4B;&#x540E;&#x7684;delay&#x51FD;&#x6570;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x6709;&#x5E0C;&#x671B;&#x628A;generator&#x51FD;&#x6570;&#x4E2D;&#x6267;&#x884C;&#x7684;&#x5F02;&#x6B65;&#x51FD;&#x6570;&#x548C;next&#x65B9;&#x6CD5;&#x5206;&#x79BB;&#x5F00;&#x6765;&#xFF0C;&#x5E76;&#x5236;&#x9020;&#x51FA;&#x4E00;&#x4E2A;generator&#x81EA;&#x52A8;&#x6267;&#x884C;&#x5668;&#x3002;<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> Thunk = <span class="function">(<span class="params">f</span>) =&gt;</span> {</div><div class="line">  <span class="keyword">return</span> <span class="function">(<span class="params">...args</span>) =&gt;</span> {</div><div class="line">    <span class="keyword">return</span> <span class="function">(<span class="params">callback</span>) =&gt;</span> {</div><div class="line">      <span class="keyword">return</span> f.call(<span class="keyword">this</span>, ...args, callback);</div><div class="line">    }</div><div class="line">  }</div><div class="line">};</div><div class="line"><span class="keyword">const</span> delay = <span class="function">(<span class="params">msg, callback</span>) =&gt;</span> {</div><div class="line">  setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> {</div><div class="line">    callback(msg);</div><div class="line">  }, <span class="number">0</span>);</div><div class="line">}</div><div class="line"><span class="keyword">const</span> write = <span class="function">(<span class="params">pass</span>) =&gt;</span> {</div><div class="line">  res.write(pass + <span class="string">&apos;\n&apos;</span>);</div><div class="line">}</div><div class="line"><span class="keyword">const</span> runG = <span class="function">(<span class="params">g</span>) =&gt;</span> {</div><div class="line">  <span class="keyword">const</span> it = g();</div><div class="line">  !<span class="function"><span class="keyword">function</span> <span class="title">next</span>(<span class="params">data</span>)</span>{</div><div class="line">    <span class="keyword">let</span> result = it.next(data);</div><div class="line">    <span class="keyword">if</span> (!result.done) {</div><div class="line">      result.value(next);</div><div class="line">    }</div><div class="line">  }();</div><div class="line">};</div><div class="line"><span class="keyword">const</span> td = Thunk(delay);</div><div class="line"><span class="keyword">const</span> todo = <span class="function"><span class="keyword">function</span>* (<span class="params"></span>) </span>{</div><div class="line">  <span class="keyword">const</span> begin = <span class="keyword">yield</span> td(<span class="string">&apos;delay begin&apos;</span>);</div><div class="line">  <span class="keyword">const</span> end = <span class="keyword">yield</span> td(<span class="string">&apos;delay end&apos;</span>);</div><div class="line">  <span class="keyword">const</span> gValue = <span class="keyword">yield</span> td(<span class="string">&apos;generator thunk value&apos;</span>);</div><div class="line">  <span class="keyword">const</span> done = <span class="keyword">yield</span> td(<span class="string">&apos;done&apos;</span>);</div><div class="line">  write(begin);</div><div class="line">  write(end);</div><div class="line">  write(gValue);</div><div class="line">  write(done);</div><div class="line">  res.end();</div><div class="line">}</div><div class="line">runG(todo);</div></pre></td></tr></table></figure></p>
<p>&#x4E5F;&#x8BB8;&#x6700;&#x96BE;&#x7406;&#x89E3;&#x7684;&#x5C31;&#x662F;&#x81EA;&#x52A8;&#x5904;&#x7406;generator&#x7684;&#x51FD;&#x6570;<code>runG</code>&#x4E86;&#xFF0C;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x5176;&#x5B9E;&#x901A;&#x8FC7;&#x9012;&#x5F52;&#x5C42;&#x5C42;&#x8C03;&#x7528;generator&#x51FD;&#x6570;&#x7684;next&#x65B9;&#x6CD5;&#x3002;<br>&#x8FD9;&#x975E;&#x5E38;&#x6709;&#x610F;&#x4E49;&#xFF0C;&#x56E0;&#x4E3A;&#x8FD9;&#x4E0B;&#x5F02;&#x6B65;&#x64CD;&#x4F5C;&#x771F;&#x6B63;&#x505A;&#x5230;&#x4E86;&#x5C06;&#x7ED3;&#x679C;&#x5206;&#x79BB;&#x51FA;&#x6765;&#x4F9B;&#x5916;&#x90E8;&#x8FDB;&#x884C;&#x4F7F;&#x7528;&#x548C;&#x64CD;&#x4F5C;&#x3002;</p>
<hr>
<h2 id="promise-generator"><a href="#Promise-Generator" class="headerlink" title="Promise Generator"></a>Promise Generator</h2><p>&#x5982;&#x679C;&#x4E0D;&#x60F3;&#x501F;&#x52A9;thunk&#x51FD;&#x6570;&#xFF0C;&#x6211;&#x4EEC;&#x8FD8;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;promise&#xFF0C;&#x5B83;&#x8FD8;&#x514D;&#x53BB;&#x4E86;&#x6211;&#x4EEC;&#x624B;&#x5199;<code>Thunk</code>&#x51FD;&#x6570;&#x7684;&#x9EBB;&#x70E6;&#xFF0C;&#x8BF7;&#x770B;&#x4EE3;&#x7801;&#x3002;<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> delay = <span class="function">(<span class="params">msg</span>) =&gt;</span> {</div><div class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> {</div><div class="line">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> {</div><div class="line">      resolve(msg);</div><div class="line">    }, <span class="number">0</span>);</div><div class="line">  });</div><div class="line">}</div><div class="line"><span class="keyword">const</span> write = <span class="function">(<span class="params">pass</span>) =&gt;</span> {</div><div class="line">  res.write(pass + <span class="string">&apos;\n&apos;</span>);</div><div class="line">}</div><div class="line"><span class="keyword">const</span> runG = <span class="function">(<span class="params">g</span>) =&gt;</span> {</div><div class="line">  <span class="keyword">const</span> it = g();</div><div class="line">  !<span class="function"><span class="keyword">function</span> <span class="title">next</span>(<span class="params">data</span>)</span>{</div><div class="line">    <span class="keyword">let</span> result = it.next(data);</div><div class="line">    <span class="keyword">if</span> (!result.done) {</div><div class="line">      result.value.then(<span class="function">(<span class="params">data</span>) =&gt;</span> {</div><div class="line">        next(data);</div><div class="line">      });</div><div class="line">    } <span class="keyword">else</span> {</div><div class="line">      <span class="keyword">return</span> result.value;</div><div class="line">    }</div><div class="line">  }();</div><div class="line">}</div><div class="line"><span class="keyword">const</span> todo = <span class="function"><span class="keyword">function</span>* (<span class="params"></span>) </span>{</div><div class="line">  <span class="keyword">const</span> begin = <span class="keyword">yield</span> delay(<span class="string">&apos;delay begin&apos;</span>);</div><div class="line">  <span class="keyword">const</span> end = <span class="keyword">yield</span> delay(<span class="string">&apos;delay end&apos;</span>);</div><div class="line">  <span class="keyword">const</span> gValue = <span class="keyword">yield</span> delay(<span class="string">&apos;generator thunk value&apos;</span>);</div><div class="line">  <span class="keyword">const</span> done = <span class="keyword">yield</span> delay(<span class="string">&apos;done&apos;</span>);</div><div class="line">  write(begin);</div><div class="line">  write(end);</div><div class="line">  write(gValue);</div><div class="line">  write(done);</div><div class="line">  res.end();</div><div class="line">}</div><div class="line">runG(todo);</div></pre></td></tr></table></figure></p>
<hr>
<h2 id="async"><a href="#Async" class="headerlink" title="Async"></a>Async</h2><p>ES7&#x63D0;&#x51FA;&#x4E86;&#x65B0;&#x7684;&#x5F02;&#x6B65;&#x65B9;&#x6848;async&#xFF0C;&#x4E0D;&#x8FC7;babel&#x4E4B;&#x7C7B;&#x7684;&#x8F6C;&#x6362;&#x5668;&#x5DF2;&#x7ECF;&#x652F;&#x6301;&#x4E86;&#x5B83;&#xFF0C;async&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x6539;&#x53D8;&#x4E86;generator&#x51FD;&#x6570;&#x7684;api&#xFF0C;&#x540C;&#x65F6;<strong>&#x5185;&#x7F6E;&#x4E86;&#x81EA;&#x52A8;&#x6267;&#x884C;&#x51FD;&#x6570;</strong>&#x3002;<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> delay = <span class="function">(<span class="params">msg</span>) =&gt;</span> {</div><div class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> {</div><div class="line">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> {</div><div class="line">      resolve(msg);</div><div class="line">    }, <span class="number">0</span>);</div><div class="line">  });</div><div class="line">}</div><div class="line"><span class="keyword">const</span> write = <span class="function">(<span class="params">pass</span>) =&gt;</span> {</div><div class="line">  res.write(pass + <span class="string">&apos;\n&apos;</span>);</div><div class="line">}</div><div class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">todo</span>(<span class="params"></span>) </span>{</div><div class="line">  <span class="keyword">const</span> begin = <span class="keyword">await</span> delay(<span class="string">&apos;delay begin&apos;</span>);</div><div class="line">  <span class="keyword">const</span> end = <span class="keyword">await</span> delay(<span class="string">&apos;delay end&apos;</span>);</div><div class="line">  <span class="keyword">const</span> gValue = <span class="keyword">await</span> delay(<span class="string">&apos;generator thunk value&apos;</span>);</div><div class="line">  <span class="keyword">const</span> done = <span class="keyword">await</span> delay(<span class="string">&apos;done&apos;</span>);</div><div class="line">  write(begin);</div><div class="line">  write(end);</div><div class="line">  write(gValue);</div><div class="line">  write(done);</div><div class="line">  res.end();</div><div class="line">}</div><div class="line"><span class="keyword">const</span> autoRun = todo();</div></pre></td></tr></table></figure></p>
<p>&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x5C31;&#x662F;&#x5C06;&#x58F0;&#x660E;&#x65B9;&#x5F0F;&#x53BB;&#x6389;&#x4E86;&#x661F;&#x53F7;&#xFF0C;&#x5728;&#x51FD;&#x6570;&#x524D;&#x52A0;&#x4E0A;&#x4E86;<code>async</code>&#x524D;&#x7F00;&#xFF0C;&#x5E76;&#x5C06;<code>yield</code>&#x66FF;&#x6362;&#x4E3A;<code>await</code>&#xFF0C;&#x6267;&#x884C;&#x65F6;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x4E00;&#x6B21;&#x8C03;&#x7528;&#xFF0C;&#x5C31;&#x80FD;&#x81EA;&#x52A8;&#x6267;&#x884C;&#x5185;&#x90E8;&#x51FD;&#x6570;&#x4E86;&#x3002;</p>
<hr>
<p>&#x603B;&#x4E4B;&#xFF0C;&#x5F02;&#x6B65;&#x64CD;&#x4F5C;&#x6B63;&#x53D8;&#x5F97;&#x8D8A;&#x6765;&#x8D8A;&#x597D;&#x7406;&#x89E3;&#xFF0C;&#x597D;&#x4F7F;&#x7528;&#xFF0C;&#x597D;&#x7EF4;&#x62A4;&#xFF0C;&#x5B83;&#x76EE;&#x524D;&#x8FDB;&#x6B65;&#x7684;&#x65B9;&#x5411;&#x662F;&#x53D8;&#x5F97;&#x8D8A;&#x6765;&#x8D8A;&#x50CF;&#x540C;&#x6B65;&#x64CD;&#x4F5C;&#x3002;<br>&#x5982;&#x679C;&#x4F60;&#x60F3;&#x4E86;&#x89E3;&#x66F4;&#x591A;&#xFF1A;</p>
<ul>
<li><a href="http://es6.ruanyifeng.com/" target="_blank" rel="external">&#x962E;&#x4E00;&#x5CF0;&#x7684;ES6&#x5165;&#x95E8;&#x6559;&#x7A0B;</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2015/05/thunk.html" target="_blank" rel="external">&#x962E;&#x4E00;&#x5CF0;&#x5173;&#x4E8E;Thunk&#x51FD;&#x6570;&#x7684;&#x6559;&#x7A0B;</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function*" target="_blank" rel="external">MDN&#x7684;Generator&#x51FD;&#x6570;&#x4ECB;&#x7ECD;</a></li>
<li><a href="https://davidwalsh.name/es6-generators" target="_blank" rel="external">ES6 Generators: Complete Series BY Kyle Simpson&#x7CFB;&#x5217;&#x6559;&#x7A0B;</a></li>
<li><a href="http://liubin.org/promises-book/" target="_blank" rel="external">Promise&#x8FF7;&#x4F60;&#x4E66; BY azu</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oanr6klwj.bkt.clouddn.com/blog/js-async-cover.jpg&quot; alt=&quot;cover&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://www.pixiv.net/member_illust.php?mode=medium&amp;amp;illust_id=16810195&quot;&gt;&lt;em&gt;pixiv-ID: 16810195&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;众所周知，JavaScript的执行环境是单线程的，这意味着如果有很多任务，就只能排队一个一个执行。请看下面的例子。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; X = &lt;span class=&quot;number&quot;&gt;100000&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; X; i++) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;随着X的增大，打印1和2之间出现的时间间隔也在明显变长。对此，JavaScript采取异步来处理这种问题。&lt;br&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://lovin0730.github.io/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>使用MySQL配合Node.js进行简单session校验</title>
    <link href="http://lovin0730.github.io/2016/09/04/nodejs-mysql-session/"/>
    <id>http://lovin0730.github.io/2016/09/04/nodejs-mysql-session/</id>
    <published>2016-09-04T15:47:32.000Z</published>
    <updated>2016-09-17T08:15:12.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://oanr6klwj.bkt.clouddn.com/blog/nodejs-mysql-session-cover.jpg" alt="cover"></p>
<blockquote>
<p><a href="http://www.pixiv.net/member_illust.php?mode=medium&amp;illust_id=52610961" target="_blank" rel="external"><em>pixiv-ID: 52610961</em></a></p>
</blockquote>
<p>session&#x662F;web&#x5E94;&#x7528;&#x4FDD;&#x6301;&#x4F1A;&#x8BDD;&#x7684;&#x4E00;&#x79CD;&#x76F8;&#x5BF9;&#x5B89;&#x5168;&#x6709;&#x6548;&#x53C8;&#x7B80;&#x5355;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x901A;&#x5E38;&#x7684;&#x505A;&#x6CD5;&#x662F;&#x5728;&#x6BCF;&#x5F53;&#x5BA2;&#x6237;&#x7AEF;&#x53D1;&#x8D77;&#x8BF7;&#x6C42;&#xFF0C;&#x670D;&#x52A1;&#x7AEF;&#x5C31;&#x4F1A;&#x5728;&#x8FD4;&#x56DE;&#x7684;&#x54CD;&#x5E94;&#x5934;&#x4FE1;&#x606F;&#x4E2D;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x5B57;&#x6BB5;&#xFF0C;&#x540C;&#x65F6;&#x5C06;&#x8FD9;&#x4E2A;&#x5B57;&#x6BB5;&#x643A;&#x5E26;&#x7684;&#x4FE1;&#x606F;&#x8BB0;&#x5F55;&#x5728;&#x670D;&#x52A1;&#x7AEF;&#x3002;&#x8FD9;&#x6837;&#xFF0C;&#x5F53;&#x4E0B;&#x6B21;&#x5BA2;&#x6237;&#x7AEF;&#x53D1;&#x8D77;&#x8BF7;&#x6C42;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x670D;&#x52A1;&#x7AEF;&#x53EA;&#x8981;&#x68C0;&#x67E5;&#x5BA2;&#x6237;&#x7AEF;&#x643A;&#x5E26;&#x7684;cookie&#xFF0C;&#x5C06;&#x5B83;&#x4E0E;&#x670D;&#x52A1;&#x7AEF;&#x5B58;&#x50A8;&#x7684;&#x6570;&#x636E;&#x505A;&#x5BF9;&#x6BD4;&#x3002;&#x5C31;&#x53EF;&#x4EE5;&#x5F97;&#x77E5;&#x5BA2;&#x6237;&#x7AEF;&#x5F53;&#x524D;&#x72B6;&#x6001;&#xFF0C;&#x4ECE;&#x800C;&#x786E;&#x4FDD;&#x4F1A;&#x8BDD;&#x7684;&#x8FDE;&#x63A5;&#x4E86;&#x3002;</p>
<a id="more"></a>
<p>&#x4F8B;&#x5982;&#xFF1A;&#x5F53;&#x6211;&#x7B2C;&#x4E00;&#x6B21;&#x6CE8;&#x518C;&#x767B;&#x5F55;&#x67D0;&#x7F51;&#x7AD9;&#xFF0C;&#x5B83;&#x8BB0;&#x5F55;&#x4E86;&#x6211;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x5E76;&#x544A;&#x8BC9;&#x6211;&#xFF1A;&#x201C;&#x6B22;&#x8FCE;&#x6765;&#x5230;&#x672C;&#x7F51;&#x7AD9;&#xFF01;&#x201D;&#xFF0C;&#x7136;&#x540E;&#x6211;&#x4E0D;&#x5C0F;&#x5FC3;&#x5173;&#x6389;&#x4E86;&#x6D4F;&#x89C8;&#x5668;&#xFF0C;&#x518D;&#x6253;&#x5F00;&#x8FD9;&#x4E2A;&#x7F51;&#x7AD9;&#x65F6;&#x60CA;&#x559C;&#x7684;&#x53D1;&#x73B0;&#x4E0D;&#x7528;&#x81EA;&#x5DF1;&#x624B;&#x52A8;&#x518D;&#x767B;&#x5F55;&#x4E00;&#x6B21;&#x4E86;&#xFF0C;&#x4F46;&#x662F;&#x5F53;&#x6211;&#x4E09;&#x5929;&#x6CA1;&#x6709;&#x8BBF;&#x95EE;&#x5B83;&#xFF0C;&#x5B83;&#x5C31;&#x4F1A;&#x8BA9;&#x6211;&#x91CD;&#x65B0;&#x767B;&#x5F55;&#x3002;&#x8FD9;&#x4E9B;&#x5C31;&#x662F;&#x901A;&#x8FC7;session&#x6765;&#x5B8C;&#x6210;&#x7684;&#x3002;</p>
<p>&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;session&#x7684;&#x65B9;&#x5F0F;&#x5206;&#x4E3A;&#x4E09;&#x6B65;&#xFF1A;</p>
<blockquote>
<ul>
<li>&#x68C0;&#x67E5;&#x4E00;&#x4E2A;&#x5BA2;&#x6237;&#x7AEF;&#x8BF7;&#x6C42;&#x662F;&#x5426;&#x643A;&#x5E26;&#x7EA6;&#x5B9A;&#x5B57;&#x6BB5;&#x3002;</li>
<li>&#x82E5;&#x6CA1;&#x5E26;&#xFF0C;&#x8BF4;&#x660E;&#x662F;&#x7B2C;&#x4E00;&#x6B21;&#x8BBF;&#x95EE;&#x3002;&#x82E5;&#x5E26;&#x4E86;&#xFF0C;&#x5219;&#x6839;&#x636E;&#x8BE5;&#x5B57;&#x6BB5;&#x643A;&#x5E26;&#x7684;&#x503C;&#x5224;&#x65AD;session&#x662F;&#x5426;&#x8D85;&#x65F6;&#xFF08;&#x82E5;&#x8D85;&#x65F6;&#x53EF;&#x80FD;&#x9700;&#x8981;&#x91CD;&#x65B0;&#x767B;&#x5F55;&#x7B49;&#x5904;&#x7406;&#xFF09;&#x3002;&#x7136;&#x540E;&#x5220;&#x9664;&#x65E7;session&#xFF0C;&#x751F;&#x6210;&#x65B0;&#x7684;session&#x3002;</li>
<li>&#x5C06;&#x65B0;&#x751F;&#x6210;&#x7684;session&#x7684;&#x8BC6;&#x522B;&#x5B57;&#x6BB5;&#x53CA;&#x6240;&#x643A;&#x5E26;&#x7684;&#x503C;&#x5199;&#x5165;&#x54CD;&#x5E94;&#x7684;&#x5934;&#x4FE1;&#x606F;&#x4E2D;&#x7684;cookie&#x4E2D;&#xFF0C;&#x8FD4;&#x56DE;&#x5BA2;&#x6237;&#x7AEF;&#x3002;</li>
</ul>
</blockquote>
<hr>
<p>&#x7531;&#x4E8E;Node.js&#x9879;&#x76EE;&#x53EF;&#x80FD;&#x9700;&#x8981;&#x4F7F;&#x7528;cluster&#xFF0C;&#x8FD9;&#x5BFC;&#x81F4;session&#x4E0D;&#x80FD;&#x5B58;&#x50A8;&#x5728;&#x7F13;&#x5B58;&#x4E2D;&#xFF0C;&#x56E0;&#x6B64;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x5E93;&#xFF0C;redis&#x975E;&#x5E38;&#x9002;&#x5408;&#xFF0C;&#x4F46;&#x662F;&#x7531;&#x4E8E;&#x9879;&#x76EE;&#x521A;&#x597D;&#x4F7F;&#x7528;&#x4E86;MySQL&#xFF0C;&#x56E0;&#x6B64;&#x4F7F;&#x7528;MySQL&#x6765;&#x5B58;&#x50A8;session&#x3002;&#x5728;&#x5F00;&#x59CB;&#x7F16;&#x5199;session&#x4E4B;&#x524D;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x5148;&#x5C01;&#x88C5;&#x51E0;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x6570;&#x636E;&#x5E93;&#x64CD;&#x4F5C;&#x3002;&#x4E3A;&#x6B64;&#xFF0C;&#x6211;&#x4F7F;&#x7528;&#x4E86;&#x4E00;&#x4E2A;node-mysql&#x6A21;&#x5757;&#x6765;&#x5E2E;&#x52A9;&#x6211;&#x8FDB;&#x884C;&#x5DE5;&#x4F5C;&#x3002;<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> mysql = <span class="built_in">require</span>(<span class="string">&apos;mysql&apos;</span>);</div><div class="line"><span class="keyword">const</span> pool = mysql.createPool({</div><div class="line">  <span class="attr">host</span>: <span class="string">&apos;yourhost&apos;</span>,</div><div class="line">  <span class="attr">user</span>: <span class="string">&apos;youruser&apos;</span>,</div><div class="line">  <span class="attr">database</span>: <span class="string">&apos;yourdb&apos;</span>,</div><div class="line">  <span class="attr">password</span>: <span class="string">&apos;*****&apos;</span>,</div><div class="line">  <span class="attr">port</span>: <span class="string">&apos;3306&apos;</span>,</div><div class="line">  <span class="attr">connectionLimit</span>: <span class="number">100</span></div><div class="line">});</div><div class="line"><span class="keyword">const</span> createSchema = <span class="function">(<span class="params">schema, name</span>) =&gt;</span> {</div><div class="line">  <span class="keyword">return</span> {</div><div class="line">    <span class="attr">name</span>: name,</div><div class="line">    <span class="attr">options</span>: schema</div><div class="line">  }</div><div class="line">};</div><div class="line"><span class="keyword">const</span> sessionSchema = createSchema(</div><div class="line">  <span class="string">`(</span></div><div class="line">    id VARCHAR(100) primary key,</div><div class="line">    expire VARCHAR(50)</div><div class="line">  )`, <span class="string">&apos;session&apos;</span></div><div class="line">);</div><div class="line"><span class="keyword">const</span> operation = <span class="function">(<span class="params">connection, table</span>) =&gt;</span> {</div><div class="line">  <span class="keyword">this</span>.createTable = <span class="function">(<span class="params">callback</span>) =&gt;</span> {</div><div class="line">    <span class="keyword">const</span> action = <span class="string">&apos;CREATE TABLE IF NOT EXISTS &apos;</span> +</div><div class="line">      table.name + <span class="string">&apos; &apos;</span> + table.options;</div><div class="line">    connection.query(action, callback);</div><div class="line">  };</div><div class="line">  <span class="keyword">this</span>.dropTable = <span class="function">(<span class="params">callback</span>) =&gt;</span> {</div><div class="line">    <span class="keyword">const</span> action =  <span class="string">&apos;DROP TABLE &apos;</span> + table.name;</div><div class="line">    connection.query(action, callback);</div><div class="line">  };</div><div class="line">  <span class="keyword">this</span>.insertItem = <span class="function">(<span class="params">data, callback</span>) =&gt;</span> {</div><div class="line">    <span class="keyword">const</span> action =  <span class="string">&apos;INSERT INTO &apos;</span> + table.name + <span class="string">&apos; SET ?&apos;</span>;</div><div class="line">    connection.query(action, data, callback);</div><div class="line">  };</div><div class="line">  <span class="keyword">this</span>.selectById = <span class="function">(<span class="params">id, callback</span>) =&gt;</span> {</div><div class="line">    <span class="keyword">const</span> action =  <span class="string">&apos;SELECT * FROM &apos;</span> + table.name + <span class="string">&apos; WHERE id=&apos;</span> + pool.escape(id);</div><div class="line">    connection.query(action, callback);</div><div class="line">  };</div><div class="line">  <span class="keyword">this</span>.updateById = <span class="function">(<span class="params">id, data, callback</span>) =&gt;</span> {</div><div class="line">    <span class="keyword">const</span> action = <span class="string">&apos;UPDATE &apos;</span> + table.name + <span class="string">&apos; SET ? WHERE id=&apos;</span> + pool.escape(id);</div><div class="line">    connection.query(action, data, callback);</div><div class="line">  };</div><div class="line">  <span class="keyword">this</span>.deleteById = <span class="function">(<span class="params">id, callback</span>) =&gt;</span> {</div><div class="line">    <span class="keyword">const</span> action = <span class="string">&apos;DELETE FROM &apos;</span> + table.name + <span class="string">&apos; WHERE id=&apos;</span> + pool.escape(id);</div><div class="line">    connection.query(action, callback);</div><div class="line">  };</div><div class="line">  <span class="keyword">this</span>.release = <span class="function"><span class="params">()</span> =&gt;</span> {</div><div class="line">    connection.release();</div><div class="line">  };</div><div class="line">  <span class="keyword">return</span> <span class="keyword">this</span>;</div><div class="line">};</div><div class="line"><span class="keyword">const</span> connectPool = <span class="function">(<span class="params">callback, table</span>) =&gt;</span> {</div><div class="line">  pool.getConnection(<span class="function">(<span class="params">err, connection</span>) =&gt;</span> {</div><div class="line">    <span class="keyword">if</span>(err) {</div><div class="line">      <span class="built_in">console</span>.log(<span class="string">&apos;[query] - :&apos;</span> + err);</div><div class="line">      <span class="keyword">return</span>;</div><div class="line">    }</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">&apos;[connection connect] succeed!&apos;</span>);</div><div class="line">    <span class="keyword">const</span> connect = operation(connection, table);</div><div class="line">    callback(connect);</div><div class="line">  });</div><div class="line">};</div><div class="line"><span class="keyword">const</span> defaultCallback = <span class="function">(<span class="params">err, result</span>) =&gt;</span> {</div><div class="line">  <span class="keyword">if</span> (err) {</div><div class="line">    <span class="built_in">console</span>.log(err);</div><div class="line">  } <span class="keyword">else</span> {</div><div class="line">    <span class="built_in">console</span>.log(result);</div><div class="line">  }</div><div class="line">};</div><div class="line"><span class="keyword">const</span> initTable = <span class="function"><span class="params">()</span> =&gt;</span> {</div><div class="line">  <span class="keyword">const</span> createSessionTable = connectPool(<span class="function">(<span class="params">connect</span>) =&gt;</span> {</div><div class="line">    connect.createTable(defaultCallback);</div><div class="line">    connect.release();</div><div class="line">  }, sessionSchema);</div><div class="line">};</div><div class="line"><span class="keyword">const</span> manager = <span class="function">(<span class="params">mode</span>) =&gt;</span> {</div><div class="line">  <span class="keyword">const</span> common = <span class="function">(<span class="params">callback</span>) =&gt;</span> {</div><div class="line">    <span class="keyword">return</span> connectPool(<span class="function">(<span class="params">connect</span>) =&gt;</span> {</div><div class="line">      callback(connect);</div><div class="line">      connect.release();</div><div class="line">    }, mode);</div><div class="line">  };</div><div class="line">  <span class="keyword">return</span> {</div><div class="line">    <span class="attr">create</span>: <span class="function"><span class="params">()</span> =&gt;</span> {</div><div class="line">      common(<span class="function">(<span class="params">connect</span>) =&gt;</span> {</div><div class="line">        connect.createTable(defaultCallback);</div><div class="line">      });</div><div class="line">    },</div><div class="line">    <span class="attr">add</span>: <span class="function">(<span class="params">data</span>) =&gt;</span> {</div><div class="line">      common(<span class="function">(<span class="params">connect</span>) =&gt;</span> {</div><div class="line">        connect.insertItem(data, defaultCallback);</div><div class="line">      });</div><div class="line">    },</div><div class="line">    <span class="attr">delete</span>: <span class="function">(<span class="params">id</span>) =&gt;</span> {</div><div class="line">      common(<span class="function">(<span class="params">connect</span>) =&gt;</span> {</div><div class="line">        connect.deleteById(id, defaultCallback);</div><div class="line">      });</div><div class="line">    },</div><div class="line">    <span class="attr">get</span>: <span class="function">(<span class="params">id, callback</span>) =&gt;</span> {</div><div class="line">      common(<span class="function">(<span class="params">connect</span>) =&gt;</span> {</div><div class="line">        connect.selectById(id, (err, result)=&gt;{</div><div class="line">          <span class="keyword">if</span> (err) {</div><div class="line">            <span class="built_in">console</span>.log(err);</div><div class="line">          } <span class="keyword">else</span> {</div><div class="line">            callback(result);</div><div class="line">          }</div><div class="line">        });</div><div class="line">      });</div><div class="line">    },</div><div class="line">    <span class="attr">update</span>: <span class="function">(<span class="params">data</span>) =&gt;</span> {</div><div class="line">      common(<span class="function">(<span class="params">connect</span>) =&gt;</span> {</div><div class="line">        connect.updateById(data.id, data, defaultCallback);</div><div class="line">      });</div><div class="line">    },</div><div class="line">  }</div><div class="line">}</div><div class="line">initTable();</div><div class="line"><span class="keyword">const</span> sessionManager = manager(sessionSchema);</div></pre></td></tr></table></figure></p>
<p>&#x8FD9;&#x6837;&#x6211;&#x4EEC;&#x5C31;&#x5C01;&#x88C5;&#x597D;&#x4E86;&#x4E00;&#x4E2A;sessionManager&#xFF0C;&#x7528;&#x6765;&#x5BF9;session&#x8868;&#x8FDB;&#x884C;&#x589E;&#x5220;&#x67E5;&#x6539;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x8FD9;&#x6837;&#x5C01;&#x88C5;&#x7684;&#x597D;&#x5904;&#x662F;&#x5982;&#x679C;&#x6709;&#x4E86;&#x65B0;&#x7684;table&#xFF0C;&#x53EA;&#x8981;&#x5728;&#x539F;&#x4EE3;&#x7801;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#x65B0;&#x589E;&#x76F8;&#x5173;schema&#x5373;&#x53EF;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x4FEE;&#x6539;&#x548C;&#x5220;&#x9664;&#x4EE3;&#x7801;&#x3002;</p>
<hr>
<p>&#x63A5;&#x4E0B;&#x6765;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8FDB;&#x884C;&#x670D;&#x52A1;&#x7AEF;session&#x6821;&#x9A8C;&#x7684;&#x7F16;&#x5199;&#x4E86;&#x3002;</p>
<blockquote>
<ul>
<li>&#x786E;&#x5B9A;session&#x7684;&#x65F6;&#x6548;<code>EXPIRES</code>&#x548C;&#x7EA6;&#x5B9A;&#x5B57;&#x6BB5;<code>KEY</code>&#xFF0C;&#x5E76;&#x7528;<code>parseCookie</code>&#x89E3;&#x6790;&#x8BF7;&#x6C42;&#x4E2D;&#x7684;cookie&#x3002;</li>
<li>&#x4F7F;&#x7528;<code>hackHead</code>&#x65B9;&#x6CD5;&#x6539;&#x5199;response&#x65B9;&#x6CD5;&#x4F7F;&#x5176;&#x54CD;&#x5E94;&#x5BA2;&#x6237;&#x7AEF;&#x65F6;&#x80FD;&#x591F;&#x643A;&#x5E26;session&#x3002;</li>
<li>&#x4F7F;&#x7528;&#x4E24;&#x4E2A;promise<code>checkExist</code>&#x548C;<code>sessionMiddleWare</code>&#x6765;&#x8BA9;&#x5F02;&#x6B65;&#x64CD;&#x4F5C;&#x66F4;&#x6709;&#x6761;&#x7406;&#xFF0C;&#x5BF9;session&#x662F;&#x5426;&#x5B58;&#x5728;&#x4EE5;&#x53CA;&#x5220;&#x9664;&#x8D85;&#x65F6;ssession&#xFF0C;&#x751F;&#x6210;&#x65B0;session&#x8FDB;&#x884C;&#x5904;&#x7406;&#x3002;</li>
<li>&#x628A;&#x540E;&#x7EED;&#x64CD;&#x4F5C;&#x653E;&#x5728;<code>handler</code>&#x4E2D;&#x8FDB;&#x884C;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x53EF;&#x4EE5;&#x4FDD;&#x8BC1;&#x5BA2;&#x6237;&#x7AEF;&#x662F;&#x548C;&#x6211;&#x4EEC;&#x4FDD;&#x6301;&#x901A;&#x4FE1;&#x7684;&#x72B6;&#x6001;&#x4E86;&#x3002;</li>
</ul>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&apos;http&apos;</span>);</div><div class="line"><span class="keyword">const</span> KEY = <span class="string">&apos;session_id&apos;</span>;</div><div class="line"><span class="keyword">const</span> EXPIRES = <span class="number">20</span> * <span class="number">60</span> * <span class="number">1000</span>;</div><div class="line"><span class="keyword">const</span> generate = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</div><div class="line">  <span class="keyword">var</span> session = {};</div><div class="line">  session.id = (<span class="keyword">new</span> <span class="built_in">Date</span>()).getTime() + <span class="built_in">Math</span>.random().toFixed(<span class="number">2</span>);</div><div class="line">  session.expire = (<span class="keyword">new</span> <span class="built_in">Date</span>()).getTime() + EXPIRES;</div><div class="line">  sessionManager.add(session);</div><div class="line">  <span class="keyword">return</span> session;</div><div class="line">}</div><div class="line"><span class="keyword">const</span> checkExist = <span class="function">(<span class="params">id</span>) =&gt;</span> {</div><div class="line">  <span class="keyword">var</span> promise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> {</div><div class="line">    sessionManager.get(id, (session) =&gt; {</div><div class="line">      <span class="keyword">if</span> (session) {</div><div class="line">        resolve(session);</div><div class="line">      }</div><div class="line">    });</div><div class="line">  });</div><div class="line">  <span class="keyword">return</span> promise;</div><div class="line">}</div><div class="line"><span class="keyword">const</span> parseCookie = <span class="function">(<span class="params">req</span>) =&gt;</span> {</div><div class="line">  <span class="keyword">if</span> (req.headers.cookie){</div><div class="line">    <span class="keyword">let</span> cookies = {};</div><div class="line">    req.headers.cookie.split(<span class="string">&apos;;&apos;</span>).forEach(<span class="function">(<span class="params">cookie</span>) =&gt;</span> {</div><div class="line">      <span class="keyword">let</span> parts = cookie.split(<span class="string">&apos;=&apos;</span>);</div><div class="line">      cookies[ parts[<span class="number">0</span>].trim() ] = ( parts[<span class="number">1</span>] || <span class="string">&apos;&apos;</span>).trim();</div><div class="line">    })</div><div class="line">    <span class="keyword">return</span> cookies;</div><div class="line">  } <span class="keyword">else</span> {</div><div class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</div><div class="line">  }</div><div class="line">}</div><div class="line"><span class="keyword">const</span> hackHead = <span class="function">(<span class="params">sessions, req, res</span>) =&gt;</span> {</div><div class="line">  <span class="keyword">var</span> writeHead = res.writeHead;</div><div class="line">  res.writeHead = <span class="function">(<span class="params">status, headers</span>) =&gt;</span> {</div><div class="line">    <span class="keyword">let</span> cookies = req.headers.cookie;</div><div class="line">    <span class="keyword">let</span> session = KEY + <span class="string">&apos;=&apos;</span> + sessions.id;</div><div class="line">    cookies = <span class="built_in">Array</span>.isArray(cookies) ?</div><div class="line">      cookies.concat(session) :</div><div class="line">      [cookies, session];</div><div class="line">    res.setHeader(<span class="string">&apos;Set-Cookie&apos;</span>, cookies);</div><div class="line">    res.writeHead = writeHead;</div><div class="line">    <span class="keyword">return</span> res.writeHead(status, headers);</div><div class="line">  }</div><div class="line">  <span class="keyword">return</span> res.writeHead;</div><div class="line">}</div><div class="line"><span class="keyword">const</span> sessionMiddleWare = <span class="function">(<span class="params">req, res</span>) =&gt;</span> {</div><div class="line">  <span class="keyword">var</span> promise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> {</div><div class="line">    <span class="keyword">const</span> cookies = parseCookie(req);</div><div class="line">    <span class="keyword">if</span>(!cookies || !cookies[KEY]) {</div><div class="line">      <span class="keyword">const</span> session = generate(user);</div><div class="line">      res.writeHead = hackHead(session, req, res);</div><div class="line">      <span class="keyword">const</span> output = [req, res];</div><div class="line">      resolve(output);</div><div class="line">    } <span class="keyword">else</span> {</div><div class="line">      checkExist(cookies[KEY]).then(<span class="function">(<span class="params">session</span>) =&gt;</span> {</div><div class="line">        <span class="keyword">let</span> newSession;</div><div class="line">        <span class="keyword">if</span> (session[<span class="number">0</span>]){</div><div class="line">          session = session[<span class="number">0</span>];</div><div class="line">          <span class="keyword">if</span> (session.expire &gt; (<span class="keyword">new</span> <span class="built_in">Date</span>()).getTime()) {</div><div class="line">            newSession = session;</div><div class="line">            newSession.expire = (<span class="keyword">new</span> <span class="built_in">Date</span>()).getTime() + EXPIRES;</div><div class="line">            manager.update(newSession);</div><div class="line">          } <span class="keyword">else</span> {</div><div class="line">            manager.delete(session.id);</div><div class="line">            newSession = generate(user);</div><div class="line">          }</div><div class="line">        } <span class="keyword">else</span> {</div><div class="line">          newSession = generate(user);</div><div class="line">        }</div><div class="line">        <span class="keyword">return</span> newSession;</div><div class="line">      }).then(<span class="function">(<span class="params">session</span>) =&gt;</span> {</div><div class="line">        res.writeHead = hackHead(session, req, res);</div><div class="line">        <span class="keyword">const</span> output = [req, res];</div><div class="line">        resolve(output);</div><div class="line">      });</div><div class="line">    }</div><div class="line">  });</div><div class="line">  <span class="keyword">return</span> promise;</div><div class="line">}</div><div class="line"><span class="keyword">const</span> checkSession = <span class="function">(<span class="params">req, res, handler</span>) =&gt;</span> {</div><div class="line">  sessionMiddleWare(req, res).then(<span class="function">(<span class="params">output</span>) =&gt;</span> {</div><div class="line">    handler(output[<span class="number">0</span>], output[<span class="number">1</span>]);</div><div class="line">  });</div><div class="line">}</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oanr6klwj.bkt.clouddn.com/blog/nodejs-mysql-session-cover.jpg&quot; alt=&quot;cover&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://www.pixiv.net/member_illust.php?mode=medium&amp;amp;illust_id=52610961&quot;&gt;&lt;em&gt;pixiv-ID: 52610961&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;session是web应用保持会话的一种相对安全有效又简单的方式，通常的做法是在每当客户端发起请求，服务端就会在返回的响应头信息中添加一个字段，同时将这个字段携带的信息记录在服务端。这样，当下次客户端发起请求的时候，服务端只要检查客户端携带的cookie，将它与服务端存储的数据做对比。就可以得知客户端当前状态，从而确保会话的连接了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Back-End" scheme="http://lovin0730.github.io/tags/back-end/"/>
    
      <category term="Node.js" scheme="http://lovin0730.github.io/tags/node-js/"/>
    
  </entry>
  
  <entry>
    <title>CORS和Cookies</title>
    <link href="http://lovin0730.github.io/2016/08/27/cors-and-cookies/"/>
    <id>http://lovin0730.github.io/2016/08/27/cors-and-cookies/</id>
    <published>2016-08-27T09:02:06.000Z</published>
    <updated>2016-09-04T21:37:30.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://oanr6klwj.bkt.clouddn.com/blog/cors-and-cookies-cover.jpg" alt="cover"></p>
<blockquote>
<p><a href="http://www.pixiv.net/member_illust.php?mode=medium&amp;illust_id=56852068" target="_blank" rel="external"><em>pixiv-ID: 56852068</em></a></p>
</blockquote>
<p>&#x672C;&#x6B21;&#x7684;&#x9879;&#x76EE;&#x662F;&#x4E3A;&#x4E00;&#x4E2A;&#x77ED;&#x671F;&#x6D3B;&#x52A8;&#x642D;&#x5EFA;Node.js&#x670D;&#x52A1;&#x7AEF;&#xFF0C;&#x90E8;&#x7F72;&#x5728;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x540E;&#x53D1;&#x73B0;&#x540C;&#x4E8B;&#x5728;&#x81EA;&#x5DF1;&#x7684;&#x672C;&#x673A;&#x4F7F;&#x7528;&#x9700;&#x8981;&#x643A;&#x5E26;Cookie&#x7684;AJAX&#x8BF7;&#x6C42;&#x8C03;&#x7528;&#x63A5;&#x53E3;&#x7684;&#x65F6;&#x5019;,&#x53D7;&#x5230;&#x4E86;&#x540C;&#x6E90;&#x7B56;&#x7565;&#x7684;&#x9650;&#x5236;&#x3002;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x5728;&#x670D;&#x52A1;&#x7AEF;&#x5BF9;&#x8DE8;&#x57DF;&#x8BF7;&#x6C42;&#x5F00;&#x653E;&#x8BB8;&#x53EF;&#x3002;</p>
<a id="more"></a>
<blockquote>
<p>CORS&#x662F;&#x4E00;&#x4E2A;W3C&#x6807;&#x51C6;&#xFF0C; &#x5168;&#x79F0;&#x662F;&#x201C;&#x8DE8;&#x57DF;&#x8D44;&#x6E90;&#x5171;&#x4EAB;&#x201D;&#xFF08;Cross-origin resource sharing&#xFF09;&#x3002;<br>&#x5B83;&#x5141;&#x8BB8;&#x4E86;&#x6D4F;&#x89C8;&#x5668;&#x5411;&#x8DE8;&#x6E90;&#x670D;&#x52A1;&#x5668;&#x53D1;&#x9001;AJAX&#x8BF7;&#x6C42;&#x3002;&#xFF08;&#x53D7;&#x9650;&#x4E8E;<a href="https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy" target="_blank" rel="external">&#x540C;&#x6E90;&#x7B56;&#x7565;</a>&#xFF0C;&#x4E00;&#x822C;&#x7684;AJAX&#x4E0D;&#x80FD;&#x8DE8;&#x57DF;&#xFF09;&#x3002;</p>
</blockquote>
<p>&#x8DE8;&#x57DF;AJAX&#x8BF7;&#x6C42;&#x7684;&#x53D1;&#x9001;&#x6E90;&#x9700;&#x8981;&#x5728;&#x670D;&#x52A1;&#x7AEF;&#x7684;&#x8BB8;&#x53EF;&#x540D;&#x5355;&#x4E4B;&#x4E2D;&#xFF0C;&#x56E0;&#x6B64;&#x9700;&#x8981;&#x670D;&#x52A1;&#x7AEF;&#x5BF9;&#x8BF7;&#x6C42;&#x6E90;&#x5F00;&#x653E;&#x8BB8;&#x53EF;&#x3002;</p>
<p>&#x672C;&#x6B21;&#x9879;&#x76EE;&#x4E2D;&#x7684;&#x670D;&#x52A1;&#x7AEF;&#x8BED;&#x8A00;&#x662F;Node.js&#xFF0C;&#x4E00;&#x822C;&#x6765;&#x8BF4;&#x5F00;&#x653E;&#x8BB8;&#x53EF;&#x7684;&#x505A;&#x6CD5;&#x4E3A;&#x54CD;&#x5E94;&#x7684;&#x5934;&#x4FE1;&#x606F;&#x6DFB;&#x52A0;&#x4E00;&#x4E9B;&#x5B57;&#x6BB5;&#x3002;</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">res.setHeader(<span class="string">&apos;Access-Control-Allow-Origin&apos;</span>, *);</div><div class="line"><span class="comment">//&#x53EF;&#x4EE5;&#x63A5;&#x53D7;&#x7684;&#x6E90;&#xFF0C;*&#x8868;&#x793A;&#x4EFB;&#x610F;</span></div><div class="line">res.setHeader(<span class="string">&apos;Access-Control-Allow-Headers&apos;</span>, <span class="string">&apos;X-Requested-With&apos;</span>);</div><div class="line"><span class="comment">//&#x9884;&#x68C0;&#x7684;&#x65F6;&#x5019;&#x4F7F;&#x7528;&#xFF0C;&#x6307;&#x660E;&#x8BF7;&#x6C42;&#x4E2D;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x7684;&#x81EA;&#x5B9A;&#x4E49;HTTP&#x8BF7;&#x6C42;&#x5934;</span></div><div class="line">res.setHeader(<span class="string">&apos;Access-Control-Allow-Methos&apos;</span>, <span class="string">&apos;PUT, POST, GET, DELETE, OPTIONS&apos;</span>);</div><div class="line"><span class="comment">//&#x9884;&#x68C0;&#x7684;&#x65F6;&#x5019;&#x4F7F;&#x7528;&#xFF0C;&#x6307;&#x660E;&#x8D44;&#x6E90;&#x53EF;&#x4EE5;&#x88AB;&#x8BF7;&#x6C42;&#x7684;&#x65B9;&#x5F0F;</span></div></pre></td></tr></table></figure>
<p>&#x4F46;&#x662F;&#x5982;&#x679C;&#x5728;&#x8BF7;&#x6C42;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x9700;&#x8981;&#x643A;&#x5E26;Cookie&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x9700;&#x8981;&#x5728;<strong>&#x670D;&#x52A1;&#x7AEF;&#x548C;&#x5BA2;&#x6237;&#x7AEF;</strong>&#x4E24;&#x7AEF;&#x505A;&#x4E00;&#x4E9B;&#x5904;&#x7406;</p>
<blockquote>
<p>&#x5728;&#x5BA2;&#x6237;&#x7AEF;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x7ED9;<code>XMLHTTPRequest</code>&#x5BF9;&#x8C61;&#x5F00;&#x542F;<code>withCredentials</code>&#x5C5E;&#x6027;&#xFF0C;&#x4F8B;&#x5982;&#x4E0B;&#x9762;&#x6211;&#x5C01;&#x88C5;&#x7684;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;AJAX&#x8BF7;&#x6C42;&#x3002;</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">AJAX</span>(<span class="params">method, URL, async, type, callback, data</span>) </span>{</div><div class="line">    <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</div><div class="line">    xhr.responseType = type;</div><div class="line">    <span class="comment">//&#x5F00;&#x542F;withCredentials&#x5C5E;&#x6027;</span></div><div class="line">    xhr.withCredentials = <span class="literal">true</span>;</div><div class="line">    xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</div><div class="line">        <span class="keyword">if</span> (xhr.readyState == <span class="number">4</span> &amp;&amp; xhr.status == <span class="number">200</span>) {</div><div class="line">            <span class="keyword">var</span> getRes = xhr.response;</div><div class="line">            callback(getRes);</div><div class="line">        }</div><div class="line">    };</div><div class="line">    xhr.onerror = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>{</div><div class="line">        <span class="built_in">console</span>.error(e);</div><div class="line">    };</div><div class="line">    xhr.open(method, URL, <span class="keyword">async</span>);</div><div class="line">    <span class="keyword">if</span> (data) {</div><div class="line">      xhr.setRequestHeader(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/x-www-form-urlencoded&quot;</span>);</div><div class="line">      xhr.send(data);</div><div class="line">    } <span class="keyword">else</span> {</div><div class="line">      xhr.send();</div><div class="line">    }</div><div class="line">}</div></pre></td></tr></table></figure>
<blockquote>
<p>&#x5728;&#x670D;&#x52A1;&#x7AEF;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x4E3A;&#x54CD;&#x5E94;&#x7684;&#x5934;&#x4FE1;&#x606F;&#x6DFB;&#x52A0;<code>Access-Control-Allow-Credentials</code>&#x3002;<strong>&#x8FD9;&#x65F6;&#x670D;&#x52A1;&#x7AEF;&#x5FC5;&#x987B;&#x5236;&#x5B9A;&#x8BF7;&#x6C42;&#x7684;&#x57DF;&#x540D;&#xFF0C;&#x4E0D;&#x518D;&#x80FD;&#x4F7F;&#x7528;&#x2019;*&#x2019;</strong>, &#x6211;&#x4EEC;&#x9700;&#x8981;&#x9488;&#x5BF9;&#x4E0D;&#x540C;&#x8BBF;&#x95EE;&#x8BBE;&#x5B9A;&#x8DE8;&#x6E90;&#x5141;&#x8BB8;&#x57DF;&#xFF0C;&#x8FD9;&#x65F6;HTTP&#x8BF7;&#x6C42;&#x5934;&#x7684;<code>Referer</code>&#x503C;&#x5C31;&#x5F88;&#x597D;&#x7528;&#x4E86;&#xFF0C;&#x5F53;&#x5728;&#x4E00;&#x4E2A;&#x57DF;&#x4E0B;&#x53D1;&#x8D77;&#x4E00;&#x4E2A;CORS&#x8BF7;&#x6C42;&#x65F6;&#xFF0C;HTTP&#x8BF7;&#x6C42;&#x5934;&#x7684;<code>Referer</code>&#x4F1A;&#x81EA;&#x52A8;&#x8BBE;&#x7F6E;&#x4E3A;&#x9875;&#x9762;&#x57DF;&#xFF0C;&#x6B64;&#x65F6;&#x53EA;&#x8981;&#x6211;&#x4EEC;&#x5728;&#x670D;&#x52A1;&#x7AEF;&#x6839;&#x636E;<code>Referer</code>&#x503C;&#x6784;&#x9020;&#x51FA;&#x76F8;&#x5E94;&#x7684;<code>Access-Control-Allow-Origin</code>&#x503C;&#x5373;&#x53EF;&#x3002;</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> origin = req.headers.referer;</div><div class="line"><span class="keyword">if</span> (origin) {</div><div class="line">  origin = origin.match(<span class="regexp">/^http:\/\/+[a-zA-Z0-9\.]+(\:[0-9]+)?/</span>);</div><div class="line">}</div><div class="line">origin = origin ? origin[<span class="number">0</span>] : <span class="string">&apos;your url&apos;</span>;</div><div class="line">res.setHeader(<span class="string">&apos;Access-Control-Allow-Origin&apos;</span>, origin);</div><div class="line">res.setHeader(<span class="string">&apos;Access-Control-Allow-Credentials&apos;</span>, <span class="string">&apos;true&apos;</span>);</div></pre></td></tr></table></figure>
<p>&#x8FD9;&#x6837;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x5C3D;&#x60C5;&#x4F7F;&#x7528;&#x5E26;Cookie&#x7684;&#x8DE8;&#x57DF;&#x4E86;&#x3002;</p>
<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Access_control_CORS" target="_blank" rel="external">&#x66F4;&#x591A;&#x5173;&#x4E8E;CORS&#x53EF;&#x4EE5;&#x9605;&#x8BFB;&#x672C;&#x7BC7;</a><br><a href="http://blog.hellofe.com/web/2014/12/28/the-CORS-protocol/" target="_blank" rel="external">&#x4F7F;&#x7528;Referer&#x7684;&#x7075;&#x611F;&#x6765;&#x81EA;&#x8FD9;&#x91CC;</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oanr6klwj.bkt.clouddn.com/blog/cors-and-cookies-cover.jpg&quot; alt=&quot;cover&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://www.pixiv.net/member_illust.php?mode=medium&amp;amp;illust_id=56852068&quot;&gt;&lt;em&gt;pixiv-ID: 56852068&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;本次的项目是为一个短期活动搭建Node.js服务端，部署在服务器上后发现同事在自己的本机使用需要携带Cookie的AJAX请求调用接口的时候,受到了同源策略的限制。因此我们需要在服务端对跨域请求开放许可。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Back-End" scheme="http://lovin0730.github.io/tags/back-end/"/>
    
      <category term="Node.js" scheme="http://lovin0730.github.io/tags/node-js/"/>
    
  </entry>
  
  <entry>
    <title>实现温度曲线过程中的思考</title>
    <link href="http://lovin0730.github.io/2016/07/15/temperature-curve/"/>
    <id>http://lovin0730.github.io/2016/07/15/temperature-curve/</id>
    <published>2016-07-15T07:17:16.000Z</published>
    <updated>2016-10-26T06:43:13.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://oanr6klwj.bkt.clouddn.com/blog/temperature-curve-cover.png" alt="cover"></p>
<blockquote>
<p><a href="http://www.pixiv.net/member_illust.php?mode=medium&amp;illust_id=50140585" target="_blank" rel="external"><em>pixiv-ID: 50140585</em></a></p>
</blockquote>
<p>&#x4E0A;&#x5468;&#x63A5;&#x5230;&#x7684;&#x9700;&#x6C42;&#x662F;&#x5B9E;&#x73B0;QQ&#x6D4F;&#x89C8;&#x5668;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x6E29;&#x5EA6;&#x66F2;&#x7EBF;&#x3002;&#x5177;&#x4F53;&#x6765;&#x8BF4;&#x5C31;&#x662F;&#x4F20;&#x5165;&#x4E00;&#x7EC4;&#x6570;&#x636E;&#xFF0C;&#x6570;&#x636E;&#x5305;&#x62EC;6&#x5929;&#x7684;&#x5F53;&#x65E5;&#x6700;&#x9AD8;&#x6E29;&#x5EA6;&#x548C;&#x6700;&#x4F4E;&#x6E29;&#x5EA6;&#xFF0C;&#x7531;&#x6B64;&#x62DF;&#x5408;&#x51FA;&#x4E00;&#x6761;&#x66F2;&#x7EBF;&#x3002;</p>
<p>&#x66F2;&#x7EBF;&#x4F7F;&#x7528;canvas&#x8FDB;&#x884C;&#x7ED8;&#x5236;&#xFF0C;&#x56E0;&#x6B64;&#x6709;&#x539F;&#x751F;&#x7684;&#x8D1D;&#x585E;&#x5C14;&#x66F2;&#x7EBF;api&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x3002;&#x6211;&#x4EEC;&#x5E94;&#x8BE5;&#x6700;&#x5927;&#x5316;&#x7684;&#x5229;&#x7528;&#x8FD9;&#x4E2A;&#x5148;&#x5929;&#x4F18;&#x52BF;&#xFF0C;&#x907F;&#x514D;&#x8FC7;&#x591A;&#x7684;&#x6570;&#x5B66;&#x8BA1;&#x7B97;&#x3002;</p>
<a id="more"></a>
<p>&#x5728;&#x8FD9;&#x4E2A;&#x9700;&#x6C42;&#x4E2D;&#xFF0C;&#x6709;&#x4E24;&#x4E2A;&#x5F88;&#x6709;&#x8DA3;&#x7684;&#x70B9;&#xFF1A;</p>
<ul>
<li>&#x5982;&#x679C;&#x51FA;&#x73B0;&#x5929;&#x6C14;&#x53D8;&#x5316;&#x5F88;&#x5C0F;&#x7684;&#x60C5;&#x51B5;&#xFF1A;&#x6BD4;&#x5982;&#x524D;&#x56DB;&#x5929;&#x6C14;&#x6E29;&#x90FD;&#x4E3A;22&#xB0;~23&#xB0;&#xFF0C;&#x7B2C;&#x4E94;&#x5929;&#x7684;&#x53D8;&#x4E3A;23&#xB0;~24&#xB0;&#xFF0C;&#x90A3;&#x4E48;&#x66F2;&#x7EBF;&#x4E2D;&#x8FD9;&#x4E00;&#x53D8;&#x5316;&#x662F;&#x5426;&#x5E94;&#x8BE5;&#x8868;&#x73B0;&#x7684;&#x975E;&#x5E38;&#x660E;&#x663E;&#xFF1F;</li>
<li>&#x7ED9;&#x5B9A;&#x7684;&#x6E29;&#x5EA6;&#x662F;&#x4E00;&#x4E2A;&#x533A;&#x95F4;&#xFF0C;&#x90A3;&#x4E48;&#x5982;&#x4F55;&#x5728;&#x8FD9;&#x4E2A;&#x533A;&#x95F4;&#x4E2D;&#x7528;&#x4E00;&#x6761;<strong>&#x5E73;&#x6ED1;</strong>&#x66F2;&#x7EBF;&#x8F83;&#x4E3A;&#x51C6;&#x786E;&#x7684;&#x63CF;&#x7ED8;&#x51FA;&#x53D8;&#x5316;&#xFF1F;</li>
</ul>
<p>&#x9700;&#x6C42;&#x7684;&#x8BBE;&#x8BA1;&#x7A3F;&#x5982;&#x4E0B;&#xFF1A;<br><img src="http://oanr6klwj.bkt.clouddn.com/blog/temperature-curve-design.png" alt="design curve"></p>
<p>&#x7ECF;&#x8FC7;&#x601D;&#x8003;&#xFF0C;&#x4E2A;&#x4EBA;&#x8BA4;&#x4E3A;&#x5904;&#x7406;&#x4E0A;&#x8FF0;&#x4E24;&#x4E2A;&#x95EE;&#x9898;&#x7684;&#x529E;&#x6CD5;&#x662F;:</p>
<blockquote>
<ul>
<li>&#x5982;&#x679C;&#x6E29;&#x5EA6;&#x53D8;&#x5316;&#x60C5;&#x51B5;&#x5F88;&#x5C0F;&#xFF0C;&#x90A3;&#x4E48;&#x66F2;&#x7EBF;&#x7684;&#x53D8;&#x5316;&#x4E5F;&#x4E0D;&#x5B9C;&#x8FC7;&#x5927;&#xFF0C;&#x4EE5;&#x514D;&#x7ED9;&#x957F;&#x671F;&#x7528;&#x6237;&#x9020;&#x6210;&#x56F0;&#x6270;&#x3002;</li>
<li><p>&#x8FD9;&#x6761;&#x66F2;&#x7EBF;&#x4E0D;&#x91C7;&#x7528;&#x63CF;&#x70B9;-&#x8FDE;&#x7EBF;-&#x6298;&#x7EBF;&#x8F6C;&#x66F2;&#x7EBF;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x63CF;&#x7ED8;&#xFF0C;&#x4E5F;&#x4E0D;&#x91C7;&#x7528;&#x70B9;&#x62DF;&#x5408;&#x66F2;&#x7EBF;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x8FDB;&#x884C;&#xFF0C;&#x7406;&#x7531;&#x5982;&#x4E0B;&#xFF1A;</p>
<ul>
<li>&#x63CF;&#x70B9;-&#x8FDE;&#x7EBF;-&#x6298;&#x7EBF;&#x8F6C;&#x66F2;&#x7EBF;&#x9762;&#x5BF9;&#x7684;&#x4E00;&#x4E2A;&#x5F88;&#x68D8;&#x624B;&#x7684;&#x95EE;&#x9898;&#x5C31;&#x662F;&#x5BF9;&#x4E8E;&#x66F2;&#x7EBF;&#x66F2;&#x5EA6;&#x7684;&#x628A;&#x63E1;&#xFF0C;&#x800C;&#x4E14;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x7684;&#x5411;&#x91CF;&#x8BA1;&#x7B97;&#x53EF;&#x80FD;&#x4F1A;&#x5BF9;&#x6027;&#x80FD;&#x4EA7;&#x751F;&#x4E00;&#x4E9B;&#x5F71;&#x54CD;&#x3002;</li>
<li>&#x70B9;&#x62DF;&#x5408;&#x66F2;&#x7EBF;&#x662F;&#x4E00;&#x4E2A;&#x7A33;&#x59A5;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x4F46;&#x662F;&#x9700;&#x8981;&#x9762;&#x5BF9;&#x7684;&#x95EE;&#x9898;&#x662F;&#x8D85;&#x5927;&#x7684;&#x8BA1;&#x7B97;&#x91CF;&#x3002;&#x800C;&#x4E14;&#x5BF9;&#x4E8E;&#x6C14;&#x6E29;&#x53D8;&#x5316;&#x5927;&#x7684;&#x57CE;&#x5E02;&#x5F88;&#x53EF;&#x80FD;&#x51FA;&#x73B0;&#x66F2;&#x7EBF;&#x504F;&#x79BB;&#x5176;&#x4E2D;&#x4E00;&#x70B9;&#x5F88;&#x8FDC;&#x7684;&#x60C5;&#x51B5;&#x3002;</li>
</ul>
</li>
<li><p>&#x7EFC;&#x4E0A;&#x6240;&#x8FF0;&#xFF0C;&#x6211;&#x91C7;&#x53D6;&#x4E86;&#x4E00;&#x79CD;&#x6298;&#x7EBF;&#x62DF;&#x5408;&#x66F2;&#x7EBF;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x8FD9;&#x4E2A;&#x65B9;&#x5F0F;&#x975E;&#x5E38;&#x6709;&#x8DA3;&#xFF0C;&#x7075;&#x611F;&#x6765;&#x81EA;<a href="https://github.com/hongru/Canvas-Tattle/issues/19" target="_blank" rel="external">&#x8FD9;&#x91CC;</a></p>
</li>
<li><p>&#x4F46;&#x662F;&#x8FD9;&#x4E2A;&#x529E;&#x6CD5;&#x6709;&#x4E00;&#x4E2A;&#x5F88;&#x5927;&#x7684;&#x95EE;&#x9898;&#x5C31;&#x662F;&#xFF1A;&#x4E66;&#x5199;&#x4E0A;&#x4E0B;&#x6E29;&#x5EA6;&#x503C;&#x7684;&#x65F6;&#x5019;&#x5982;&#x4F55;&#x786E;&#x5B9A;&#x5728;&#x7EBF;&#x4E0A;&#x7684;&#x70B9;&#x7684;Y&#x5750;&#x6807;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x7B97;&#x6CD5;&#x53BB;&#x89E3;&#x51B3;&#x5B83;&#x3002;</p>
</li>
</ul>
</blockquote>
<p>&#x56E0;&#x6B64;&#x4EE3;&#x7801;&#x6838;&#x5FC3;&#x5206;&#x4E3A;&#x4E09;&#x90E8;&#x5206;&#xFF1A;</p>
<ol>
<li>&#x7B2C;&#x4E00;&#x90E8;&#x5206;&#x662F;&#x5982;&#x4F55;&#x8BA9;&#x66F2;&#x7EBF;&#x53D8;&#x5316;&#x6839;&#x636E;&#x6E29;&#x5DEE;&#x5927;&#x5C0F;&#x8FDB;&#x884C;&#x9002;&#x5EA6;&#x7684;&#x53D8;&#x5316;&#xFF0C;&#x6E29;&#x5DEE;&#x5927;&#x53D8;&#x5316;&#x5927;&#xFF0C;&#x6E29;&#x5DEE;&#x5C0F;&#x53D8;&#x5316;&#x5C0F;&#x3002;&#x4E14;&#x80FD;&#x591F;&#x5BB9;&#x7EB3;&#x8DB3;&#x591F;&#x7684;&#x6E29;&#x5EA6;&#x53D8;&#x5316;&#x533A;&#x95F4;&#x3002;</li>
<li>&#x7B2C;&#x4E8C;&#x90E8;&#x5206;&#x662F;&#x5982;&#x4F55;&#x628A;&#x6298;&#x7EBF;&#x62DF;&#x5408;&#x4E3A;&#x5E73;&#x6ED1;&#x66F2;&#x7EBF;&#x3002;</li>
<li>&#x7B2C;&#x4E09;&#x90E8;&#x5206;&#x662F;&#x786E;&#x7ACB;&#x7B97;&#x6CD5;&#x6C42;&#x89E3;&#x7279;&#x5B9A;&#x70B9;&#x7684;Y&#x5750;&#x6807;&#x3002;</li>
</ol>
<hr>
<p>&#x5904;&#x7406;&#x7B2C;&#x4E00;&#x90E8;&#x5206;&#x7684;&#x529E;&#x6CD5;&#x662F;&#x6839;&#x636E;&#x7ED9;&#x5B9A;&#x7684;&#x6570;&#x636E;&#x8BA1;&#x7B97;&#x51FA;&#x4E00;&#x4E2A;&#x53C2;&#x8003;&#x533A;&#x95F4;&#xFF0C;&#x7136;&#x540E;&#x6839;&#x636E;&#x8FD9;&#x4E2A;&#x53C2;&#x8003;&#x533A;&#x95F4;&#x6765;&#x63CF;&#x7ED8;&#x66F2;&#x7EBF;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x73B0;&#x5728;&#x7684;&#x6E29;&#x5EA6;&#x6570;&#x636E;&#x662F;&#x4E0A;&#x56FE;&#x8BBE;&#x8BA1;&#x56FE;&#x6240;&#x793A;&#x7684;&#x6E29;&#x5EA6;&#x6570;&#x636E;&#xFF0C;&#x90A3;&#x4E48;&#x7406;&#x60F3;&#x7684;&#x6E29;&#x5EA6;&#x533A;&#x95F4;&#x5C31;&#x662F;28~10&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x9996;&#x5148;&#x8981;<strong>&#x8BA1;&#x7B97;&#x5408;&#x7406;&#x6E29;&#x5EA6;&#x533A;&#x95F4;</strong>&#x3002;&#x5176;&#x6B21;&#xFF0C;&#x533A;&#x95F4;&#x8BA1;&#x7B97;&#x51FA;&#x6765;&#x4E4B;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x5728;canvas&#x4E0A;&#x7684;&#x5750;&#x6807;&#x548C;&#x6E29;&#x5EA6;&#x5728;&#x8FD9;&#x4E2A;&#x533A;&#x95F4;&#x4E2D;&#x7684;&#x4F4D;&#x7F6E;&#x662F;&#x6210;&#x6BD4;&#x4F8B;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x8981;<strong>&#x8BA1;&#x7B97;&#x6E29;&#x5EA6;&#x70B9;&#x5BF9;&#x5E94;canvas&#x753B;&#x5E03;&#x4E2D;&#x7684;&#x4F4D;&#x7F6E;</strong></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> cfg = {</div><div class="line">  <span class="attr">canvaswidth</span>: <span class="number">660</span>, <span class="comment">//&#x753B;&#x5E03;&#x5BBD;&#x5EA6;</span></div><div class="line">  canvasheight: <span class="number">228</span>,  <span class="comment">//&#x753B;&#x5E03;&#x9AD8;&#x5EA6;</span></div><div class="line">  blankx: <span class="number">0</span>, <span class="comment">//&#x66F2;&#x7EBF;&#x6A2A;&#x5411;&#x7559;&#x767D;</span></div><div class="line">  blankt: <span class="number">30</span>, <span class="comment">//&#x6587;&#x5B57;&#x6A2A;&#x5411;&#x7559;&#x767D;</span></div><div class="line">  blanky: <span class="number">35</span>  <span class="comment">//&#x66F2;&#x7EBF;&#x7EB5;&#x5411;&#x7559;&#x767D;</span></div><div class="line">};</div><div class="line"><span class="keyword">var</span> setting = {</div><div class="line">  <span class="attr">linewidth</span>: <span class="number">1</span>, <span class="comment">//&#x66F2;&#x7EBF;&#x7C97;&#x7EC6;</span></div><div class="line">  linecolor: <span class="string">&apos;#fff&apos;</span>, <span class="comment">//&#x66F2;&#x7EBF;&#x989C;&#x8272;</span></div><div class="line">  base: <span class="number">5</span>, <span class="comment">//&#x533A;&#x95F4;&#x57FA;&#x51C6;&#x503C;</span></div><div class="line">  textsize: <span class="number">24</span>, <span class="comment">//&#x6587;&#x5B57;&#x5927;&#x5C0F;</span></div><div class="line">  textoffset: <span class="number">34</span>, <span class="comment">//&#x6587;&#x5B57;&#x4E0E;&#x66F2;&#x7EBF;&#x8DDD;&#x79BB;</span></div><div class="line">  textcolor: <span class="string">&apos;#fff&apos;</span>, <span class="comment">//&#x6587;&#x5B57;&#x989C;&#x8272;</span></div><div class="line">  font: <span class="string">&apos;arial&apos;</span> <span class="comment">//&#x6587;&#x5B57;&#x5B57;&#x4F53;</span></div><div class="line">}</div><div class="line"><span class="keyword">var</span> getdata = <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>{</div><div class="line">  <span class="keyword">var</span> _getdata = [],</div><div class="line">      _avarage;</div><div class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> _i = <span class="number">0</span>; _i &lt; data.length; _i++) {</div><div class="line">    _avarage = (data[_i][<span class="number">0</span>] + data[_i][<span class="number">1</span>]) / <span class="number">2</span>;</div><div class="line">    _getdata.push(_avarage);</div><div class="line">  }</div><div class="line">  <span class="keyword">return</span> _getdata;</div><div class="line">}</div><div class="line"><span class="keyword">var</span> choseRank = <span class="function"><span class="keyword">function</span>(<span class="params">getData</span>) </span>{</div><div class="line">  <span class="keyword">var</span> _max = -<span class="literal">Infinity</span>,</div><div class="line">      _min = <span class="literal">Infinity</span>,</div><div class="line">      _res,</div><div class="line">      _cur,</div><div class="line">      _rank;</div><div class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> _i = <span class="number">0</span>; _i &lt; getData.length; _i++) {</div><div class="line">    _cur = getData[_i];</div><div class="line">    <span class="keyword">if</span> (_cur &gt; _max) {</div><div class="line">      _max = _cur;</div><div class="line">    }</div><div class="line">    <span class="keyword">if</span> (_cur &lt; _min) {</div><div class="line">      _min = _cur;</div><div class="line">    }</div><div class="line">  }</div><div class="line">  _res = _max - _min;</div><div class="line">  _rank = <span class="built_in">Math</span>.round(_res / setting.base) + <span class="number">1</span>;</div><div class="line">  <span class="keyword">return</span> _rank * setting.base;</div><div class="line">}</div></pre></td></tr></table></figure>
<p>&#x5904;&#x7406;&#x7B2C;&#x4E8C;&#x90E8;&#x5206;&#x7684;&#x529E;&#x6CD5;&#x5C31;&#x6765;&#x81EA;&#x4E8E;&#x4E0A;&#x8FF0;&#x90A3;&#x4E2A;&#x94FE;&#x63A5;&#x4E2D;&#x7684;&#x7075;&#x611F;&#x3002;&#x5047;&#x8BBE;&#x6211;&#x4EEC;&#x6709;&#x70B9;A&#x3001;B&#x3001;C&#x3001;D&#x3001;E&#x3002;&#x90A3;&#x4E48;&#x6211;&#x4EEC;&#x4EE5;A&#x4E3A;&#x8D77;&#x70B9;&#xFF0C;B&#x3001;C&#x7684;&#x4E2D;&#x70B9;&#x4E3A;&#x7EC8;&#x70B9;&#xFF0C;B&#x4E3A;&#x53C2;&#x8003;&#x70B9;&#x505A;&#x8D1D;&#x585E;&#x5C14;&#x66F2;&#x7EBF;;&#x7136;&#x540E;&#x63A5;&#x7740;&#x4EE5;C&#x3001;D&#x7684;&#x4E2D;&#x70B9;&#x4E3A;&#x7EC8;&#x70B9;&#xFF0C;C&#x4E3A;&#x53C2;&#x8003;&#x70B9;&#x505A;&#x8D1D;&#x585E;&#x5C14;&#x66F2;&#x7EBF;&#xFF0C;&#x4EE5;&#x6B64;&#x7C7B;&#x63A8;&#x3002;<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> draw_MAIN = <span class="function"><span class="keyword">function</span>(<span class="params">canvas, data</span>) </span>{</div><div class="line">  <span class="keyword">var</span> _dataGot = getData(data);</div><div class="line">  <span class="keyword">var</span> _rank = choseRank(_dataGot);</div><div class="line">  <span class="keyword">var</span> _totalPoint = _dataGot.length;</div><div class="line">  <span class="keyword">var</span> _sum = getSum(_dataGot);</div><div class="line">  <span class="keyword">var</span> _avr = <span class="built_in">Math</span>.round(_sum / _totalPoint);</div><div class="line">  <span class="keyword">var</span> _low = _avr - _rank / <span class="number">2</span>,</div><div class="line">      _high = _avr + _rank / <span class="number">2</span>,</div><div class="line">      _interval = (cfg.canvasWidth - cfg.blankX * <span class="number">2</span>) / (_totalPoint - <span class="number">1</span>),</div><div class="line">      _intervalT = (cfg.canvasWidth - cfg.blankT * <span class="number">2</span>) / (_totalPoint - <span class="number">1</span>),</div><div class="line">      _curSupport,</div><div class="line">      _cur,</div><div class="line">      _next;</div><div class="line">  <span class="keyword">var</span> _curPoint = cfg.blankX;</div><div class="line">  <span class="keyword">var</span> getY = <span class="function"><span class="keyword">function</span>(<span class="params">i</span>) </span>{</div><div class="line">    <span class="keyword">return</span> cfg.canvasHeight - cfg.blankY - (_dataGot[i] - _low) *</div><div class="line">           (cfg.canvasHeight - cfg.blankY * <span class="number">2</span>) / _rank;</div><div class="line">  }</div><div class="line">  <span class="keyword">if</span> (canvas.getContext) {</div><div class="line">    <span class="keyword">var</span> _ctx = canvas.getContext(<span class="string">&apos;2d&apos;</span>);</div><div class="line">    _ctx.imageSmoothingEnabled = <span class="literal">true</span>;</div><div class="line">    _ctx.strokeStyle = setting.lineColor;</div><div class="line">    _ctx.lineWidth = setting.lineWidth;</div><div class="line">    _ctx.lineCap = <span class="string">&apos;round&apos;</span>;</div><div class="line">    _ctx.beginPath();</div><div class="line">    _ctx.moveTo(_curPoint, getY(<span class="number">0</span>));</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> _i = <span class="number">0</span>; _i &lt; _dataGot.length - <span class="number">1</span>; _i++) {</div><div class="line">      _cur = getY(_i + <span class="number">1</span>);</div><div class="line">      _next = getY(_i + <span class="number">2</span>);</div><div class="line">      _curSupport = getSupportPoint(_cur, _next);</div><div class="line">      <span class="keyword">if</span> (_i &lt; _dataGot.length - <span class="number">2</span>) {</div><div class="line">        _ctx.quadraticCurveTo(_curPoint + _interval, _cur,</div><div class="line">          _curPoint + _interval * <span class="number">1.5</span>, _curSupport);</div><div class="line">      } <span class="keyword">else</span> <span class="keyword">if</span> (_i &gt;= _dataGot.length - <span class="number">2</span>) {</div><div class="line">        _ctx.quadraticCurveTo(_curPoint, getY(_i),</div><div class="line">          _curPoint + _interval, _cur);</div><div class="line">      }</div><div class="line">      _curPoint += _interval;</div><div class="line">      _ctx.stroke();</div><div class="line">    }</div><div class="line">  }</div><div class="line">}</div></pre></td></tr></table></figure></p>
<p>&#x8FD9;&#x65F6;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x7B97;&#x6CD5;&#x6765;&#x8BA1;&#x7B97;&#x51FA;bezier-curve&#x4E0A;&#x7279;&#x5B9A;&#x70B9;&#x7684;&#x5750;&#x6807;&#xFF0C;canvas&#x6CA1;&#x6709;&#x7ED9;&#x6211;&#x4EEC;&#x63D0;&#x4F9B;&#x76F8;&#x5E94;&#x7684;api&#xFF0C;&#x9700;&#x8981;&#x6211;&#x4EEC;<strong>&#x6839;&#x636E;bezier&#x51FD;&#x6570;</strong>&#x81EA;&#x5DF1;&#x6765;&#x5B8C;&#x6210;&#xFF0C;&#x8FD9;&#x91CC;&#x6211;&#x653E;&#x4E0A;&#x4E24;&#x4E2A;&#x53C2;&#x8003;&#x94FE;&#x63A5;</p>
<blockquote>
<p><a href="http://www.cnblogs.com/jay-dong/archive/2012/09/26/2704188.html" target="_blank" rel="external">&#x8D1D;&#x585E;&#x5C14;&#x66F2;&#x7EBF;&#x521D;&#x63A2;</a><br><a href="http://stackoverflow.com/questions/14174252/how-to-find-out-y-coordinate-of-specific-point-in-bezier-curve-in-canvas" target="_blank" rel="external">stackoverflow&#x4E0A;&#x7684;&#x95EE;&#x9898;</a></p>
</blockquote>
<p>&#x6700;&#x540E;&#x5F97;&#x51FA;&#x7684;&#x51FD;&#x6570;&#x4E3A;&#xFF1A;</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> getYValues = <span class="function"><span class="keyword">function</span>(<span class="params">start, control, end, X</span>) </span>{</div><div class="line">  <span class="keyword">var</span> _q1,</div><div class="line">      _q2,</div><div class="line">      _q3,</div><div class="line">      _t,</div><div class="line">      _y;</div><div class="line">  _q1 = <span class="number">2</span> * start.x - <span class="number">2</span> * control.x;</div><div class="line">  _q2 = <span class="built_in">Math</span>.sqrt(<span class="number">5</span> * start.x * start.x - <span class="number">10</span> * start.x * control.x +</div><div class="line">    start.x * end.x - start.x * X + <span class="number">2</span> * control.x * X +</div><div class="line">    <span class="number">4</span> * control.x * control.x );</div><div class="line">  _q3 = <span class="number">2</span> * start.x - <span class="number">4</span> * control.x + <span class="number">2</span> * end.x;</div><div class="line">  <span class="keyword">if</span> (_q3 !== <span class="number">0</span>) {</div><div class="line">    _t = (_q1 + _q2) / _q3;</div><div class="line">  } <span class="keyword">else</span> {</div><div class="line">    _t = ( X - start.x) / (<span class="number">2</span>*control.x - <span class="number">2</span>*start.x);</div><div class="line">  }</div><div class="line">  <span class="keyword">if</span> (_t &lt; <span class="number">0</span>) {</div><div class="line">    _t = <span class="number">-1</span> * _t;</div><div class="line">  }</div><div class="line">  _y = start.y * (<span class="number">1</span> - _t) * (<span class="number">1</span> - _t) + control.y * <span class="number">2</span> * (<span class="number">1</span> - _t)</div><div class="line">    * _t + end.y * _t * _t;</div><div class="line">  <span class="keyword">return</span> _y;</div><div class="line">}</div></pre></td></tr></table></figure>
<p>&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;canvas&#x7ED8;&#x5236;&#x66F2;&#x7EBF;&#x4F1A;&#x4EA7;&#x751F;&#x952F;&#x9F7F;&#xFF0C;&#x9664;&#x4E86;&#x5F00;&#x542F;&#x6D4F;&#x89C8;&#x5668;&#x6297;&#x952F;&#x9F7F;&#x4EE5;&#x5916;&#xFF0C;&#x6309;&#x7167;&#x4E8C;&#x500D;&#x56FE;&#x6765;&#x7ED8;&#x5236;&#x7136;&#x540E;&#x518D;&#x7F29;&#x5C0F;&#x4E5F;&#x662F;&#x884C;&#x4E4B;&#x6709;&#x6548;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x8FD9;&#x91CC;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x7B28;&#x529E;&#x6CD5;&#xFF1A;<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> setScale = <span class="function"><span class="keyword">function</span>(<span class="params">num, cfg, setting</span>) </span>{</div><div class="line">  cfg.canvasWidth *= num;</div><div class="line">  cfg.canvasHeight *= num;</div><div class="line">  cfg.blankX *= num;</div><div class="line">  cfg.blankT *= num;</div><div class="line">  cfg.blankY *= num;</div><div class="line">  setting.lineWidth *= num;</div><div class="line">  setting.base *= num;</div><div class="line">  setting.textSize *= num;</div><div class="line">  setting.textOffSet *= num;</div><div class="line">}</div></pre></td></tr></table></figure></p>
<hr>
<p>&#x6240;&#x4EE5;&#x6700;&#x7EC8;&#x4EE3;&#x7801;&#x4E3A;:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">drawTemperature</span>(<span class="params">canvas, data</span>) </span>{</div><div class="line">  <span class="keyword">var</span> cfg = {</div><div class="line">    <span class="attr">canvasWidth</span>: <span class="number">660</span>, <span class="comment">//&#x753B;&#x5E03;&#x5BBD;&#x5EA6;</span></div><div class="line">    canvasHeight: <span class="number">228</span>,  <span class="comment">//&#x753B;&#x5E03;&#x9AD8;&#x5EA6;</span></div><div class="line">    blankX: <span class="number">0</span>, <span class="comment">//&#x66F2;&#x7EBF;&#x6A2A;&#x5411;&#x7559;&#x767D;</span></div><div class="line">    blankT: <span class="number">30</span>, <span class="comment">//&#x6587;&#x5B57;&#x6A2A;&#x5411;&#x7559;&#x767D;</span></div><div class="line">    blankY: <span class="number">35</span>  <span class="comment">//&#x66F2;&#x7EBF;&#x7EB5;&#x5411;&#x7559;&#x767D;</span></div><div class="line">  };</div><div class="line">  <span class="keyword">var</span> setting = {</div><div class="line">    <span class="attr">lineWidth</span>: <span class="number">1</span>, <span class="comment">//&#x66F2;&#x7EBF;&#x7C97;&#x7EC6;</span></div><div class="line">    lineColor: <span class="string">&apos;#fff&apos;</span>, <span class="comment">//&#x66F2;&#x7EBF;&#x989C;&#x8272;</span></div><div class="line">    base: <span class="number">5</span>, <span class="comment">//&#x533A;&#x95F4;&#x57FA;&#x51C6;&#x503C;</span></div><div class="line">    textSize: <span class="number">24</span>, <span class="comment">//&#x6587;&#x5B57;&#x5927;&#x5C0F;</span></div><div class="line">    textOffSet: <span class="number">34</span>, <span class="comment">//&#x6587;&#x5B57;&#x4E0E;&#x66F2;&#x7EBF;&#x8DDD;&#x79BB;</span></div><div class="line">    textColor: <span class="string">&apos;#fff&apos;</span>, <span class="comment">//&#x6587;&#x5B57;&#x989C;&#x8272;</span></div><div class="line">    font: <span class="string">&apos;arial&apos;</span> <span class="comment">//&#x6587;&#x5B57;&#x5B57;&#x4F53;</span></div><div class="line">  }</div><div class="line">  <span class="keyword">var</span> getData = <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>{</div><div class="line">    <span class="keyword">var</span> _getData = [],</div><div class="line">        _avarage;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> _i = <span class="number">0</span>; _i &lt; data.length; _i++) {</div><div class="line">      _avarage = (data[_i][<span class="number">0</span>] + data[_i][<span class="number">1</span>]) / <span class="number">2</span>;</div><div class="line">      _getData.push(_avarage);</div><div class="line">    }</div><div class="line">    <span class="keyword">return</span> _getData;</div><div class="line">  }</div><div class="line">  <span class="keyword">var</span> choseRank = <span class="function"><span class="keyword">function</span>(<span class="params">getData</span>) </span>{</div><div class="line">    <span class="keyword">var</span> _max = -<span class="literal">Infinity</span>,</div><div class="line">        _min = <span class="literal">Infinity</span>,</div><div class="line">        _res,</div><div class="line">        _cur,</div><div class="line">        _rank;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> _i = <span class="number">0</span>; _i &lt; getData.length; _i++) {</div><div class="line">      _cur = getData[_i];</div><div class="line">      <span class="keyword">if</span> (_cur &gt; _max) {</div><div class="line">        _max = _cur;</div><div class="line">      }</div><div class="line">      <span class="keyword">if</span> (_cur &lt; _min) {</div><div class="line">        _min = _cur;</div><div class="line">      }</div><div class="line">    }</div><div class="line">    _res = _max - _min;</div><div class="line">    _rank = <span class="built_in">Math</span>.round(_res / setting.base) + <span class="number">1</span>;</div><div class="line">    <span class="keyword">return</span> _rank * setting.base;</div><div class="line">  }</div><div class="line">  <span class="keyword">var</span> getYValues = <span class="function"><span class="keyword">function</span>(<span class="params">start, control, end, X</span>) </span>{</div><div class="line">    <span class="keyword">var</span> _q1,</div><div class="line">        _q2,</div><div class="line">        _q3,</div><div class="line">        _t,</div><div class="line">        _y;</div><div class="line">    _q1 = <span class="number">2</span> * start.x - <span class="number">2</span> * control.x;</div><div class="line">    _q2 = <span class="built_in">Math</span>.sqrt(<span class="number">5</span> * start.x * start.x - <span class="number">10</span> * start.x * control.x +</div><div class="line">      start.x * end.x - start.x * X + <span class="number">2</span> * control.x * X +</div><div class="line">      <span class="number">4</span> * control.x * control.x );</div><div class="line">    _q3 = <span class="number">2</span> * start.x - <span class="number">4</span> * control.x + <span class="number">2</span> * end.x;</div><div class="line">    <span class="keyword">if</span> (_q3 !== <span class="number">0</span>) {</div><div class="line">      _t = (_q1 + _q2) / _q3;</div><div class="line">    } <span class="keyword">else</span> {</div><div class="line">      _t = ( X - start.x) / (<span class="number">2</span>*control.x - <span class="number">2</span>*start.x);</div><div class="line">    }</div><div class="line">    <span class="keyword">if</span> (_t &lt; <span class="number">0</span>) {</div><div class="line">      _t = <span class="number">-1</span> * _t;</div><div class="line">    }</div><div class="line">    _y = start.y * (<span class="number">1</span> - _t) * (<span class="number">1</span> - _t) + control.y * <span class="number">2</span> * (<span class="number">1</span> - _t)</div><div class="line">      * _t + end.y * _t * _t;</div><div class="line">    <span class="keyword">return</span> _y;</div><div class="line">  }</div><div class="line">  <span class="keyword">var</span> setScale = <span class="function"><span class="keyword">function</span>(<span class="params">num, cfg, setting</span>) </span>{</div><div class="line">    cfg.canvasWidth *= num;</div><div class="line">    cfg.canvasHeight *= num;</div><div class="line">    cfg.blankX *= num;</div><div class="line">    cfg.blankT *= num;</div><div class="line">    cfg.blankY *= num;</div><div class="line">    setting.lineWidth *= num;</div><div class="line">    setting.base *= num;</div><div class="line">    setting.textSize *= num;</div><div class="line">    setting.textOffSet *= num;</div><div class="line">  }</div><div class="line">  <span class="keyword">var</span> getSum = <span class="function"><span class="keyword">function</span>(<span class="params">getData</span>) </span>{</div><div class="line">    <span class="keyword">var</span> _sum = <span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> _i = <span class="number">0</span>; _i &lt; getData.length; _i++) {</div><div class="line">      _sum = _sum + getData[_i];</div><div class="line">    }</div><div class="line">    <span class="keyword">return</span> _sum;</div><div class="line">  }</div><div class="line">  <span class="keyword">var</span> getSupportPoint = <span class="function"><span class="keyword">function</span>(<span class="params">prev, next</span>) </span>{</div><div class="line">    <span class="keyword">return</span> (prev + next) / <span class="number">2</span>;</div><div class="line">  }</div><div class="line">  <span class="keyword">var</span> draw_MAIN = <span class="function"><span class="keyword">function</span>(<span class="params">canvas, data</span>) </span>{</div><div class="line">    setScale(<span class="number">2</span>, cfg, setting);</div><div class="line">    <span class="keyword">var</span> _dataGot = getData(data);</div><div class="line">    <span class="keyword">var</span> _rank = choseRank(_dataGot);</div><div class="line">    <span class="keyword">var</span> _totalPoint = _dataGot.length;</div><div class="line">    <span class="keyword">var</span> _sum = getSum(_dataGot);</div><div class="line">    <span class="keyword">var</span> _avr = <span class="built_in">Math</span>.round(_sum / _totalPoint);</div><div class="line">    <span class="keyword">var</span> _low = _avr - _rank / <span class="number">2</span>,</div><div class="line">        _high = _avr + _rank / <span class="number">2</span>,</div><div class="line">        _interval = (cfg.canvasWidth - cfg.blankX * <span class="number">2</span>) / (_totalPoint - <span class="number">1</span>),</div><div class="line">        _intervalT = (cfg.canvasWidth - cfg.blankT * <span class="number">2</span>) / (_totalPoint - <span class="number">1</span>),</div><div class="line">        _start = {},</div><div class="line">        _control = {},</div><div class="line">        _end = {},</div><div class="line">        _Y,</div><div class="line">        _curSupport,</div><div class="line">        _cur,</div><div class="line">        _next;</div><div class="line">    <span class="keyword">var</span> _curPoint = cfg.blankX;</div><div class="line">    <span class="keyword">var</span> _curPointT = cfg.blankT;</div><div class="line">    <span class="keyword">var</span> getY = <span class="function"><span class="keyword">function</span>(<span class="params">i</span>) </span>{</div><div class="line">      <span class="keyword">return</span> cfg.canvasHeight - cfg.blankY - (_dataGot[i] - _low) *</div><div class="line">             (cfg.canvasHeight - cfg.blankY * <span class="number">2</span>) / _rank;</div><div class="line">    }</div><div class="line">    <span class="keyword">if</span> (canvas.getContext) {</div><div class="line">      <span class="keyword">var</span> _ctx = canvas.getContext(<span class="string">&apos;2d&apos;</span>);</div><div class="line">      _ctx.imageSmoothingEnabled = <span class="literal">true</span>;</div><div class="line">      _ctx.strokeStyle = setting.lineColor;</div><div class="line">      _ctx.lineWidth = setting.lineWidth;</div><div class="line">      _ctx.lineCap = <span class="string">&apos;round&apos;</span>;</div><div class="line">      _ctx.font = setting.textSize + <span class="string">&apos;px &apos;</span> + setting.font;</div><div class="line">      _ctx.fillStyle = setting.textColor;</div><div class="line">      _ctx.textAlign = <span class="string">&apos;center&apos;</span>;</div><div class="line">      _ctx.textBaseline = <span class="string">&apos;middle&apos;</span>;</div><div class="line">      _ctx.fillText(data[<span class="number">0</span>][<span class="number">1</span>] + <span class="string">&quot;&#xB0;&quot;</span>, _curPointT,</div><div class="line">        getY(<span class="number">0</span>) - setting.textOffSet);</div><div class="line">      _ctx.fillText(data[<span class="number">0</span>][<span class="number">0</span>] + <span class="string">&quot;&#xB0;&quot;</span>, _curPointT,</div><div class="line">        getY(<span class="number">0</span>) + setting.textOffSet);</div><div class="line">      _ctx.beginPath();</div><div class="line">      _ctx.moveTo(_curPoint, getY(<span class="number">0</span>));</div><div class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> _i = <span class="number">0</span>; _i &lt; _dataGot.length - <span class="number">1</span>; _i++) {</div><div class="line">        _cur = getY(_i + <span class="number">1</span>);</div><div class="line">        _next = getY(_i + <span class="number">2</span>);</div><div class="line">        _curSupport = getSupportPoint(_cur, _next);</div><div class="line">        <span class="keyword">if</span> (_i === <span class="number">0</span>) {</div><div class="line">          _start.x = _curPoint;</div><div class="line">          _start.y = getY(<span class="number">0</span>);</div><div class="line">          _control.x = _curPoint + _interval;</div><div class="line">          _control.y = _cur;</div><div class="line">          _end.x = _curPoint + _interval * <span class="number">1.5</span>;</div><div class="line">          _end.y = _curSupport;</div><div class="line">          _Y = getYValues(_start, _control, _end, _curPoint + _interval);</div><div class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (_i &lt; _dataGot.length - <span class="number">2</span>) {</div><div class="line">          _start.x = _curPoint + _interval * <span class="number">0.5</span>;</div><div class="line">          _start.y = getSupportPoint(getY(_i), getY(_i + <span class="number">1</span>));</div><div class="line">          _control.x = _curPoint + _interval;</div><div class="line">          _control.y = _cur;</div><div class="line">          _end.x = _curPoint + _interval * <span class="number">1.5</span>;</div><div class="line">          _end.y = _curSupport;</div><div class="line">          _Y = getYValues(_start, _control, _end, _control.x);</div><div class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (_i &gt;= _dataGot.length - <span class="number">2</span>) {</div><div class="line">          _Y = _cur;</div><div class="line">        }</div><div class="line">        <span class="keyword">if</span> (_i &lt; _dataGot.length - <span class="number">2</span>) {</div><div class="line">          _ctx.quadraticCurveTo(_curPoint + _interval, _cur,</div><div class="line">            _curPoint + _interval * <span class="number">1.5</span>, _curSupport);</div><div class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (_i &gt;= _dataGot.length - <span class="number">2</span>) {</div><div class="line">          _ctx.quadraticCurveTo(_curPoint, getY(_i),</div><div class="line">            _curPoint + _interval, _cur);</div><div class="line">        }</div><div class="line">        _curPoint += _interval;</div><div class="line">        _ctx.stroke();</div><div class="line">        _curPointT += _intervalT;</div><div class="line">        _ctx.fillText(data[_i + <span class="number">1</span>][<span class="number">1</span>] + <span class="string">&quot;&#xB0;&quot;</span>, _curPointT,</div><div class="line">          _Y - setting.textOffSet);</div><div class="line">        _ctx.fillText(data[_i + <span class="number">1</span>][<span class="number">0</span>] + <span class="string">&quot;&#xB0;&quot;</span>, _curPointT,</div><div class="line">          _Y + setting.textOffSet);</div><div class="line">      }</div><div class="line">    }</div><div class="line">  }</div><div class="line">  draw_MAIN(canvas,data);</div><div class="line">}</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oanr6klwj.bkt.clouddn.com/blog/temperature-curve-cover.png&quot; alt=&quot;cover&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://www.pixiv.net/member_illust.php?mode=medium&amp;amp;illust_id=50140585&quot;&gt;&lt;em&gt;pixiv-ID: 50140585&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;上周接到的需求是实现QQ浏览器中的一个温度曲线。具体来说就是传入一组数据，数据包括6天的当日最高温度和最低温度，由此拟合出一条曲线。&lt;/p&gt;
&lt;p&gt;曲线使用canvas进行绘制，因此有原生的贝塞尔曲线api可以使用。我们应该最大化的利用这个先天优势，避免过多的数学计算。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Front-End" scheme="http://lovin0730.github.io/tags/front-end/"/>
    
      <category term="JavaScript" scheme="http://lovin0730.github.io/tags/javascript/"/>
    
  </entry>
  
</feed>
