{"pages":[],"posts":[{"title":"230行实现一个简单的MVVM","permalink":"http://lovin0730.github.io/2016/12/19/simple-mvvm/","text":"pixiv-ID: 14402942 MVVM&#x8FD9;&#x4E24;&#x5E74;&#x5728;&#x524D;&#x7AEF;&#x5C4A;&#x6380;&#x8D77;&#x4E86;&#x4E00;&#x80A1;&#x70ED;&#x6F6E;&#xFF0C;&#x706B;&#x70ED;&#x7684;Vue&#x548C;Angular&#x5E26;&#x7ED9;&#x4E86;&#x5F00;&#x53D1;&#x8005;&#x65E0;&#x6570;&#x7684;&#x4FBF;&#x5229;&#xFF0C;&#x672C;&#x6587;&#x5C06;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;MVVM&#xFF0C;&#x7528;200&#x591A;&#x884C;&#x4EE3;&#x7801;&#x63A2;&#x7D22;MVVM&#x7684;&#x79D8;&#x5BC6;&#x3002;&#x60A8;&#x53EF;&#x4EE5;&#x5148;&#x70B9;&#x51FB;&#x672C;&#x6587;&#x7684;JS Bin&#x67E5;&#x770B;&#x6548;&#x679C; &#x4EC0;&#x4E48;&#x662F;MVVM&#xFF1F; Model View ViewModel MVVM&#x7684;&#x539F;&#x7406; &#x5DEE;&#x5F02; &#x6570;&#x636E;&#x52AB;&#x6301; &#x810F;&#x68C0;&#x67E5;&#x673A;&#x5236; &#x53D1;&#x5E03;&#x8BA2;&#x9605;&#x6A21;&#x5F0F; &#x76F8;&#x540C;&#x70B9; &#x89E3;&#x6790;&#x6A21;&#x7248; &#x89E3;&#x6790;&#x6570;&#x636E; &#x7ED1;&#x5B9A;&#x6A21;&#x7248;&#x4E0E;&#x6570;&#x636E; &#x52A8;&#x624B;&#x5B9E;&#x73B0;MVVM &#x671F;&#x671B;&#x6548;&#x679C; &#x89E3;&#x6790;&#x6A21;&#x7248; &#x904D;&#x5386; &#x904D;&#x5386;&#x4E0D;&#x540C;&#x7ED3;&#x6784; &#x4E0D;&#x540C;&#x7ED3;&#x6784;&#x7684;&#x5904;&#x7406;&#x65B9;&#x6CD5; &#x89E3;&#x6790;&#x6570;&#x636E; &#x666E;&#x901A;&#x5BF9;&#x8C61;&#x7684;&#x52AB;&#x6301; &#x5D4C;&#x5957;&#x5BF9;&#x8C61;&#x7684;&#x52AB;&#x6301; &#x5BF9;&#x8C61;&#x4E2D;&#x6570;&#x7EC4;&#x7684;&#x52AB;&#x6301; &#x5904;&#x7406;&#x8DEF;&#x5F84;&#x53C2;&#x6570; &#x7ED1;&#x5B9A;&#x6A21;&#x7248;&#x4E0E;&#x6570;&#x636E; &#x4EC0;&#x4E48;&#x662F;MVVM&#xFF1F;MVVM&#x662F;&#x4E00;&#x79CD;&#x7A0B;&#x5E8F;&#x67B6;&#x6784;&#x8BBE;&#x8BA1;&#x3002;&#x628A;&#x5B83;&#x62C6;&#x5F00;&#x6765;&#x770B;&#x5E94;&#x8BE5;&#x662F;Model-View-ViewModel&#x3002; ModelModel&#x6307;&#x7684;&#x662F;&#x6570;&#x636E;&#x5C42;&#xFF0C;&#x662F;&#x7EAF;&#x51C0;&#x7684;&#x6570;&#x636E;&#x3002;&#x5BF9;&#x4E8E;&#x524D;&#x7AEF;&#x6765;&#x8BF4;&#xFF0C;&#x5B83;&#x5F80;&#x5F80;&#x662F;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x5BF9;&#x8C61;&#x3002;&#x4F8B;&#x5982;&#xFF1A;123456789{ name: &apos;mirone&apos;, age: 20, friends: [&apos;singleDogA&apos;, &apos;singleDogB&apos;], details: { type: &apos;notSingleDog&apos;, tags: [&apos;fff&apos;, &apos;sox&apos;] }} &#x6570;&#x636E;&#x5C42;&#x662F;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x6E32;&#x67D3;&#x540E;&#x5448;&#x73B0;&#x7ED9;&#x7528;&#x6237;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x6570;&#x636E;&#x5C42;&#x672C;&#x8EAB;&#x662F;&#x53EF;&#x53D8;&#x7684;&#x3002;&#x6570;&#x636E;&#x5C42;&#x4E0D;&#x5E94;&#x8BE5;&#x627F;&#x62C5;&#x903B;&#x8F91;&#x64CD;&#x4F5C;&#x548C;&#x8BA1;&#x7B97;&#x7684;&#x529F;&#x80FD;&#x3002; ViewView&#x6307;&#x89C6;&#x56FE;&#x5C42;&#xFF0C;&#x662F;&#x76F4;&#x63A5;&#x5448;&#x73B0;&#x7ED9;&#x7528;&#x6237;&#x7684;&#x90E8;&#x5206;&#xFF0C;&#x7B80;&#x5355;&#x7684;&#x6765;&#x8BF4;&#xFF0C;&#x5BF9;&#x4E8E;&#x524D;&#x7AEF;&#x5C31;&#x662F;HTML&#x3002;&#x4F8B;&#x5982;&#x4E0A;&#x9762;&#x7684;&#x6570;&#x636E;&#x5C42;&#xFF0C;&#x5B83;&#x5BF9;&#x5E94;&#x7684;&#x89C6;&#x56FE;&#x5C42;&#x53EF;&#x80FD;&#x662F;&#xFF1A;123456789101112131415161718192021&lt;div&gt; &lt;p&gt; &lt;b&gt;name: &lt;/b&gt; &lt;span&gt;mirone&lt;/span&gt; &lt;/p&gt; &lt;p&gt; &lt;b&gt;age: &lt;/b&gt; &lt;span&gt;20&lt;/span&gt; &lt;/p&gt; &lt;ul&gt; &lt;li&gt;singleDogA&lt;/li&gt; &lt;li&gt;singleDogB&lt;/li&gt; &lt;/ul&gt; &lt;div&gt; &lt;p&gt;notSingleDog&lt;/p&gt; &lt;ul&gt; &lt;li&gt;fff&lt;/li&gt; &lt;li&gt;sox&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt;&lt;/div&gt; &#x5F53;&#x7136;&#x89C6;&#x56FE;&#x5C42;&#x662F;&#x53EF;&#x53D8;&#x7684;&#xFF0C;&#x4F60;&#x5B8C;&#x5168;&#x53EF;&#x4EE5;&#x5728;&#x5176;&#x4E2D;&#x968F;&#x610F;&#x6DFB;&#x52A0;&#x5143;&#x7D20;&#x3002;&#x8FD9;&#x4E0D;&#x4F1A;&#x6539;&#x53D8;&#x6570;&#x636E;&#x5C42;&#xFF0C;&#x53EA;&#x4F1A;&#x6539;&#x53D8;&#x89C6;&#x56FE;&#x5C42;&#x5448;&#x73B0;&#x6570;&#x636E;&#x7684;&#x65B9;&#x5F0F;&#x3002;&#x89C6;&#x56FE;&#x5C42;&#x5E94;&#x8BE5;&#x548C;&#x6570;&#x636E;&#x5C42;&#x5B8C;&#x5168;&#x5206;&#x79BB;&#x3002; ViewModel&#x65E2;&#x7136;&#x89C6;&#x56FE;&#x5C42;&#x5E94;&#x8BE5;&#x548C;&#x6570;&#x636E;&#x5C42;&#x5206;&#x79BB;&#xFF0C;&#x90A3;&#x4E48;&#x6211;&#x4EEC;&#x5C31;&#x9700;&#x8981;&#x8BBE;&#x8BA1;&#x4E00;&#x79CD;&#x7ED3;&#x6784;&#xFF0C;&#x8BA9;&#x5B83;&#x4EEC;&#x5EFA;&#x7ACB;&#x8D77;&#x67D0;&#x79CD;&#x8054;&#x7CFB;&#x3002;&#x5F53;&#x6211;&#x4EEC;&#x5BF9;Model&#x8FDB;&#x884C;&#x4FEE;&#x6539;&#x7684;&#x65F6;&#x5019;&#xFF0C;ViewModel&#x5C31;&#x4F1A;&#x628A;&#x4FEE;&#x6539;&#x81EA;&#x52A8;&#x540C;&#x6B65;&#x5230;View&#x5C42;&#x53BB;&#x3002;&#x540C;&#x6837;&#x5F53;&#x6211;&#x4EEC;&#x4FEE;&#x6539;View&#xFF0C;Model&#x540C;&#x6837;&#x88AB;ViewModel&#x81EA;&#x52A8;&#x4FEE;&#x6539;&#x3002; &#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x5982;&#x4F55;&#x8BBE;&#x8BA1;&#x80FD;&#x591F;&#x9AD8;&#x6548;&#x81EA;&#x52A8;&#x540C;&#x6B65;View&#x4E0E;Model&#x7684;ViewModel&#x662F;&#x6574;&#x4E2A;MVVM&#x6846;&#x67B6;&#x7684;&#x6838;&#x5FC3;&#x548C;&#x96BE;&#x70B9;&#x3002; MVVM&#x7684;&#x539F;&#x7406;&#x5DEE;&#x5F02;&#x4E0D;&#x540C;&#x7684;&#x6846;&#x67B6;&#x5BF9;&#x4E8E;MVVM&#x7684;&#x5B9E;&#x73B0;&#x662F;&#x4E0D;&#x540C;&#x7684;&#x3002; &#x6570;&#x636E;&#x52AB;&#x6301;Vue&#x7684;&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;&#xFF0C;&#x5BF9;&#x6570;&#x636E;&#xFF08;Model&#xFF09;&#x8FDB;&#x884C;&#x52AB;&#x6301;&#xFF0C;&#x5F53;&#x6570;&#x636E;&#x53D1;&#x751F;&#x53D8;&#x52A8;&#x65F6;&#xFF0C;&#x6570;&#x636E;&#x4F1A;&#x89E6;&#x53D1;&#x52AB;&#x6301;&#x65F6;&#x7ED1;&#x5B9A;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x5BF9;&#x89C6;&#x56FE;&#x8FDB;&#x884C;&#x66F4;&#x65B0;&#x3002; &#x810F;&#x68C0;&#x67E5;&#x673A;&#x5236;Angular&#x7684;&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;&#xFF0C;&#x5F53;&#x53D1;&#x751F;&#x4E86;&#x67D0;&#x79CD;&#x4E8B;&#x4EF6;&#xFF08;&#x4F8B;&#x5982;&#x8F93;&#x5165;&#xFF09;&#xFF0C;Angular&#x4F1A;&#x68C0;&#x67E5;&#x65B0;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x548C;&#x4E4B;&#x524D;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x662F;&#x5426;&#x53D1;&#x751F;&#x4E86;&#x53D8;&#x52A8;&#xFF0C;&#x6765;&#x51B3;&#x5B9A;&#x662F;&#x5426;&#x66F4;&#x65B0;&#x89C6;&#x56FE;&#x3002; &#x53D1;&#x5E03;&#x8BA2;&#x9605;&#x6A21;&#x5F0F;Knockout&#x7684;&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;&#xFF0C;&#x5B9E;&#x73B0;&#x4E86;&#x4E00;&#x4E2A;&#x53D1;&#x5E03;&#x8BA2;&#x9605;&#x5668;&#xFF0C;&#x89E3;&#x6790;&#x65F6;&#x4F1A;&#x5728;&#x5BF9;&#x5E94;&#x89C6;&#x56FE;&#x8282;&#x70B9;&#x7ED1;&#x5B9A;&#x8BA2;&#x9605;&#x5668;&#xFF0C;&#x800C;&#x5728;&#x6570;&#x636E;&#x4E0A;&#x7ED1;&#x5B9A;&#x53D1;&#x5E03;&#x5668;&#xFF0C;&#x5F53;&#x4FEE;&#x6539;&#x6570;&#x636E;&#x65F6;&#xFF0C;&#x5C31;&#x51FA;&#x53D1;&#x4E86;&#x53D1;&#x5E03;&#x5668;&#xFF0C;&#x89C6;&#x56FE;&#x6536;&#x5230;&#x540E;&#x8FDB;&#x884C;&#x5BF9;&#x5E94;&#x66F4;&#x65B0;&#x3002; &#x76F8;&#x540C;&#x70B9;&#x4F46;&#x662F;&#x8FD8;&#x662F;&#x6709;&#x5F88;&#x591A;&#x76F8;&#x540C;&#x70B9;&#x7684;&#xFF0C;&#x5B83;&#x4EEC;&#x90FD;&#x6709;&#x4E09;&#x4E2A;&#x6B65;&#x9AA4;&#xFF1A; &#x89E3;&#x6790;&#x6A21;&#x7248; &#x89E3;&#x6790;&#x6570;&#x636E; &#x7ED1;&#x5B9A;&#x6A21;&#x7248;&#x4E0E;&#x6570;&#x636E; &#x89E3;&#x6790;&#x6A21;&#x7248;&#x4F55;&#x8C13;&#x6A21;&#x7248;&#xFF1F;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x4E00;&#x4E0B;&#x4E3B;&#x6D41;MVVM&#x7684;API&#xFF1A;12345678910111213141516171819202122232425&lt;!-- Vue --&gt;&lt;div id=&quot;mobile-list&quot;&gt; &lt;h1 v-text=&quot;title&quot;&gt;&lt;/h1&gt; &lt;ul&gt; &lt;li v-for=&quot;item in brands&quot;&gt; &lt;b v-text=&quot;item.name&quot;&gt;&lt;/b&gt; &lt;span v-show=&quot;showRank&quot;&gt;Rank: {{item.rank}}&lt;/span&gt; &lt;/li&gt; &lt;/ul&gt;&lt;/div&gt;&lt;!-- Angular --&gt;&lt;ul&gt; &lt;li ng-repeat=&quot;phone in phones&quot;&gt; {{phone.name}} &lt;p&gt;{{phone.snippet}}&lt;/p&gt; &lt;/li&gt;&lt;/ul&gt;&lt;!-- Knockout --&gt;&lt;tbody data-bind=&quot;foreach: seats&quot;&gt; &lt;tr&gt; &lt;td data-bind=&quot;text: name&quot;&gt;&lt;/td&gt; &lt;td data-bind=&quot;text: meal().mealName&quot;&gt;&lt;/td&gt; &lt;td data-bind=&quot;text: meal().price&quot;&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &#x53EF;&#x4EE5;&#x770B;&#x5230;&#x5B83;&#x4EEC;&#x90FD;&#x5B9A;&#x4E49;&#x4E86;&#x81EA;&#x5DF1;&#x7684;&#x6A21;&#x7248;&#x5173;&#x952E;&#x5B57;&#xFF0C;&#x8FD9;&#x4E00;&#x6A21;&#x5757;&#x7684;&#x4F5C;&#x7528;&#x5C31;&#x662F;&#x6839;&#x636E;&#x8FD9;&#x4E9B;&#x5173;&#x952E;&#x5B57;&#x89E3;&#x6790;&#x6A21;&#x7248;&#xFF0C;&#x5C06;&#x6A21;&#x7248;&#x5BF9;&#x5E94;&#x5230;&#x671F;&#x671B;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x3002; &#x89E3;&#x6790;&#x6570;&#x636E;Model&#x4E2D;&#x7684;&#x6570;&#x636E;&#x7ECF;&#x8FC7;&#x52AB;&#x6301;&#x6216;&#x7ED1;&#x5B9A;&#x53D1;&#x5E03;&#x5668;&#x6765;&#x89E3;&#x6790;&#x3002;&#x6570;&#x636E;&#x89E3;&#x6790;&#x5668;&#x7684;&#x7F16;&#x5199;&#x8981;&#x8003;&#x8651;VM&#x7684;&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;&#xFF0C;&#x4F46;&#x662F;&#x65E0;&#x8BBA;&#x5982;&#x4F55;&#x89E3;&#x6790;&#x6570;&#x636E;&#x53EA;&#x8981;&#x505A;&#x597D;&#x4E00;&#x4EF6;&#x4E8B;&#xFF1A;&#x5B9A;&#x4E49;&#x6570;&#x636E;&#x53D8;&#x52A8;&#x65F6;&#x8981;&#x901A;&#x77E5;&#x7684;&#x5BF9;&#x8C61;&#x3002;&#x89E3;&#x6790;&#x6570;&#x636E;&#x65F6;&#x5E94;&#x4FDD;&#x8BC1;&#x6570;&#x636E;&#x89E3;&#x6790;&#x540E;&#x7684;&#x4E00;&#x81F4;&#x6027;&#xFF0C;&#x5BF9;&#x4E8E;&#x6BCF;&#x79CD;&#x6570;&#x636E;&#x89E3;&#x6790;&#x540E;&#x66B4;&#x9732;&#x7684;&#x63A5;&#x53E3;&#x5E94;&#x8BE5;&#x4FDD;&#x6301;&#x4E00;&#x81F4;&#x3002; &#x7ED1;&#x5B9A;&#x6A21;&#x7248;&#x4E0E;&#x6570;&#x636E;&#x8FD9;&#x4E00;&#x90E8;&#x5206;&#x5B9A;&#x4E49;&#x4E86;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x4EE5;&#x4F55;&#x79CD;&#x65B9;&#x5F0F;&#x548C;&#x6A21;&#x7248;&#x8FDB;&#x884C;&#x7ED1;&#x5B9A;&#xFF0C;&#x5C31;&#x662F;&#x4F20;&#x8BF4;&#x4E2D;&#x7684;&#x201C;&#x53CC;&#x5411;&#x7ED1;&#x5B9A;&#x201D;&#x3002;&#x7ED1;&#x5B9A;&#x4E4B;&#x540E;&#x6211;&#x4EEC;&#x76F4;&#x63A5;&#x5BF9;&#x6570;&#x636E;&#x8FDB;&#x884C;&#x64CD;&#x4F5C;&#x65F6;&#xFF0C;&#x5E94;&#x7528;&#x5C31;&#x80FD;&#x81EA;&#x52A8;&#x66F4;&#x65B0;&#x89C6;&#x56FE;&#x4E86;&#x3002;&#x6570;&#x636E;&#x548C;&#x6A21;&#x7248;&#x5F80;&#x5F80;&#x662F;&#x591A;&#x5BF9;&#x591A;&#x7684;&#x5173;&#x7CFB;&#xFF0C;&#x800C;&#x4E14;&#x4E0D;&#x540C;&#x7684;&#x6A21;&#x7248;&#x66F4;&#x65B0;&#x6570;&#x636E;&#x7684;&#x65B9;&#x5F0F;&#x5F80;&#x5F80;&#x4E0D;&#x540C;&#x3002;&#x4F8B;&#x5982;&#x6709;&#x7684;&#x662F;&#x6539;&#x53D8;&#x6807;&#x7B7E;&#x7684;&#x6587;&#x672C;&#x8282;&#x70B9;&#xFF0C;&#x6709;&#x7684;&#x662F;&#x6539;&#x53D8;&#x6807;&#x7B7E;&#x7684;className&#x3002; &#x52A8;&#x624B;&#x5B9E;&#x73B0;MVVM&#x7ECF;&#x8FC7;&#x4E00;&#x756A;&#x5206;&#x6790;&#xFF0C;&#x6765;&#x52A8;&#x624B;&#x5B9E;&#x73B0;MVVM&#x5427;&#x3002; &#x671F;&#x671B;&#x6548;&#x679C;&#x5BF9;&#x4E8E;&#x6211;&#x7684;MVVM&#xFF0C;&#x6211;&#x5E0C;&#x671B;&#x5BF9;&#x5E94;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF1A;1234567891011121314151617let data = { title: &apos;todo list&apos;, user: &apos;mirone&apos;, todos: [ { creator: &apos;mirone&apos;, content: &apos;write mvvm&apos; done: &apos;undone&apos;, date: &apos;2016-11-17&apos;, members: [ { name: &apos;kaito&apos; } ] } ]} &#x6211;&#x53EF;&#x4EE5;&#x5BF9;&#x5E94;&#x7684;&#x7F16;&#x5199;&#x6A21;&#x7248;&#xFF1A;123456789101112131415161718&lt;div id=&quot;root&quot;&gt; &lt;h1 data-model=&quot;title&quot;&gt;&lt;/h1&gt; &lt;div&gt; &lt;div data-model=&quot;user&quot;&gt;&lt;/div&gt; &lt;ul data-list=&quot;todos&quot;&gt; &lt;li data-list-item=&quot;todos&quot;&gt; &lt;p data-class=&quot;todos:done&quot; data-model=&quot;todos:creator&quot;&gt;&lt;/p&gt; &lt;p data-model=&quot;todos:date&quot;&gt;&lt;/p&gt; &lt;p data-model=&quot;todos:content&quot;&gt;&lt;/p&gt; &lt;ul data-list=&quot;todos:members&quot;&gt; &lt;li data-list-item=&quot;todos:members&quot;&gt; &lt;span data-model=&quot;todos:members:name&quot;&gt;&lt;/span&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt;&lt;/div&gt; &#x7136;&#x540E;&#x901A;&#x8FC7;&#x8C03;&#x7528;&#xFF1A;1new Parser(&apos;#root&apos;, data) &#x5C31;&#x53EF;&#x4EE5;&#x5B8C;&#x6210;mvvm&#x7684;&#x7ED1;&#x5B9A;&#xFF0C;&#x4E4B;&#x540E;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x64CD;&#x4F5C;data&#x5BF9;&#x8C61;&#x6765;&#x5BF9;View&#x8FDB;&#x884C;&#x66F4;&#x6539;&#x3002; &#x89E3;&#x6790;&#x6A21;&#x7248;&#x6A21;&#x7248;&#x7684;&#x89E3;&#x6790;&#x5176;&#x5B9E;&#x662F;&#x4E00;&#x4E2A;&#x6811;&#x7684;&#x904D;&#x5386;&#x8FC7;&#x7A0B;&#x3002; &#x904D;&#x5386;&#x4F17;&#x6240;&#x5468;&#x77E5;&#xFF0C;DOM&#x662F;&#x4E00;&#x4E2A;&#x6811;&#x72B6;&#x7ED3;&#x6784;&#xFF0C;&#x8FD9;&#x4E5F;&#x662F;&#x4E3A;&#x4EC0;&#x4E48;&#x5B83;&#x88AB;&#x79F0;&#x4E3A;&#x201C;DOM&#x6811;&#x201D;&#x3002;&#x5BF9;&#x4E8E;&#x6811;&#x7684;&#x904D;&#x5386;&#xFF0C;&#x53EA;&#x8981;&#x9012;&#x5F52;&#xFF0C;&#x4FBF;&#x80FD;&#x5F88;&#x8F7B;&#x677E;&#x7684;&#x5B8C;&#x6210;&#x4E00;&#x4E2A;&#x6DF1;&#x5EA6;&#x4F18;&#x5148;&#x904D;&#x5386;&#xFF0C;&#x8BF7;&#x770B;&#x4EE3;&#x7801;&#xFF1A;12345678910function scan(node) { console.log(node) for(let i = 0; i &lt; node.children.length; i++) { const _thisNode = node.children[i] console.log(_thisNode) if(_thisNode.children.length) { scan(_thisNode) } }} &#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x904D;&#x5386;&#x4E86;&#x4E00;&#x4E2A;DOM&#x8282;&#x70B9;&#xFF0C;&#x4F9D;&#x6B21;&#x6253;&#x5370;&#x904D;&#x5386;&#x5F97;&#x5230;&#x7684;&#x8282;&#x70B9;&#x3002; &#x904D;&#x5386;&#x4E0D;&#x540C;&#x7ED3;&#x6784;&#x77E5;&#x9053;&#x4E86;&#x5982;&#x4F55;&#x904D;&#x5386;&#x4E00;&#x4E2A;DOM&#x6811;&#xFF0C;&#x90A3;&#x4E48;&#x6211;&#x4EEC;&#x5982;&#x4F55;&#x83B7;&#x53D6;&#x9700;&#x8981;&#x5206;&#x6790;&#x7684;DOM&#x6811;&#xFF1F;&#x6839;&#x636E;&#x4E4B;&#x524D;&#x7684;&#x6784;&#x60F3;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x8FD9;&#x4E48;&#x51E0;&#x79CD;&#x6807;&#x8BC6;&#xFF1A; data-model&#x2014;&#x2014;&#x7528;&#x4E8E;&#x5C06;DOM&#x7684;&#x6587;&#x672C;&#x8282;&#x70B9;&#x66FF;&#x6362;&#x4E3A;&#x5236;&#x5B9A;&#x5185;&#x5BB9; data-class&#x2014;&#x2014;&#x7528;&#x4E8E;&#x5C06; DOM&#x7684;className&#x66FF;&#x6362;&#x4E3A;&#x5236;&#x5B9A;&#x5185;&#x5BB9; data-list&#x2014;&#x2014;&#x7528;&#x4E8E;&#x6807;&#x8BC6;&#x63A5;&#x4E0B;&#x6765;&#x5C06;&#x51FA;&#x73B0;&#x4E00;&#x4E2A;&#x5217;&#x8868;&#xFF0C;&#x5217;&#x8868;&#x4E3A;&#x5236;&#x5B9A;&#x7ED3;&#x6784; data-list-item&#x2014;&#x2014;&#x7528;&#x4E8E;&#x6807;&#x8BC6;&#x5217;&#x8868;&#x9879;&#x7684;&#x5185;&#x90E8;&#x7ED3;&#x6784; data-event&#x2014;&#x2014;&#x7528;&#x4E8E;&#x4E3A;DOM&#x8282;&#x70B9;&#x7ED1;&#x5B9A;&#x6307;&#x5B9A;&#x4E8B;&#x4EF6; &#x7B80;&#x5355;&#x7684;&#x5F52;&#x7C7B;&#x4E00;&#x4E0B;&#xFF1A;data-model&#x3001;data-class&#x548C;data-event&#x5E94;&#x8BE5;&#x662F;&#x4E00;&#x7C7B;&#xFF0C;&#x5B83;&#x4EEC;&#x90FD;&#x53EA;&#x5F71;&#x54CD;&#x5F53;&#x524D;&#x8282;&#x70B9;&#xFF1B;&#x800C;data-list&#x548C;data-item&#x4F5C;&#x4E3A;&#x5217;&#x8868;&#x5E94;&#x8BE5;&#x8981;&#x5355;&#x72EC;&#x8003;&#x8651;&#x3002;&#x90A3;&#x4E48;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8FD9;&#x6837;&#x904D;&#x5386;&#xFF1A;123456789101112131415161718192021222324252627function scan(node) { if(!node.getAttribute(&apos;data-list&apos;)) { for(let i = 0; i &lt; node.children.length; i++) { const _thisNode = node.children[i] parseModel(node) parseClass(node) parseEvent(node) if(_thisNode.children.length) { scan(_thisNode) } } } else { parseList(node) }}function parseModel(node) { //TODO:&#x89E3;&#x6790;Model&#x8282;&#x70B9;}function parseClass(node) { //TODO:&#x89E3;&#x6790;className}function parseEvent(node) { //TODO:&#x89E3;&#x6790;&#x4E8B;&#x4EF6;}function parseList(node) { //TODO: &#x89E3;&#x6790;&#x5217;&#x8868;} &#x8FD9;&#x6837;&#x6211;&#x4EEC;&#x5C31;&#x642D;&#x597D;&#x4E86;&#x904D;&#x5386;&#x5668;&#x7684;&#x5927;&#x6982;&#x6846;&#x67B6; &#x4E0D;&#x540C;&#x7ED3;&#x6784;&#x7684;&#x5904;&#x7406;&#x65B9;&#x6CD5;parseModel&#xFF0C;parseClass&#x548C;parseEvent&#x7684;&#x5904;&#x7406;&#x65B9;&#x5F0F;&#x6BD4;&#x8F83;&#x76F8;&#x4F3C;&#xFF0C;&#x552F;&#x4E00;&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x5C31;&#x662F;&#x5BF9;&#x4E8E;&#x5D4C;&#x5957;&#x5143;&#x7D20;&#x7684;&#x5904;&#x7406;&#xFF0C;&#x56DE;&#x5FC6;&#x4E00;&#x4E0B;&#x6211;&#x4EEC;&#x7684;&#x6A21;&#x7248;&#x8BBE;&#x8BA1;&#xFF1A;12&lt;!--&#x9047;&#x5230;&#x5D4C;&#x5957;&#x90E8;&#x5206;--&gt;&lt;div data-model=&quot;todos:date&quot;&gt;&lt;/div&gt; &#x8FD9;&#x91CC;&#x7684;todos:date&#x5176;&#x5B9E;&#x5927;&#x5927;&#x65B9;&#x4FBF;&#x4E86;&#x6211;&#x4EEC;&#x89E3;&#x6790;&#x6A21;&#x7248;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x5C55;&#x793A;&#x4E86;&#x5F53;&#x524D;&#x6570;&#x636E;&#x5728;Model&#x7ED3;&#x6784;&#x4E2D;&#x7684;&#x4F4D;&#x7F6E;&#x3002;123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657//event&#x8981;&#x6709;&#x4E00;&#x4E2A;eventList,&#x5927;&#x6982;&#x7ED3;&#x6784;&#x4E3A;&#xFF1A;const eventList = { typeWriter: { type: &apos;input&apos;, //&#x4E8B;&#x4EF6;&#x7684;&#x79CD;&#x7C7B; fn: function() { //&#x4E8B;&#x4EF6;&#x7684;&#x5904;&#x7406;&#x51FD;&#x6570;&#xFF0C;&#x51FD;&#x6570;&#x7684;this&#x4EE3;&#x8868;&#x51FD;&#x6570;&#x7ED1;&#x5B9A;&#x7684;DOM&#x8282;&#x70B9; } }}function parseEvent(node) { if(node.getAttribute(&apos;data-event&apos;)) { const eventName = node.getAttribute(&apos;data-event&apos;) node.addEventListener(eventList[eventName].type, eventList[eventName].fn.bind(node)) }}//&#x6839;&#x636E;&#x5728;&#x6A21;&#x7248;&#x4E2D;&#x7684;&#x4F4D;&#x7F6E;&#x89E3;&#x6790;&#x6A21;&#x7248;&#xFF0C;&#x8FD9;&#x91CC;&#x7684;Path&#x662F;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#xFF0C;&#x4EE3;&#x8868;&#x4E86;&#x5F53;&#x524D;&#x6570;&#x636E;&#x5728;Model&#x4E2D;&#x7684;&#x4F4D;&#x7F6E;function parseData(str, node) { const _list = str.split(&apos;:&apos;) let _data, _path let p = [] _list.forEach((key, index) =&gt; { if(index === 0) { _data = data[key] p.push(key) } else { _path = node.path[index-1] p.push(_path) _data = _data[_path][key] p.push(key) } }) return { path: p, data: _data }}function parseModel(node) { if(node.getAttribute(&apos;data-model&apos;)) { const modelName = node.getAttribute(&apos;data-model&apos;) const _data = parseData(modelName, node) if(node.tagName === &apos;INPUT&apos;) { node.value = _data.data } else { node.innerText = _data.data } }}function parseClass(node) { if(node.getAttribute(&apos;data-class&apos;)) { const className = node.getAttribute(&apos;data-class&apos;) const _data = parseData(className, node) if(!node.classList.contains(_data.data)) { node.classList.add(_data.data) } }} &#x63A5;&#x4E0B;&#x6765;&#x89E3;&#x6790;&#x5217;&#x8868;&#xFF0C;&#x6211;&#x4EEC;&#x9047;&#x5230;&#x5217;&#x8868;&#x65F6;&#xFF0C;&#x5E94;&#x8BE5;&#x5148;&#x9012;&#x5F52;&#x627E;&#x51FA;&#x5217;&#x8868;&#x9879;&#x7684;&#x7ED3;&#x6784;1234567891011121314151617181920parseListItem(node) { let target !function getItem(node) { for(let i = 0; i &lt; node.children.length; i++) { const _thisNode = node.children[i] if(node.path) { _thisNode.path = node.path.slice() } parseEvent(_thisNode) parseClass(_thisNode) parseModel(_thisNode) if(_thisNode.getAttribute(&apos;data-list-item&apos;)) { target = _thisNode } else { getItem(_thisNode) } } }(node) return target} &#x4E4B;&#x540E;&#x5728;&#x7528;&#x8FD9;&#x4E2A;&#x5217;&#x8868;&#x9879;&#x6765;&#x6309;&#x9700;&#x62F7;&#x8D1D;&#x51FA;&#x4E00;&#x5B9A;&#x6570;&#x91CF;&#x7684;&#x5217;&#x8868;&#x9879;&#xFF0C;&#x5E76;&#x586B;&#x5145;&#x6570;&#x636E;123456789101112131415161718function parseList(node) { const _item = parseListItem(node) const _list = node.getAttribute(&apos;data-list&apos;) const _listData = parseData(_list, node) _listData.data.forEach((_dataItem, index) =&gt; { const _copyItem = _item.cloneNode(true) if(node.path) { _copyItem.path = node.path.slice() } if(!_copyItem.path) { _copyItem.path = [] } _copyItem.path.push(index) scan(_copyItem) node.insertBefore(_copyItem, _item) }) node.removeChild(_item)} &#x8FD9;&#x6837;&#x6211;&#x4EEC;&#x5C31;&#x5B8C;&#x6210;&#x4E86;&#x6A21;&#x7248;&#x7684;&#x6E32;&#x67D3;&#xFF0C;scan&#x51FD;&#x6570;&#x4F1A;&#x626B;&#x63CF;&#x6A21;&#x7248;&#x5BF9;&#x6A21;&#x7248;&#x8FDB;&#x884C;&#x6E32;&#x67D3; &#x89E3;&#x6790;&#x6570;&#x636E;&#x89E3;&#x6790;&#x4E86;&#x6A21;&#x7248;&#x4E4B;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x8981;&#x7814;&#x7A76;&#x5982;&#x4F55;&#x8FDB;&#x884C;&#x6570;&#x636E;&#x89E3;&#x6790;&#x4E86;&#xFF0C;&#x8FD9;&#x91CC;&#x6211;&#x91C7;&#x7528;&#x52AB;&#x6301;&#x6570;&#x636E;&#x7684;&#x65B9;&#x6CD5;&#x6765;&#x8FDB;&#x884C;&#x3002; &#x666E;&#x901A;&#x5BF9;&#x8C61;&#x7684;&#x52AB;&#x6301;&#x5982;&#x4F55;&#x52AB;&#x6301;&#x6570;&#x636E;&#xFF1F;&#x4E00;&#x822C;&#x5BF9;&#x6570;&#x636E;&#x7684;&#x52AB;&#x6301;&#x90FD;&#x662F;&#x901A;&#x8FC7;Object.defineProperty&#x65B9;&#x6CD5;&#x8FDB;&#x884C;&#x7684;&#xFF0C;&#x5148;&#x770B;&#x4E00;&#x4E2A;&#x5C0F;&#x4F8B;&#x5B50;&#xFF1A;1234567891011121314151617181920212223var obj = { name: &apos;mi&apos;}function observe(obj, key) { let old = obj[key] Object.defineProperty(obj, key, { enumerable: true, configurable: true, get: function() { return old }, set: function(now) { if(now !== old) { console.log(`${old} ---&gt; ${now}`) old = now } } })}observe(obj, &apos;name&apos;)obj.name = &apos;mirone&apos;//&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#xFF1A;//&quot;mi ---&gt; mirone&quot; &#x8FD9;&#x6837;&#x6211;&#x4EEC;&#x5C31;&#x901A;&#x8FC7;object.defineProperty&#x8FDB;&#x884C;&#x4E86;&#x6570;&#x636E;&#x52AB;&#x6301;&#xFF0C;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x60F3;&#x81EA;&#x5B9A;&#x4E49;&#x52AB;&#x6301;&#x6570;&#x636E;&#x65F6;&#x53D1;&#x751F;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x53EA;&#x8981;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x56DE;&#x8C03;&#x51FD;&#x6570;&#x53C2;&#x6570;&#x5373;&#x53EF;&#xFF1A;12345678910111213141516function observer(obj, k, callback) { let old = obj[k] Object.defineProperty(obj, k, { enumerable: true, configurable: true, get: function() { return old }, set: function(now) { if(now !== old) { callback(old, now) } old = now } })} &#x5D4C;&#x5957;&#x5BF9;&#x8C61;&#x7684;&#x52AB;&#x6301;&#x5BF9;&#x4E8E;&#x5BF9;&#x8C61;&#x4E2D;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x6211;&#x4E48;&#x8FD8;&#x9700;&#x8981;&#x591A;&#x8FDB;&#x884C;&#x4E00;&#x4E2A;&#x6B65;&#x9AA4;&#xFF0C;&#x4F7F;&#x7528;&#x9012;&#x5F52;&#x6765;&#x52AB;&#x6301;&#x5BF9;&#x8C61;&#x4E2D;&#x7684;&#x5BF9;&#x8C61;&#xFF1A;1234567891011121314//&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;observeAllKey&#x51FD;&#x6570;&#xFF0C;&#x52AB;&#x6301;&#x8BE5;&#x5BF9;&#x8C61;&#x7684;&#x6240;&#x6709;&#x5C5E;&#x6027;function observeAllKey(obj, callback) { Object.keys(obj).forEach(function(key){ observer(obj, key, callback) })}function observer(obj, k, callback) { let old = obj[k] if (old.toString() === &apos;[object Object]&apos;) { observeAllKey(old, callback) } else { //...&#x540C;&#x524D;&#x6587;&#xFF0C;&#x7701;&#x7565; }} &#x5BF9;&#x8C61;&#x4E2D;&#x6570;&#x7EC4;&#x7684;&#x52AB;&#x6301;&#x5BF9;&#x4E8E;&#x5BF9;&#x8C61;&#x4E2D;&#x7684;&#x6570;&#x7EC4;&#xFF0C;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x91CD;&#x5199;&#x6570;&#x7EC4;&#x7684;prototype&#x7684;&#x65B9;&#x6CD5;&#x6765;&#x52AB;&#x6301;&#x5B83;1234567891011121314151617181920function observeArray(arr, callback) { const oam = [&apos;push&apos;, &apos;pop&apos;, &apos;shift&apos;, &apos;unshift&apos;, &apos;splice&apos;, &apos;sort&apos;, &apos;reverse&apos;] const arrayProto = Array.prototype const hackProto = Object.create(Array.prototype) oam.forEach(function(method){ Object.defineProperty(hackProto, method, { writable: true, enumerable: true, configurable: true, value: function(...arg) { let me = this let old = arr.slice() let now = arrayProto[method].call(me, ...arg) callback(old, me, ...arg) return now }, }) }) arr.__proto__ = hackProto} &#x5199;&#x5B8C;&#x52AB;&#x6301;&#x6570;&#x7EC4;&#x7684;&#x51FD;&#x6570;&#x540E;&#xFF0C;&#x5C06;&#x5B83;&#x6DFB;&#x52A0;&#x8FDB;&#x4E3B;&#x51FD;&#x6570;&#xFF1A;12345678910function observer(obj, k, callback) { let old = obj[k] if(Object.prototype.toString.call(old) === &apos;[object Array]&apos;) { observeArray(old, callback) } else if (old.toString() === &apos;[object Object]&apos;) { observeAllKey(old, callback) } else { //... }} &#x5904;&#x7406;&#x8DEF;&#x5F84;&#x53C2;&#x6570;&#x4E4B;&#x524D;&#x6211;&#x4EEC;&#x6240;&#x6709;&#x7684;&#x65B9;&#x6CD5;&#x90FD;&#x662F;&#x9762;&#x5BF9;&#x5355;&#x4E2A;key&#x503C;&#x7684;&#xFF0C;&#x56DE;&#x60F3;&#x4E00;&#x4E0B;&#x6211;&#x4EEC;&#x7684;&#x6A21;&#x7248;&#xFF0C;&#x6709;&#x5F88;&#x591A;&#x4F8B;&#x5982;todos:todo:member&#x8FD9;&#x6837;&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x6211;&#x4EEC;&#x5E94;&#x8BE5;&#x5141;&#x8BB8;&#x4F20;&#x5165;&#x4E00;&#x4E2A;&#x8DEF;&#x5F84;&#x6570;&#x7EC4;&#xFF0C;&#x6839;&#x636E;&#x8DEF;&#x5F84;&#x6570;&#x7EC4;&#x6765;&#x76D1;&#x542C;&#x6307;&#x5B9A;&#x7684;&#x5BF9;&#x8C61;&#x6570;&#x636E;123456789101112131415function observePath(obj, path, callback) { let _path = obj let _key path.forEach((p, index) =&gt; { if(parseInt(p) === p) { p = parseInt(p) } if(index &lt; path.length - 1) { _path = _path[p] } else { _key = p } }) observer(_path, _key, callback)} &#x4E4B;&#x540E;&#x518D;&#x5C06;&#x5B83;&#x6DFB;&#x52A0;&#x8FDB;&#x4E3B;&#x51FD;&#x6570;&#xFF1A;1234567891011121314function observer(obj, k, callback) { if(Object.prototype.toString.call(k) === &apos;[object Array]&apos;) { observePath(obj, k, callback) } else { let old = obj[k] if(Object.prototype.toString.call(old) === &apos;[object Array]&apos;) { observeArray(old, callback) } else if (old.toString() === &apos;[object Object]&apos;) { observeAllKey(old, callback) } else { //... } }} &#x8FD9;&#x6837;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x5B8C;&#x6210;&#x4E86;&#x76D1;&#x542C;&#x51FD;&#x6570;&#x3002; &#x7ED1;&#x5B9A;&#x6A21;&#x7248;&#x4E0E;&#x6570;&#x636E;&#x73B0;&#x5728;&#xFF0C;&#x6211;&#x4EEC;&#x8981;&#x5728;&#x89E3;&#x6790;&#x8FC7;&#x7A0B;&#x4E2D;&#x6DFB;&#x52A0;&#x5BF9;&#x6570;&#x636E;&#x7684;&#x76D1;&#x89C6;&#x4E86;&#xFF0C;&#x8FD8;&#x8BB0;&#x5F97;&#x4E4B;&#x524D;&#x7684;parse&#x7CFB;&#x5217;&#x51FD;&#x6570;&#x5417;&#xFF1F;123456789101112131415161718192021222324252627282930313233343536373839404142434445464748function parseModel(node) { if(node.getAttribute(&apos;data-model&apos;)) { //...&#x4E4B;&#x524D;&#x903B;&#x8F91;&#x4E0D;&#x53D8; observer(data, _data.path, function(old, now) { if(node.tagName === &apos;INPUT&apos;) { node.value = now } else { node.innerText = now } //&#x6DFB;&#x52A0;console&#x4FBF;&#x4E8E;&#x8C03;&#x8BD5; console.log(`${old} ---&gt; ${now}`) }) }}function parseClass(node) { if(node.getAttribute(&apos;data-class&apos;)) { //... observer(data, _data.path, function(old, now) { node.classList.remove(old) node.classList.add(now) console.log(`${old} ---&gt; ${now}`) }) }}//&#x5F53;&#x5217;&#x8868;&#x53D1;&#x751F;&#x53D8;&#x5316;&#x65F6;&#xFF0C;&#x4E3A;&#x4E86;&#x7B80;&#x5355;&#x76F4;&#x63A5;&#x91CD;&#x65B0;&#x6E32;&#x67D3;&#x4E86;&#x5F53;&#x524D;&#x5217;&#x8868;function parseList(node) { //... observer(data, _listData.path, () =&gt; { while(node.firstChild) { node.removeChild(node.firstChild) } const _listData = parseData(_list, node) _listData.data.forEach((_dataItem, index) =&gt; { node.appendChild(_item) const _copyItem = _item.cloneNode(true) if(node.path) { _copyItem.path = node.path.slice() } if(!_copyItem.path) { _copyItem.path = [] } _copyItem.path.push(index) scan(_copyItem) node.insertBefore(_copyItem, _item) }) node.removeChild(_item) })} &#x81F3;&#x6B64;&#x6211;&#x4EEC;&#x5C31;&#x57FA;&#x672C;&#x5B8C;&#x6210;&#x4E86;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;MVVM&#xFF0C;&#x4E4B;&#x540E;&#x6211;&#x8FDB;&#x884C;&#x4E86;&#x4E00;&#x70B9;&#x7EC6;&#x5FAE;&#x7684;&#x7EC6;&#x8282;&#x4F18;&#x5316;&#xFF0C;&#x6E90;&#x7801;&#x653E;&#x5728;&#x6211;&#x7684;Gist&#x4E0A;&#x3002;&#x5404;&#x4F4D;&#x4E5F;&#x53EF;&#x4EE5;&#x53BB;&#x672C;&#x6559;&#x7A0B;&#x7684;JSBin&#x67E5;&#x770B;&#x6548;&#x679C;&#x3002;"},{"title":"MongoDB权限管理","permalink":"http://lovin0730.github.io/2016/10/25/mongo-admin/","text":"pixiv-ID: 58984559 MongoDB&#x6570;&#x636E;&#x5E93;&#x9ED8;&#x8BA4;&#x662F;&#x4E0D;&#x9700;&#x8981;&#x7528;&#x6237;&#x540D;&#x548C;&#x767B;&#x9646;&#x5BC6;&#x7801;&#x7684;&#xFF0C;&#x5728;&#x5B9E;&#x9645;&#x73AF;&#x5883;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x8BBE;&#x7F6E;&#x4E0D;&#x540C;&#x7684;&#x6743;&#x9650;&#x65B9;&#x4FBF;&#x5F00;&#x53D1;&#x8005;&#x64CD;&#x4F5C;&#x6570;&#x636E;&#x5E93;&#x4F46;&#x8981;&#x907F;&#x514D;&#x5F00;&#x653E;&#x6240;&#x6709;&#x6743;&#x9650;&#x5F15;&#x8D77;&#x7684;&#x5371;&#x9669;&#xFF0C;&#x56E0;&#x6B64;&#x5982;&#x679C;&#x4F7F;&#x7528;mongodb&#xFF0C;&#x4E86;&#x89E3;&#x5B83;&#x7684;&#x6743;&#x9650;&#x8BE5;&#x5982;&#x4F55;&#x5206;&#x914D;&#x662F;&#x5341;&#x5206;&#x91CD;&#x8981;&#x7684;&#x3002;&#x672C;&#x6587;&#x4EE5;Mac&#x4E0A;&#x4F7F;&#x7528;homebrew&#x5B89;&#x88C5;&#x7684;MongoDB^3.2.10&#x7248;&#x672C;&#x4E3A;&#x51C6;&#xFF0C;mongodb&#x7248;&#x672C;&#x66F4;&#x65B0;&#x53EF;&#x80FD;&#x4F1A;&#x5BFC;&#x81F4;&#x547D;&#x4EE4;&#x7684;&#x53D8;&#x5316;&#x548C;&#x4E0D;&#x53EF;&#x7528;&#x3002; &#x5148;&#x5F00;&#x542F;&#x6570;&#x636E;&#x5E93;&#x547D;&#x4EE4;&#x884C;&#xFF0C;&#x5E76;&#x521B;&#x5EFA;admin&#x6570;&#x636E;&#x5E93;12$ mongouse admin &#x521B;&#x5EFA;&#x7528;&#x6237;&#x7684;&#x683C;&#x5F0F;&#x4E3A;&#xFF1A;12345678910111213db.createUser({ user: &apos;your username&apos;, pwd: &apos;your password&apos;, customData: { &quot;description&quot;: &quot;your description&quot; }, roles: [ { role: &quot;your role&quot;, db: &quot;the data base to set the user&quot; } ]}) &#x5176;&#x4E2D;cunstomData&#x5B57;&#x6BB5;&#x662F;&#x53EF;&#x9009;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x4E0D;&#x586B;&#x3002;roles&#x652F;&#x6301;&#x4E3A;&#x4E00;&#x4E2A;&#x7528;&#x6237;&#x5206;&#x914D;&#x591A;&#x4E2A;&#x89D2;&#x8272;&#xFF0C;&#x7528;&#x6570;&#x7EC4;&#x7684;&#x5F62;&#x5F0F;&#x6765;&#x8868;&#x793A;&#x3002;&#x5176;&#x4E2D;role&#x5B57;&#x6BB5;&#x7684;&#x503C;&#x7531;MongoDB&#x63D0;&#x4F9B;&#xFF0C;&#x76EE;&#x524D;&#x652F;&#x6301;&#x7684;&#x6709;&#xFF1A; &#x6570;&#x636E;&#x5E93;&#x7528;&#x6237;&#x89D2;&#x8272;&#xFF08;Database User Roles&#xFF09;read&#x3001;readWrite &#x6570;&#x636E;&#x5E93;&#x7BA1;&#x7406;&#x89D2;&#x8272;&#xFF08;Database Administration Roles&#xFF09;dbAdmin&#x3001;dbOwner&#x3001;userAdmin &#x7BA1;&#x7406;&#x5458;&#x7EC4;&#xFF08;Cluster Administration Roles&#xFF09;clusterAdmin&#x3001;clusterManager&#x3001;clusterMonitor&#x3001;hostManager &#x5907;&#x4EFD;&#x8FD8;&#x539F;&#x89D2;&#x8272;&#x7EC4;&#xFF08;Backup and Restoration Roles&#xFF09;backup&#x3001;restore &#x6240;&#x6709;&#x6570;&#x636E;&#x5E93;&#x89D2;&#x8272;&#xFF08;All-Database Roles&#xFF09;readAnyDatabase&#x3001;readWriteAnyDatabase&#x3001;userAdminAnyDatabase&#x3001;dbAdminAnyDatabase &#x8D85;&#x7EA7;&#x7BA1;&#x7406;&#x5458;&#xFF08;Superuser Roles&#xFF09;root &#x5185;&#x90E8;&#x89D2;&#x8272;&#xFF08;Internal Role&#xFF09;_system&#xFF08;&#x4E00;&#x822C;&#x4E0D;&#x5EFA;&#x8BAE;&#x8BBE;&#x7F6E;&#xFF09; &#x6BCF;&#x4E2A;&#x89D2;&#x8272;&#x7684;&#x5177;&#x4F53;&#x804C;&#x8D23;&#x8BF7;&#x67E5;&#x9605;&#x5B98;&#x7F51;&#x5EFA;&#x7ACB;&#x5B8C;&#x7528;&#x6237;&#x540E;&#xFF0C;&#x53EF;&#x4EE5;&#x53BB;&#x76F8;&#x5E94;&#x6570;&#x636E;&#x5E93;&#x4E0B;&#x8FDB;&#x884C;&#x9A8C;&#x8BC1;&#xFF0C;&#x4F8B;&#x5982;&#x4E0B;&#x9762;&#x6211;&#x5C06;&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;test&#x6570;&#x636E;&#x5E93;&#x7684;user&#x7528;&#x6237;&#xFF0C;&#x4ED6;&#x7684;&#x6743;&#x9650;&#x4E3A;dbOwner&#xFF0C;&#x7136;&#x540E;&#x8FDB;&#x884C;&#x9A8C;&#x8BC1;&#x3002; 123456789101112db.createUser({ user: &apos;test&apos;, pwd: &apos;testpwd&apos;, roles: [ { role: &apos;dbOwner&apos;, db: &apos;test&apos; } ]})use testdb.auth(&apos;test&apos;, &apos;testpwd&apos;) &#x7136;&#x540E;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x5728;MongoDB&#x7684;&#x9ED8;&#x8BA4;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#x5F00;&#x542F;&#x5B89;&#x5168;&#x8BA4;&#x8BC1;&#xFF0C;Homebrew&#x5B89;&#x88C5;&#x7684;MongoDB&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4F4D;&#x7F6E;&#x5728;/usr/local/etc/mongod.conf&#xFF0C;&#x6211;&#x4EEC;&#x5728;&#x5176;&#x4E2D;&#x52A0;&#x5165;12security: authorization: &quot;enabled&quot; &#x4E4B;&#x540E;&#x91CD;&#x542F;&#x670D;&#x52A1;$ brew services restart mongodb &#x4E4B;&#x540E;&#x767B;&#x9646;mongodb&#x5C31;&#x9700;&#x8981;&#x7528;&#x6237;&#x5BC6;&#x7801;&#x4E86; &#x4F7F;&#x7528;shell&#x767B;&#x9646;$ mongo db -u username -p node&#x4E2D;&#x7684;&#x8FDE;&#x63A5;mongodb.connect(&apos;mongodb://user:pwd@host:port/db&apos;) db&#x662F;&#x8981;&#x767B;&#x9646;&#x7684;&#x6570;&#x636E;&#x5E93;&#x7684;&#x540D;&#x5B57;&#xFF0C;&#x767B;&#x9646;&#x540E;&#x8FDB;&#x884C;&#x6743;&#x9650;&#x4E0D;&#x591F;&#x7684;&#x64CD;&#x4F5C;&#x5C06;&#x4F1A;&#x88AB;&#x62D2;&#x7EDD;&#xFF0C;&#x5927;&#x5927;&#x63D0;&#x5347;&#x4E86;&#x5B89;&#x5168;&#x6027;&#x3002; &#x4E4B;&#x540E;&#x5F53;&#x6211;&#x4EEC;&#x8981;&#x4E3A;&#x67D0;&#x4E2A;&#x6570;&#x636E;&#x5E93;&#x6DFB;&#x52A0;&#x65B0;&#x7684;&#x7528;&#x6237;&#x65F6;&#xFF0C;&#x8FDB;&#x884C;&#x7684;&#x64CD;&#x4F5C;&#x5982;&#x4E0B;&#xFF1A; &#x4F7F;&#x7528;&#x7BA1;&#x7406;&#x5458;&#x8D26;&#x6237;&#x767B;&#x5F55;mongodb &#x5207;&#x6362;&#x81F3;&#x8981;&#x6DFB;&#x52A0;&#x7528;&#x6237;&#x7684;&#x6570;&#x636E;&#x5E93; &#x6DFB;&#x52A0;&#x7528;&#x6237; &#x4F7F;&#x7528;db.auth({username, pwd})&#x6765;&#x8BA4;&#x8BC1;&#x7528;&#x6237; &#x9000;&#x51FA;&#x7BA1;&#x7406;&#x5458;&#x8D26;&#x6237;&#xFF0C;&#x7528;&#x65B0;&#x521B;&#x5EFA;&#x7684;&#x7528;&#x6237;&#x767B;&#x5F55;&#x8BE5;&#x6570;&#x636E;&#x5E93;&#x8FDB;&#x884C;&#x68C0;&#x67E5; &#x51E0;&#x4E2A;&#x5E38;&#x7528;&#x7684;&#x547D;&#x4EE4;&#xFF1A; &#x67E5;&#x770B;&#x5DF2;&#x5B58;&#x5728;&#x7528;&#x6237;&#xFF08;&#x9700;&#x8981;&#x7BA1;&#x7406;&#x5458;&#x6743;&#x9650;&#xFF09;db.system.users.find() &#x5220;&#x9664;&#x4E00;&#x4E2A;&#x7528;&#x6237;&#xFF08;&#x9700;&#x8981;&#x8D85;&#x7EA7;&#x7BA1;&#x7406;&#x5458;&#x6743;&#x9650;&#xFF09;db.system.users.remove({user: username}) &#x67E5;&#x770B;&#x5F53;&#x524D;&#x6570;&#x636E;&#x5E93;&#x7684;&#x7528;&#x6237;show users"},{"title":"使用SSH进行远程连接","permalink":"http://lovin0730.github.io/2016/10/25/ssh-base/","text":"pixiv-ID: 59600727 &#x5728;&#x5F00;&#x53D1;&#x573A;&#x666F;&#x4E2D;&#xFF0C;&#x5F00;&#x53D1;&#x4EBA;&#x5458;&#x514D;&#x4E0D;&#x4E86;&#x548C;&#x670D;&#x52A1;&#x5668;&#x6253;&#x4EA4;&#x9053;&#xFF0C;&#x65E0;&#x8BBA;&#x662F;&#x8FDE;&#x63A5;&#x670D;&#x52A1;&#x5668;&#x8FD8;&#x662F;&#x81EA;&#x5DF1;&#x865A;&#x62DF;&#x673A;&#x4E2D;&#x642D;&#x5EFA;&#x7684;&#x5F00;&#x53D1;&#x73AF;&#x5883;&#xFF0C;&#x90FD;&#x79BB;&#x4E0D;&#x5F00;SSH&#x7684;&#x5E94;&#x7528;&#x3002; SSH&#x662F;&#x4E00;&#x79CD;&#x7F51;&#x7EDC;&#x534F;&#x8BAE;&#xFF0C;&#x7528;&#x4E8E;&#x8BA1;&#x7B97;&#x673A;&#x4E4B;&#x95F4;&#x7684;&#x52A0;&#x5BC6;&#x767B;&#x9646;&#x3002;&#x901A;&#x8FC7;&#x516C;&#x94A5;&#x52A0;&#x5BC6;&#x8FDB;&#x884C;&#x4FE1;&#x606F;&#x4FDD;&#x62A4;&#xFF0C;&#x8FC7;&#x7A0B;&#x4E3A;&#xFF1A; &#x8FDC;&#x7A0B;&#x4E3B;&#x673A;&#x6536;&#x5230;&#x7528;&#x6237;&#x767B;&#x9646;&#x8BF7;&#x6C42;&#xFF0C;&#x53D1;&#x9001;&#x516C;&#x94A5;&#x5230;&#x7528;&#x6237;&#x3002; &#x7528;&#x6237;&#x7528;&#x516C;&#x94A5;&#x52A0;&#x5BC6;&#x5BC6;&#x7801;&#x53D1;&#x9001;&#x5230;&#x8FDC;&#x7A0B;&#x4E3B;&#x673A;&#x3002; &#x8FDC;&#x7A0B;&#x4E3B;&#x673A;&#x7528;&#x79C1;&#x94A5;&#x89E3;&#x5BC6;&#x767B;&#x5F55;&#x5BC6;&#x7801;&#xFF0C;&#x5BC6;&#x7801;&#x6B63;&#x786E;&#x5219;&#x901A;&#x8FC7;&#x9A8C;&#x8BC1;&#x3002; &#x5982;&#x679C;&#x901A;&#x4FE1;&#x88AB;&#x622A;&#x83B7;&#xFF0C;&#x5185;&#x5BB9;&#x4E5F;&#x662F;&#x52A0;&#x5BC6;&#x8FC7;&#x7684;&#xFF0C;&#x800C;&#x4E0D;&#x4F1A;&#x76F4;&#x63A5;&#x66B4;&#x9732;&#x51FA;&#x6765;&#xFF0C;&#x56E0;&#x6B64;&#x4E00;&#x76F4;&#x662F;&#x4E3B;&#x6D41;&#x7684;&#x7F51;&#x7EDC;&#x5B89;&#x5168;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x4E4B;&#x4E00;&#x3002;SSH&#x6709;&#x5F88;&#x591A;&#x79CD;&#x5B9E;&#x73B0;&#xFF0C;&#x6211;&#x4EEC;&#x4E0B;&#x6587;&#x6240;&#x8BF4;&#x7684;OpenSSH&#x5C31;&#x662F;&#x5176;&#x4E2D;&#x4E00;&#x79CD;&#x3002; &#x5BF9;&#x4E8E;linux&#xFF0C;&#x4E00;&#x822C;&#x4F7F;&#x7528;&#x7684;&#x90FD;&#x662F;OpenSSH&#xFF0C;&#x5BF9;&#x4E8E;&#x5C1A;&#x672A;&#x5B89;&#x88C5;&#x76F8;&#x5E94;&#x8F6F;&#x4EF6;&#x7684;&#x673A;&#x5668;&#xFF0C;&#x9700;&#x8981;&#x901A;&#x8FC7;apt-get&#x8FDB;&#x884C;&#x5B89;&#x88C5;&#xFF1A;$ sudo apt-get install openssh-server openssh-client &#x7528;SSH&#x8FDC;&#x7A0B;&#x767B;&#x9646;&#x65F6;&#xFF0C;&#x901A;&#x7528;&#x7684;&#x547D;&#x4EE4;&#x662F;(&#x65B9;&#x62EC;&#x53F7;&#x4E2D;&#x7684;&#x5185;&#x5BB9;&#x662F;&#x53EF;&#x9009;&#x7684;)$ ssh [-p port] user@host user&#x4EE3;&#x8868;&#x8FDC;&#x7A0B;&#x6240;&#x4F7F;&#x7528;&#x7684;&#x767B;&#x9646;&#x540D;(&#x9700;&#x88AB;&#x8FDC;&#x7A0B;&#x673A;&#x5668;&#x4E0A;&#x6709;&#x6B64;&#x7528;&#x6237;&#x540D;) host&#x4EE3;&#x8868;&#x8FDC;&#x7A0B;&#x673A;&#x5668;&#x7684;&#x5730;&#x5740; &#x9ED8;&#x8BA4;&#x4F1A;&#x4F7F;&#x7528;22&#x4F5C;&#x4E3A;&#x8FDC;&#x7A0B;&#x4E3B;&#x673A;&#x7684;&#x7AEF;&#x53E3;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x60F3;&#x6539;&#x53D8;&#x7AEF;&#x53E3;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;p&#x53C2;&#x6570; &#x5982;&#x679C;&#x60F3;&#x8981;&#x9000;&#x51FA;&#x767B;&#x9646;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x8F93;&#x5165;exit&#x5C31;&#x80FD;&#x9000;&#x51FA;&#x4E86;&#x3002; &#x90A3;&#x4E48;&#x80FD;&#x4E0D;&#x80FD;&#x4E0D;&#x7528;&#x6BCF;&#x6B21;&#x8F93;&#x5165;&#x5BC6;&#x7801;&#x767B;&#x9646;&#x5462;&#xFF1F;&#x5F53;&#x7136;&#x53EF;&#x4EE5;&#xFF0C;&#x56E0;&#x4E3A;SSH&#x652F;&#x6301;&#x516C;&#x94A5;&#x767B;&#x9646;&#x3002; &#x9996;&#x5148;&#x7B80;&#x5355;&#x8BB2;&#x8BB2;&#x516C;&#x94A5;&#x9A8C;&#x8BC1;&#x673A;&#x5236;&#xFF1A;&#x516C;&#x94A5;(public key)&#x548C;&#x79C1;&#x94A5;(private key)&#x662F;&#x4E24;&#x4EFD;&#x6587;&#x4EF6;&#xFF0C;&#x670D;&#x52A1;&#x7AEF;&#x6301;&#x6709;&#x516C;&#x94A5;&#xFF0C;&#x7528;&#x6765;&#x52A0;&#x5BC6;&#xFF1B;&#x5BA2;&#x6237;&#x7AEF;&#x6301;&#x6709;&#x79C1;&#x94A5;&#xFF0C;&#x7528;&#x6765;&#x89E3;&#x5BC6;&#x3002;&#x5BA2;&#x6237;&#x7AEF;&#x5411;&#x670D;&#x52A1;&#x7AEF;&#x53D1;&#x8D77;&#x8FDE;&#x63A5;&#x8BF7;&#x6C42;&#x65F6;&#xFF0C;&#x670D;&#x52A1;&#x7AEF;&#x4F1A;&#x751F;&#x6210;&#x4E00;&#x4E32;&#x968F;&#x673A;&#x6570;&#xFF0C;&#x7ECF;&#x8FC7;&#x516C;&#x94A5;&#x52A0;&#x5BC6;&#x540E;&#x4F20;&#x7ED9;&#x5BA2;&#x6237;&#x7AEF;&#x3002;&#x8FD9;&#x65F6;&#x5BA2;&#x6237;&#x7AEF;&#x4F1A;&#x7528;&#x79C1;&#x94A5;&#x89E3;&#x5BC6;&#x83B7;&#x53D6;&#x968F;&#x673A;&#x6570;&#xFF0C;&#x518D;&#x8FD4;&#x56DE;&#x670D;&#x52A1;&#x7AEF;&#x3002;&#x6700;&#x540E;&#x670D;&#x52A1;&#x7AEF;&#x5224;&#x65AD;&#x4E00;&#x4E0B;&#xFF0C;&#x5982;&#x679C;&#x5BA2;&#x6237;&#x7AEF;&#x80FD;&#x591F;&#x8FD4;&#x56DE;&#x6B63;&#x786E;&#x7684;&#x968F;&#x673A;&#x6570;&#xFF0C;&#x5C31;&#x8BA4;&#x4E3A;&#x6821;&#x9A8C;&#x901A;&#x8FC7;&#x4E86; &#xFF0C;&#x53EF;&#x4EE5;&#x8FDB;&#x884C;&#x8FDE;&#x63A5;&#x3002;&#x5426;&#x5219;&#x5C31;&#x4E0D;&#x80FD;&#x8FDE;&#x63A5;&#x3002; &#x7528;&#x6237;&#x9700;&#x8981;&#x63D0;&#x4F9B;&#x81EA;&#x5DF1;&#x7684;&#x516C;&#x94A5;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#xFF0C;&#x53EF;&#x4EE5;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#xFF0C;&#x4F7F;&#x7528;&#x547D;&#x4EE4;$ ssh-keygen&#x8FD9;&#x4E2A;&#x547D;&#x4EE4;&#x4F1A;&#x5728;&#x9ED8;&#x8BA4;&#x4E3A;$HOME/.ssh/&#x76EE;&#x5F55;&#x4E0B;&#x751F;&#x6210;&#x4E24;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;&#x4E00;&#x4E2A;&#x662F;id_rsa.pub(&#x516C;&#x94A5;)&#xFF0C;&#x53E6;&#x4E00;&#x4E2A;&#x662F;id_rsa(&#x79C1;&#x94A5;)&#xFF0C;&#x751F;&#x6210;&#x79C1;&#x94A5;&#x7684;&#x65F6;&#x5019;&#x53EF;&#x80FD;&#x4F1A;&#x8BE2;&#x95EE;&#x4F60;&#x9700;&#x8981;&#x4E0D;&#x9700;&#x8981;&#x8BBE;&#x7F6E;&#x53E3;&#x4EE4;(passphrase)&#xFF0C;&#x5982;&#x679C;&#x62C5;&#x5FC3;&#x5B83;&#x7684;&#x5B89;&#x5168;&#xFF0C;&#x53EF;&#x4EE5;&#x8BBE;&#x7F6E;&#x4E00;&#x4E2A;&#x3002; &#x63A5;&#x7740;&#x4F60;&#x5C31;&#x53EF;&#x4EE5;&#x4F20;&#x9001;&#x516C;&#x94A5;&#x5230;&#x60F3;&#x8981;&#x8BBF;&#x95EE;&#x7684;&#x4E3B;&#x673A;&#x4E0A;&#x9762;&#xFF1A;$ ssh-copy-id user@host &#x4ECE;&#x6B64;&#x767B;&#x9646;&#x8FD9;&#x53F0;&#x4E3B;&#x673A;&#xFF0C;&#x5C31;&#x4E0D;&#x9700;&#x8981;&#x5BC6;&#x7801;&#x4E86;&#x3002;&#x9700;&#x6CE8;&#x610F;&#xFF0C;&#x4E3B;&#x673A;&#x7684;/etc/ssh/sshd_config&#x6587;&#x4EF6;&#x4E2D;&#x9700;&#x5B58;&#x5728;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;&#x3002;123RSAAuthentication yesPubkeyAuthentication yesAuthorizedKeysFile .ssh/authorized_keys &#x6709;&#x65F6;&#x9700;&#x8981;&#x5728;&#x672C;&#x5730;&#x548C;&#x8FDC;&#x7A0B;&#x673A;&#x5668;&#x95F4;&#x4F20;&#x9001;&#x6587;&#x4EF6;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;scp&#x547D;&#x4EE4;&#x6765;&#x8FDB;&#x884C;&#x3002; &#x4E0A;&#x4F20;&#x6587;&#x4EF6;&#x5230;&#x8FDC;&#x7A0B;&#x76EE;&#x5F55;&#xFF1A;$ scp /path/file user@host:/path &#x4ECE;&#x8FDC;&#x7A0B;&#x76EE;&#x5F55;&#x4E0B;&#x8F7D;&#x6587;&#x4EF6;&#xFF1A;$ scp user@host:/path/file /path &#x4E0A;&#x4F20;&#x6587;&#x4EF6;&#x5939;&#x5230;&#x8FDC;&#x7A0B;&#x76EE;&#x5F55;&#xFF1A;$ scp -r /path/dir user@host:/path &#x4ECE;&#x8FDC;&#x7A0B;&#x76EE;&#x5F55;&#x4E0B;&#x8F7D;&#x6587;&#x4EF6;&#x5939;&#xFF1A;$ scp -r user@host:/path/dir /path &#x6700;&#x540E;&#x8C08;&#x8C08;SSH&#x7684;&#x5C40;&#x9650;&#x6027;&#xFF1A; SSH&#x5B58;&#x5728;&#x4E00;&#x4E2A;&#x98CE;&#x9669;&#xFF0C;&#x5C31;&#x662F;SSH&#x7684;&#x534F;&#x8BAE;&#x516C;&#x94A5;&#x662F;&#x6CA1;&#x6709;&#x8BC1;&#x4E66;&#x516C;&#x8BC1;&#x7684;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x53EF;&#x80FD;&#x5B58;&#x5728;&#x201C;&#x4E2D;&#x95F4;&#x4EBA;&#x201D;&#x622A;&#x83B7;&#x4E86;&#x767B;&#x9646;&#x8BF7;&#x6C42;&#xFF0C;&#x5E76;&#x5192;&#x5145;&#x8FDC;&#x7A0B;&#x4E3B;&#x673A;&#x5C06;&#x81EA;&#x5DF1;&#x4F2A;&#x9020;&#x7684;&#x516C;&#x94A5;&#x53D1;&#x9001;&#x7ED9;&#x7528;&#x6237;&#xFF0C;&#x5C31;&#x80FD;&#x5F97;&#x5230;&#x7528;&#x6237;&#x63A5;&#x4E0B;&#x6765;&#x53D1;&#x9001;&#x7684;&#x5BC6;&#x7801;&#x3002;&#x8FD9;&#x79CD;&#x653B;&#x51FB;&#x53EB;&#x505A;&#x4E2D;&#x95F4;&#x4EBA;&#x653B;&#x51FB;&#x3002; SSH&#x89E3;&#x51B3;&#x7684;&#x529E;&#x6CD5;&#x662F;&#x5728;&#x767B;&#x9646;&#x65F6;&#x53D1;&#x9001;&#x516C;&#x94A5;&#x6307;&#x7EB9;&#x7ED9;&#x7528;&#x6237;&#xFF0C;&#x7528;&#x6237;&#x81EA;&#x5DF1;&#x6839;&#x636E;&#x8FD9;&#x4E00;&#x6307;&#x7EB9;&#x548C;&#x8FDC;&#x7A0B;&#x4E3B;&#x673A;&#x516C;&#x5E03;&#x7684;&#x6307;&#x7EB9;&#x8FDB;&#x884C;&#x6838;&#x5BF9;&#x3002;&#x7528;&#x6237;&#x4E5F;&#x8981;&#x81EA;&#x884C;&#x627F;&#x62C5;&#x98CE;&#x9669;&#x3002;"},{"title":"JavaScript异步编程进化论","permalink":"http://lovin0730.github.io/2016/09/07/js-async/","text":"pixiv-ID: 16810195 &#x4F17;&#x6240;&#x5468;&#x77E5;&#xFF0C;JavaScript&#x7684;&#x6267;&#x884C;&#x73AF;&#x5883;&#x662F;&#x5355;&#x7EBF;&#x7A0B;&#x7684;&#xFF0C;&#x8FD9;&#x610F;&#x5473;&#x7740;&#x5982;&#x679C;&#x6709;&#x5F88;&#x591A;&#x4EFB;&#x52A1;&#xFF0C;&#x5C31;&#x53EA;&#x80FD;&#x6392;&#x961F;&#x4E00;&#x4E2A;&#x4E00;&#x4E2A;&#x6267;&#x884C;&#x3002;&#x8BF7;&#x770B;&#x4E0B;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x3002;12345console.log(1);var X = 100000;for(let i = 0; i &lt; X; i++) {}console.log(2); &#x968F;&#x7740;X&#x7684;&#x589E;&#x5927;&#xFF0C;&#x6253;&#x5370;1&#x548C;2&#x4E4B;&#x95F4;&#x51FA;&#x73B0;&#x7684;&#x65F6;&#x95F4;&#x95F4;&#x9694;&#x4E5F;&#x5728;&#x660E;&#x663E;&#x53D8;&#x957F;&#x3002;&#x5BF9;&#x6B64;&#xFF0C;JavaScript&#x91C7;&#x53D6;&#x5F02;&#x6B65;&#x6765;&#x5904;&#x7406;&#x8FD9;&#x79CD;&#x95EE;&#x9898;&#x3002;12345console.log(1);setTimeout(() =&gt; { console.log(2)}, 2000);console.log(3) &#x4E8B;&#x5B9E;&#x4E0A;&#xFF0C;&#x6253;&#x5370;&#x7684;&#x7ED3;&#x679C;&#x662F;1&#x3001;3&#x3001;2&#xFF0C;setTimeout&#x662F;&#x4E00;&#x4E2A;&#x5178;&#x578B;&#x7684;&#x5F02;&#x6B65;&#x64CD;&#x4F5C;&#xFF0C;&#x6240;&#x4EE5;JavaScript&#x5F15;&#x64CE;&#x6267;&#x884C;&#x5230;&#x5B83;&#x65F6;&#xFF0C;&#x4F1A;&#x8BA9;&#x5B83;&#x5F02;&#x6B65;&#x6267;&#x884C;&#xFF0C;&#x800C;&#x81EA;&#x5DF1;&#x7EE7;&#x7EED;&#x6267;&#x884C;&#x540E;&#x9762;&#x7684;&#x4EFB;&#x52A1;&#xFF0C;&#x7B49;&#x5230;&#x5F02;&#x6B65;&#x64CD;&#x4F5C;&#x6709;&#x4E86;&#x7ED3;&#x679C;&#xFF0C;&#x518D;&#x8FDB;&#x884C;&#x5904;&#x7406;&#x3002;&#x4F46;&#x662F;&#x5F02;&#x6B65;&#x7F16;&#x7A0B;&#x7684;&#x65B9;&#x6CD5;&#x662F;&#x503C;&#x5F97;&#x8BA8;&#x8BBA;&#x7684;&#xFF0C;&#x4E0B;&#x9762;&#x6211;&#x7528;Node.js&#x73AF;&#x5883;&#x6765;&#x8FDB;&#x884C;&#x540E;&#x7EED;&#x7684;&#x6F14;&#x793A;&#x3002;1234567const http = require(&apos;http&apos;);http.createServer((req, res) =&gt; { res.writeHead(200, { &apos;Content-Type&apos;: &apos;text/plain&apos; }); //TODO}).listen(3000, console.log(&apos;callback running at localhost:3000&apos;)); &#x6211;&#x521B;&#x5EFA;&#x4E86;&#x4E00;&#x4E2A;&#x672C;&#x5730;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x540E;&#x9762;&#x4E66;&#x5199;&#x7684;&#x6240;&#x6709;&#x4EE3;&#x7801;&#x90FD;&#x653E;&#x5728;&#x6CE8;&#x91CA;&#x4E3A;TODO&#x7684;&#x4F4D;&#x7F6E;&#x6267;&#x884C;&#x3002; Callback&#x65E9;&#x671F;&#x7684;&#x5927;&#x591A;&#x6570;&#x5F02;&#x6B65;&#x64CD;&#x4F5C;&#x90FD;&#x662F;&#x901A;&#x8FC7;&#x56DE;&#x8C03;&#x51FD;&#x6570;&#x6765;&#x5B8C;&#x6210;&#x7684;&#x3002;&#x4E0B;&#x9762;&#x6211;&#x4EEC;&#x7528;delay&#x51FD;&#x6570;&#x6765;&#x6A21;&#x62DF;&#x5F02;&#x6B65;&#x7684;&#x6570;&#x636E;&#x83B7;&#x53D6;(&#x5C31;&#x50CF;&#x5BA2;&#x6237;&#x7AEF;&#x901A;&#x8FC7;Ajax&#x6216;&#x662F;&#x670D;&#x52A1;&#x7AEF;&#x64CD;&#x4F5C;&#x6570;&#x636E;&#x5E93;&#x6240;&#x83B7;&#x53D6;&#x7684;&#x6570;&#x636E;)&#x3002;123456789101112131415161718const delay = (msg, callback) =&gt; { setTimeout(() =&gt; { callback(msg + &apos;\\n&apos;); }, 0);}delay(&apos;delay begin&apos;, (data) =&gt; { res.write(data); delay(&apos;delay end&apos;, (data) =&gt; { res.write(data); delay(&apos;callback work&apos;, (data) =&gt; { res.write(data); delay(&apos;done&apos;, (data) =&gt; { res.write(data); res.end(); }) }) })}); &#x6211;&#x4EEC;&#x53D1;&#x73B0;&#x95EE;&#x9898;&#x7684;&#x6240;&#x5728;&#x4E86;&#xFF0C;&#x7531;&#x4E8E;&#x6570;&#x636E;&#x53EA;&#x80FD;&#x5728;&#x56DE;&#x8C03;&#x51FD;&#x6570;&#x5185;&#x8FDB;&#x884C;&#x4F7F;&#x7528;&#x548C;&#x64CD;&#x4F5C;&#xFF0C;&#x8FD9;&#x5BFC;&#x81F4;&#x4E86;&#x5197;&#x957F;&#x7684;&#x56DE;&#x8C03;&#x51FD;&#x6570;&#x7684;&#x51FA;&#x73B0;&#xFF0C;&#x800C;&#x4E14;&#x975E;&#x5E38;&#x96BE;&#x4EE5;&#x9605;&#x8BFB;&#x3002;&#x8FD9;&#x5C31;&#x662F;&#x8457;&#x540D;&#x7684;callback hell&#xFF0C;&#x5BF9;&#x4E8E;&#x9700;&#x8981;&#x8FDE;&#x7EED;&#x8FDB;&#x884C;&#x5F02;&#x6B65;&#x64CD;&#x4F5C;&#x7684;&#x5E94;&#x7528;&#xFF0C;&#x8FD9;&#x6837;&#x7684;&#x5B9E;&#x73B0;&#x65B9;&#x6848;&#x65E0;&#x7591;&#x662F;&#x7EF4;&#x62A4;&#x8005;&#x7684;&#x5669;&#x68A6;&#x3002; Promise&#x56E0;&#x6B64;&#xFF0C;Promise&#x5E94;&#x8FD0;&#x800C;&#x751F;&#xFF0C;&#x5B83;&#x6539;&#x53D8;&#x4E86;&#x5199;&#x6CD5;&#x3002;&#x8BF7;&#x770B;&#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x3002;1234567891011121314151617181920212223const delay = (msg) =&gt; { return new Promise((resolve) =&gt; { setTimeout(() =&gt; { resolve(msg + &apos;\\n&apos;); }, 0); });}delay(&apos;delay begin&apos;).then((data) =&gt; { res.write(data);}).then(() =&gt; { return delay(&apos;delay end&apos;);}).then((data) =&gt; { res.write(data);}).then(() =&gt; { return delay(&apos;promise work&apos;);}).then((data) =&gt; { res.write(data);}).then(() =&gt; { return delay(&apos;done&apos;);}).then((data) =&gt; { res.write(data); res.end();}); &#x8FD9;&#x6837;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x80FD;&#x901A;&#x8FC7;&#x94FE;&#x5F0F;&#x8C03;&#x7528;&#x6765;&#x4E66;&#x5199;&#x5F02;&#x6B65;&#x64CD;&#x4F5C;&#xFF0C;&#x4EFB;&#x52A1;&#x5148;&#x540E;&#x987A;&#x5E8F;&#x6E05;&#x6670;&#x6613;&#x61C2;&#x3002;&#x53EA;&#x662F;&#xFF0C;&#x8FD9;&#x4EFD;&#x4EE3;&#x7801;&#x5BF9;&#x4E8E;&#x7EF4;&#x62A4;&#x8005;&#x663E;&#x7136;&#x4E5F;&#x4E0D;&#x662F;&#x90A3;&#x4E48;&#x53CB;&#x597D;&#xFF0C;&#x8981;&#x8FDB;&#x884C;&#x4FEE;&#x6539;&#xFF0C;&#x5C31;&#x8981;&#x5BF9;&#x957F;&#x957F;&#x7684;&#x94FE;&#x5F0F;&#x8C03;&#x7528;&#x8FDB;&#x884C;&#x9605;&#x8BFB;&#x548C;&#x4FEE;&#x6539;&#x3002;&#x5728;&#x5EA6;&#x8FC7;jQuery&#x65F6;&#x4EE3;&#x65F6;&#xFF0C;&#x8FD9;&#x79CD;&#x5199;&#x6CD5;&#x7684;&#x5F0A;&#x7AEF;&#x5DF2;&#x7ECF;&#x66B4;&#x6F0F;&#x65E0;&#x7591;&#x3002; GeneratorES6&#x4E3A;&#x6211;&#x4EEC;&#x63D0;&#x4F9B;&#x4E86;&#x66F4;&#x65B0;&#x7684;&#x5F02;&#x6B65;&#x64CD;&#x4F5C;&#x601D;&#x8DEF;&#xFF0C;&#x90A3;&#x5C31;&#x662F;&#x4F7F;&#x7528;Generator&#x51FD;&#x6570;&#x3002;123456789101112131415161718const delay = (msg) =&gt; { setTimeout(() =&gt; { to.next(msg + &apos;\\n&apos;); }, 100);}function* todo() { const begin = yield delay(&apos;delay begin&apos;); res.write(begin); const end = yield delay(&apos;delay end&apos;); res.write(end); const generator = yield delay(&apos;generator work&apos;); res.write(generator); const done = yield delay(&apos;done&apos;); res.write(done); res.end();}let to = todo();to.next(); &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5728;&#x51FD;&#x6570;&#x58F0;&#x660E;&#x65F6;&#x52A0;&#x4E0A;&#x661F;&#x53F7;&#x521B;&#x5EFA;Generator&#x51FD;&#x6570;&#x3002;&#x5B83;&#x5141;&#x8BB8;&#x51FD;&#x6570;&#x5728;&#x6267;&#x884C;&#x8FC7;&#x7A0B;&#x4E2D;&#x9000;&#x51FA;&#x548C;&#x91CD;&#x65B0;&#x8FDB;&#x5165;&#xFF0C;&#x4E14;&#x91CD;&#x65B0;&#x8FDB;&#x5165;&#x65F6;&#x7684;&#x73AF;&#x5883;&#xFF08;&#x4F8B;&#x5982;&#x53D8;&#x91CF;&#x7B49;&#xFF09;&#x53EF;&#x4EE5;&#x7EE7;&#x7EED;&#x4F7F;&#x7528;&#x3002;&#x8C03;&#x7528;Generator&#x5E76;&#x4E0D;&#x4F1A;&#x7ACB;&#x5373;&#x6267;&#x884C;&#xFF0C;&#x800C;&#x662F;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;Iterator&#x5BF9;&#x8C61;&#xFF0C;&#x6BCF;&#x6B21;&#x8C03;&#x7528;&#x8FD9;&#x4E2A;&#x5BF9;&#x8C61;&#x7684;next&#x65B9;&#x6CD5;&#xFF0C;&#x5B83;&#x4F1A;&#x6267;&#x884C;&#x5230;&#x7B2C;&#x4E00;&#x4E2A;yield&#x8868;&#x8FBE;&#x5F0F;&#x4E4B;&#x524D;&#xFF0C;&#x8FD9;&#x4E2A;&#x8868;&#x8FBE;&#x5F0F;&#x5B9A;&#x4E49;&#x4E86;&#x8FD4;&#x56DE;&#x503C;&#x4EE5;&#x53CA;&#x8FD4;&#x56DE;&#x72B6;&#x6001;&#x3002;&#x53EF;&#x4EE5;&#x5BF9;next&#x65B9;&#x6CD5;&#x76F4;&#x63A5;&#x4F20;&#x5165;&#x53C2;&#x6570;&#x6765;&#x89C4;&#x5B9A;&#x8FD4;&#x56DE;&#x503C;&#x3002;&#x5176;&#x5B9E;&#xFF0C;Generator&#x60F3;&#x505A;&#x7684;&#x5C31;&#x662F;&#x8BA9;&#x5F02;&#x6B65;&#x7F16;&#x7A0B;&#x8D8A;&#x6765;&#x8D8A;&#x50CF;&#x540C;&#x6B65;&#x7F16;&#x7A0B;&#x3002;&#x4E0A;&#x8FF0;&#x4EE3;&#x7801;&#x4E2D;&#x6211;&#x4EEC;&#x53D1;&#x73B0;&#x5B83;&#x786E;&#x5B9E;&#x8FBE;&#x5230;&#x4E86;&#x76EE;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x5B83;&#x4E5F;&#x6709;&#x663E;&#x800C;&#x6613;&#x89C1;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x90A3;&#x5C31;&#x662F;&#x6211;&#x4EEC;&#x5728;&#x4E66;&#x5199;&#x5F02;&#x6B65;&#x64CD;&#x4F5C;&#x65F6;&#x603B;&#x8981;&#x7262;&#x8BB0;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x8981;&#x8C03;&#x7528;next&#xFF0C;&#x4E14;&#x5F02;&#x6B65;&#x64CD;&#x4F5C;&#x548C;&#x8C03;&#x7528;Generator&#x51FD;&#x6570;&#x751F;&#x6210;&#x7684;&#x5B9E;&#x4F8B;&#x603B;&#x8981;&#x653E;&#x5728;&#x540C;&#x4E00;&#x4F5C;&#x7528;&#x57DF;&#xFF0C;&#x8026;&#x5408;&#x5EA6;&#x5F88;&#x9AD8;&#xFF0C;&#x518D;&#x52A0;&#x4E0A;&#x7B2C;&#x4E00;&#x6B21;&#x7684;next&#x65B9;&#x6CD5;&#x8981;&#x624B;&#x52A8;&#x8C03;&#x7528;&#xFF0C;&#x56E0;&#x6B64;&#x8FD9;&#x4E00;&#x65B9;&#x6848;&#x6CE8;&#x5B9A;&#x8FD8;&#x6709;&#x5F88;&#x5927;&#x7684;&#x63D0;&#x5347;&#x7A7A;&#x95F4;&#x3002; Thunk GeneratorThunk&#x51FD;&#x6570;&#x662F;&#x4E00;&#x79CD;&#x9AD8;&#x9636;&#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x652F;&#x6301;&#x6211;&#x4EEC;&#x5C06;&#x4E00;&#x4E2A;&#x5E26;&#x6709;&#x56DE;&#x8C03;&#x51FD;&#x6570;&#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#x7684;&#x591A;&#x53C2;&#x51FD;&#x6570;&#x8F6C;&#x5316;&#x4E3A;&#x5355;&#x53C2;&#x7248;&#x672C;&#x3002;&#x4E3E;&#x4E2A;&#x4F8B;&#x5B50;&#xFF1A;12345678910111213141516//&#x5E26;&#x56DE;&#x8C03;&#x51FD;&#x6570;&#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#x7684;&#x591A;&#x53C2;&#x51FD;&#x6570;const delay = (msg, callback) =&gt; { setTimeout(() =&gt; { callback(msg); }, 0);};//&#x5E38;&#x89C4;&#x8C03;&#x7528;delay(&apos;your msg&apos;, () =&gt; { //whatever});//Thunk&#x5316;const delay_thunk = Thunk(delay);//Thunk&#x5316;&#x4E4B;&#x540E;&#x7684;&#x8C03;&#x7528;delay(&apos;your msg&apos;)(() =&gt; { //whatever}); &#x5982;&#x679C;&#x6211;&#x4EEC;&#x4F7F;&#x7528;Thunk&#x5316;&#x4E4B;&#x540E;&#x7684;delay&#x51FD;&#x6570;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x6709;&#x5E0C;&#x671B;&#x628A;generator&#x51FD;&#x6570;&#x4E2D;&#x6267;&#x884C;&#x7684;&#x5F02;&#x6B65;&#x51FD;&#x6570;&#x548C;next&#x65B9;&#x6CD5;&#x5206;&#x79BB;&#x5F00;&#x6765;&#xFF0C;&#x5E76;&#x5236;&#x9020;&#x51FA;&#x4E00;&#x4E2A;generator&#x81EA;&#x52A8;&#x6267;&#x884C;&#x5668;&#x3002;12345678910111213141516171819202122232425262728293031323334353637const Thunk = (f) =&gt; { return (...args) =&gt; { return (callback) =&gt; { return f.call(this, ...args, callback); } }};const delay = (msg, callback) =&gt; { setTimeout(() =&gt; { callback(msg); }, 0);}const write = (pass) =&gt; { res.write(pass + &apos;\\n&apos;);}const runG = (g) =&gt; { const it = g(); !function next(data){ let result = it.next(data); if (!result.done) { result.value(next); } }();};const td = Thunk(delay);const todo = function* () { const begin = yield td(&apos;delay begin&apos;); const end = yield td(&apos;delay end&apos;); const gValue = yield td(&apos;generator thunk value&apos;); const done = yield td(&apos;done&apos;); write(begin); write(end); write(gValue); write(done); res.end();}runG(todo); &#x4E5F;&#x8BB8;&#x6700;&#x96BE;&#x7406;&#x89E3;&#x7684;&#x5C31;&#x662F;&#x81EA;&#x52A8;&#x5904;&#x7406;generator&#x7684;&#x51FD;&#x6570;runG&#x4E86;&#xFF0C;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x5176;&#x5B9E;&#x901A;&#x8FC7;&#x9012;&#x5F52;&#x5C42;&#x5C42;&#x8C03;&#x7528;generator&#x51FD;&#x6570;&#x7684;next&#x65B9;&#x6CD5;&#x3002;&#x8FD9;&#x975E;&#x5E38;&#x6709;&#x610F;&#x4E49;&#xFF0C;&#x56E0;&#x4E3A;&#x8FD9;&#x4E0B;&#x5F02;&#x6B65;&#x64CD;&#x4F5C;&#x771F;&#x6B63;&#x505A;&#x5230;&#x4E86;&#x5C06;&#x7ED3;&#x679C;&#x5206;&#x79BB;&#x51FA;&#x6765;&#x4F9B;&#x5916;&#x90E8;&#x8FDB;&#x884C;&#x4F7F;&#x7528;&#x548C;&#x64CD;&#x4F5C;&#x3002; Promise Generator&#x5982;&#x679C;&#x4E0D;&#x60F3;&#x501F;&#x52A9;thunk&#x51FD;&#x6570;&#xFF0C;&#x6211;&#x4EEC;&#x8FD8;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;promise&#xFF0C;&#x5B83;&#x8FD8;&#x514D;&#x53BB;&#x4E86;&#x6211;&#x4EEC;&#x624B;&#x5199;Thunk&#x51FD;&#x6570;&#x7684;&#x9EBB;&#x70E6;&#xFF0C;&#x8BF7;&#x770B;&#x4EE3;&#x7801;&#x3002;1234567891011121314151617181920212223242526272829303132333435const delay = (msg) =&gt; { return new Promise((resolve) =&gt; { setTimeout(() =&gt; { resolve(msg); }, 0); });}const write = (pass) =&gt; { res.write(pass + &apos;\\n&apos;);}const runG = (g) =&gt; { const it = g(); !function next(data){ let result = it.next(data); if (!result.done) { result.value.then((data) =&gt; { next(data); }); } else { return result.value; } }();}const todo = function* () { const begin = yield delay(&apos;delay begin&apos;); const end = yield delay(&apos;delay end&apos;); const gValue = yield delay(&apos;generator thunk value&apos;); const done = yield delay(&apos;done&apos;); write(begin); write(end); write(gValue); write(done); res.end();}runG(todo); AsyncES7&#x63D0;&#x51FA;&#x4E86;&#x65B0;&#x7684;&#x5F02;&#x6B65;&#x65B9;&#x6848;async&#xFF0C;&#x4E0D;&#x8FC7;babel&#x4E4B;&#x7C7B;&#x7684;&#x8F6C;&#x6362;&#x5668;&#x5DF2;&#x7ECF;&#x652F;&#x6301;&#x4E86;&#x5B83;&#xFF0C;async&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x6539;&#x53D8;&#x4E86;generator&#x51FD;&#x6570;&#x7684;api&#xFF0C;&#x540C;&#x65F6;&#x5185;&#x7F6E;&#x4E86;&#x81EA;&#x52A8;&#x6267;&#x884C;&#x51FD;&#x6570;&#x3002;12345678910111213141516171819202122const delay = (msg) =&gt; { return new Promise((resolve) =&gt; { setTimeout(() =&gt; { resolve(msg); }, 0); });}const write = (pass) =&gt; { res.write(pass + &apos;\\n&apos;);}async function todo() { const begin = await delay(&apos;delay begin&apos;); const end = await delay(&apos;delay end&apos;); const gValue = await delay(&apos;generator thunk value&apos;); const done = await delay(&apos;done&apos;); write(begin); write(end); write(gValue); write(done); res.end();}const autoRun = todo(); &#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x5C31;&#x662F;&#x5C06;&#x58F0;&#x660E;&#x65B9;&#x5F0F;&#x53BB;&#x6389;&#x4E86;&#x661F;&#x53F7;&#xFF0C;&#x5728;&#x51FD;&#x6570;&#x524D;&#x52A0;&#x4E0A;&#x4E86;async&#x524D;&#x7F00;&#xFF0C;&#x5E76;&#x5C06;yield&#x66FF;&#x6362;&#x4E3A;await&#xFF0C;&#x6267;&#x884C;&#x65F6;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x4E00;&#x6B21;&#x8C03;&#x7528;&#xFF0C;&#x5C31;&#x80FD;&#x81EA;&#x52A8;&#x6267;&#x884C;&#x5185;&#x90E8;&#x51FD;&#x6570;&#x4E86;&#x3002; &#x603B;&#x4E4B;&#xFF0C;&#x5F02;&#x6B65;&#x64CD;&#x4F5C;&#x6B63;&#x53D8;&#x5F97;&#x8D8A;&#x6765;&#x8D8A;&#x597D;&#x7406;&#x89E3;&#xFF0C;&#x597D;&#x4F7F;&#x7528;&#xFF0C;&#x597D;&#x7EF4;&#x62A4;&#xFF0C;&#x5B83;&#x76EE;&#x524D;&#x8FDB;&#x6B65;&#x7684;&#x65B9;&#x5411;&#x662F;&#x53D8;&#x5F97;&#x8D8A;&#x6765;&#x8D8A;&#x50CF;&#x540C;&#x6B65;&#x64CD;&#x4F5C;&#x3002;&#x5982;&#x679C;&#x4F60;&#x60F3;&#x4E86;&#x89E3;&#x66F4;&#x591A;&#xFF1A; &#x962E;&#x4E00;&#x5CF0;&#x7684;ES6&#x5165;&#x95E8;&#x6559;&#x7A0B; &#x962E;&#x4E00;&#x5CF0;&#x5173;&#x4E8E;Thunk&#x51FD;&#x6570;&#x7684;&#x6559;&#x7A0B; MDN&#x7684;Generator&#x51FD;&#x6570;&#x4ECB;&#x7ECD; ES6 Generators: Complete Series BY Kyle Simpson&#x7CFB;&#x5217;&#x6559;&#x7A0B; Promise&#x8FF7;&#x4F60;&#x4E66; BY azu"},{"title":"使用MySQL配合Node.js进行简单session校验","permalink":"http://lovin0730.github.io/2016/09/04/nodejs-mysql-session/","text":"pixiv-ID: 52610961 session&#x662F;web&#x5E94;&#x7528;&#x4FDD;&#x6301;&#x4F1A;&#x8BDD;&#x7684;&#x4E00;&#x79CD;&#x76F8;&#x5BF9;&#x5B89;&#x5168;&#x6709;&#x6548;&#x53C8;&#x7B80;&#x5355;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x901A;&#x5E38;&#x7684;&#x505A;&#x6CD5;&#x662F;&#x5728;&#x6BCF;&#x5F53;&#x5BA2;&#x6237;&#x7AEF;&#x53D1;&#x8D77;&#x8BF7;&#x6C42;&#xFF0C;&#x670D;&#x52A1;&#x7AEF;&#x5C31;&#x4F1A;&#x5728;&#x8FD4;&#x56DE;&#x7684;&#x54CD;&#x5E94;&#x5934;&#x4FE1;&#x606F;&#x4E2D;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x5B57;&#x6BB5;&#xFF0C;&#x540C;&#x65F6;&#x5C06;&#x8FD9;&#x4E2A;&#x5B57;&#x6BB5;&#x643A;&#x5E26;&#x7684;&#x4FE1;&#x606F;&#x8BB0;&#x5F55;&#x5728;&#x670D;&#x52A1;&#x7AEF;&#x3002;&#x8FD9;&#x6837;&#xFF0C;&#x5F53;&#x4E0B;&#x6B21;&#x5BA2;&#x6237;&#x7AEF;&#x53D1;&#x8D77;&#x8BF7;&#x6C42;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x670D;&#x52A1;&#x7AEF;&#x53EA;&#x8981;&#x68C0;&#x67E5;&#x5BA2;&#x6237;&#x7AEF;&#x643A;&#x5E26;&#x7684;cookie&#xFF0C;&#x5C06;&#x5B83;&#x4E0E;&#x670D;&#x52A1;&#x7AEF;&#x5B58;&#x50A8;&#x7684;&#x6570;&#x636E;&#x505A;&#x5BF9;&#x6BD4;&#x3002;&#x5C31;&#x53EF;&#x4EE5;&#x5F97;&#x77E5;&#x5BA2;&#x6237;&#x7AEF;&#x5F53;&#x524D;&#x72B6;&#x6001;&#xFF0C;&#x4ECE;&#x800C;&#x786E;&#x4FDD;&#x4F1A;&#x8BDD;&#x7684;&#x8FDE;&#x63A5;&#x4E86;&#x3002; &#x4F8B;&#x5982;&#xFF1A;&#x5F53;&#x6211;&#x7B2C;&#x4E00;&#x6B21;&#x6CE8;&#x518C;&#x767B;&#x5F55;&#x67D0;&#x7F51;&#x7AD9;&#xFF0C;&#x5B83;&#x8BB0;&#x5F55;&#x4E86;&#x6211;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x5E76;&#x544A;&#x8BC9;&#x6211;&#xFF1A;&#x201C;&#x6B22;&#x8FCE;&#x6765;&#x5230;&#x672C;&#x7F51;&#x7AD9;&#xFF01;&#x201D;&#xFF0C;&#x7136;&#x540E;&#x6211;&#x4E0D;&#x5C0F;&#x5FC3;&#x5173;&#x6389;&#x4E86;&#x6D4F;&#x89C8;&#x5668;&#xFF0C;&#x518D;&#x6253;&#x5F00;&#x8FD9;&#x4E2A;&#x7F51;&#x7AD9;&#x65F6;&#x60CA;&#x559C;&#x7684;&#x53D1;&#x73B0;&#x4E0D;&#x7528;&#x81EA;&#x5DF1;&#x624B;&#x52A8;&#x518D;&#x767B;&#x5F55;&#x4E00;&#x6B21;&#x4E86;&#xFF0C;&#x4F46;&#x662F;&#x5F53;&#x6211;&#x4E09;&#x5929;&#x6CA1;&#x6709;&#x8BBF;&#x95EE;&#x5B83;&#xFF0C;&#x5B83;&#x5C31;&#x4F1A;&#x8BA9;&#x6211;&#x91CD;&#x65B0;&#x767B;&#x5F55;&#x3002;&#x8FD9;&#x4E9B;&#x5C31;&#x662F;&#x901A;&#x8FC7;session&#x6765;&#x5B8C;&#x6210;&#x7684;&#x3002; &#x5B9E;&#x73B0;&#x4E00;&#x4E2A;session&#x7684;&#x65B9;&#x5F0F;&#x5206;&#x4E3A;&#x4E09;&#x6B65;&#xFF1A; &#x68C0;&#x67E5;&#x4E00;&#x4E2A;&#x5BA2;&#x6237;&#x7AEF;&#x8BF7;&#x6C42;&#x662F;&#x5426;&#x643A;&#x5E26;&#x7EA6;&#x5B9A;&#x5B57;&#x6BB5;&#x3002; &#x82E5;&#x6CA1;&#x5E26;&#xFF0C;&#x8BF4;&#x660E;&#x662F;&#x7B2C;&#x4E00;&#x6B21;&#x8BBF;&#x95EE;&#x3002;&#x82E5;&#x5E26;&#x4E86;&#xFF0C;&#x5219;&#x6839;&#x636E;&#x8BE5;&#x5B57;&#x6BB5;&#x643A;&#x5E26;&#x7684;&#x503C;&#x5224;&#x65AD;session&#x662F;&#x5426;&#x8D85;&#x65F6;&#xFF08;&#x82E5;&#x8D85;&#x65F6;&#x53EF;&#x80FD;&#x9700;&#x8981;&#x91CD;&#x65B0;&#x767B;&#x5F55;&#x7B49;&#x5904;&#x7406;&#xFF09;&#x3002;&#x7136;&#x540E;&#x5220;&#x9664;&#x65E7;session&#xFF0C;&#x751F;&#x6210;&#x65B0;&#x7684;session&#x3002; &#x5C06;&#x65B0;&#x751F;&#x6210;&#x7684;session&#x7684;&#x8BC6;&#x522B;&#x5B57;&#x6BB5;&#x53CA;&#x6240;&#x643A;&#x5E26;&#x7684;&#x503C;&#x5199;&#x5165;&#x54CD;&#x5E94;&#x7684;&#x5934;&#x4FE1;&#x606F;&#x4E2D;&#x7684;cookie&#x4E2D;&#xFF0C;&#x8FD4;&#x56DE;&#x5BA2;&#x6237;&#x7AEF;&#x3002; &#x7531;&#x4E8E;Node.js&#x9879;&#x76EE;&#x53EF;&#x80FD;&#x9700;&#x8981;&#x4F7F;&#x7528;cluster&#xFF0C;&#x8FD9;&#x5BFC;&#x81F4;session&#x4E0D;&#x80FD;&#x5B58;&#x50A8;&#x5728;&#x7F13;&#x5B58;&#x4E2D;&#xFF0C;&#x56E0;&#x6B64;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x5E93;&#xFF0C;redis&#x975E;&#x5E38;&#x9002;&#x5408;&#xFF0C;&#x4F46;&#x662F;&#x7531;&#x4E8E;&#x9879;&#x76EE;&#x521A;&#x597D;&#x4F7F;&#x7528;&#x4E86;MySQL&#xFF0C;&#x56E0;&#x6B64;&#x4F7F;&#x7528;MySQL&#x6765;&#x5B58;&#x50A8;session&#x3002;&#x5728;&#x5F00;&#x59CB;&#x7F16;&#x5199;session&#x4E4B;&#x524D;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x5148;&#x5C01;&#x88C5;&#x51E0;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x6570;&#x636E;&#x5E93;&#x64CD;&#x4F5C;&#x3002;&#x4E3A;&#x6B64;&#xFF0C;&#x6211;&#x4F7F;&#x7528;&#x4E86;&#x4E00;&#x4E2A;node-mysql&#x6A21;&#x5757;&#x6765;&#x5E2E;&#x52A9;&#x6211;&#x8FDB;&#x884C;&#x5DE5;&#x4F5C;&#x3002;123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119var mysql = require(&apos;mysql&apos;);const pool = mysql.createPool({ host: &apos;yourhost&apos;, user: &apos;youruser&apos;, database: &apos;yourdb&apos;, password: &apos;*****&apos;, port: &apos;3306&apos;, connectionLimit: 100});const createSchema = (schema, name) =&gt; { return { name: name, options: schema }};const sessionSchema = createSchema( `( id VARCHAR(100) primary key, expire VARCHAR(50) )`, &apos;session&apos;);const operation = (connection, table) =&gt; { this.createTable = (callback) =&gt; { const action = &apos;CREATE TABLE IF NOT EXISTS &apos; + table.name + &apos; &apos; + table.options; connection.query(action, callback); }; this.dropTable = (callback) =&gt; { const action = &apos;DROP TABLE &apos; + table.name; connection.query(action, callback); }; this.insertItem = (data, callback) =&gt; { const action = &apos;INSERT INTO &apos; + table.name + &apos; SET ?&apos;; connection.query(action, data, callback); }; this.selectById = (id, callback) =&gt; { const action = &apos;SELECT * FROM &apos; + table.name + &apos; WHERE id=&apos; + pool.escape(id); connection.query(action, callback); }; this.updateById = (id, data, callback) =&gt; { const action = &apos;UPDATE &apos; + table.name + &apos; SET ? WHERE id=&apos; + pool.escape(id); connection.query(action, data, callback); }; this.deleteById = (id, callback) =&gt; { const action = &apos;DELETE FROM &apos; + table.name + &apos; WHERE id=&apos; + pool.escape(id); connection.query(action, callback); }; this.release = () =&gt; { connection.release(); }; return this;};const connectPool = (callback, table) =&gt; { pool.getConnection((err, connection) =&gt; { if(err) { console.log(&apos;[query] - :&apos; + err); return; } console.log(&apos;[connection connect] succeed!&apos;); const connect = operation(connection, table); callback(connect); });};const defaultCallback = (err, result) =&gt; { if (err) { console.log(err); } else { console.log(result); }};const initTable = () =&gt; { const createSessionTable = connectPool((connect) =&gt; { connect.createTable(defaultCallback); connect.release(); }, sessionSchema);};const manager = (mode) =&gt; { const common = (callback) =&gt; { return connectPool((connect) =&gt; { callback(connect); connect.release(); }, mode); }; return { create: () =&gt; { common((connect) =&gt; { connect.createTable(defaultCallback); }); }, add: (data) =&gt; { common((connect) =&gt; { connect.insertItem(data, defaultCallback); }); }, delete: (id) =&gt; { common((connect) =&gt; { connect.deleteById(id, defaultCallback); }); }, get: (id, callback) =&gt; { common((connect) =&gt; { connect.selectById(id, (err, result)=&gt;{ if (err) { console.log(err); } else { callback(result); } }); }); }, update: (data) =&gt; { common((connect) =&gt; { connect.updateById(data.id, data, defaultCallback); }); }, }}initTable();const sessionManager = manager(sessionSchema); &#x8FD9;&#x6837;&#x6211;&#x4EEC;&#x5C31;&#x5C01;&#x88C5;&#x597D;&#x4E86;&#x4E00;&#x4E2A;sessionManager&#xFF0C;&#x7528;&#x6765;&#x5BF9;session&#x8868;&#x8FDB;&#x884C;&#x589E;&#x5220;&#x67E5;&#x6539;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x8FD9;&#x6837;&#x5C01;&#x88C5;&#x7684;&#x597D;&#x5904;&#x662F;&#x5982;&#x679C;&#x6709;&#x4E86;&#x65B0;&#x7684;table&#xFF0C;&#x53EA;&#x8981;&#x5728;&#x539F;&#x4EE3;&#x7801;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#x65B0;&#x589E;&#x76F8;&#x5173;schema&#x5373;&#x53EF;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x4FEE;&#x6539;&#x548C;&#x5220;&#x9664;&#x4EE3;&#x7801;&#x3002; &#x63A5;&#x4E0B;&#x6765;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8FDB;&#x884C;&#x670D;&#x52A1;&#x7AEF;session&#x6821;&#x9A8C;&#x7684;&#x7F16;&#x5199;&#x4E86;&#x3002; &#x786E;&#x5B9A;session&#x7684;&#x65F6;&#x6548;EXPIRES&#x548C;&#x7EA6;&#x5B9A;&#x5B57;&#x6BB5;KEY&#xFF0C;&#x5E76;&#x7528;parseCookie&#x89E3;&#x6790;&#x8BF7;&#x6C42;&#x4E2D;&#x7684;cookie&#x3002; &#x4F7F;&#x7528;hackHead&#x65B9;&#x6CD5;&#x6539;&#x5199;response&#x65B9;&#x6CD5;&#x4F7F;&#x5176;&#x54CD;&#x5E94;&#x5BA2;&#x6237;&#x7AEF;&#x65F6;&#x80FD;&#x591F;&#x643A;&#x5E26;session&#x3002; &#x4F7F;&#x7528;&#x4E24;&#x4E2A;promisecheckExist&#x548C;sessionMiddleWare&#x6765;&#x8BA9;&#x5F02;&#x6B65;&#x64CD;&#x4F5C;&#x66F4;&#x6709;&#x6761;&#x7406;&#xFF0C;&#x5BF9;session&#x662F;&#x5426;&#x5B58;&#x5728;&#x4EE5;&#x53CA;&#x5220;&#x9664;&#x8D85;&#x65F6;ssession&#xFF0C;&#x751F;&#x6210;&#x65B0;session&#x8FDB;&#x884C;&#x5904;&#x7406;&#x3002; &#x628A;&#x540E;&#x7EED;&#x64CD;&#x4F5C;&#x653E;&#x5728;handler&#x4E2D;&#x8FDB;&#x884C;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x53EF;&#x4EE5;&#x4FDD;&#x8BC1;&#x5BA2;&#x6237;&#x7AEF;&#x662F;&#x548C;&#x6211;&#x4EEC;&#x4FDD;&#x6301;&#x901A;&#x4FE1;&#x7684;&#x72B6;&#x6001;&#x4E86;&#x3002; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485const http = require(&apos;http&apos;);const KEY = &apos;session_id&apos;;const EXPIRES = 20 * 60 * 1000;const generate = function() { var session = {}; session.id = (new Date()).getTime() + Math.random().toFixed(2); session.expire = (new Date()).getTime() + EXPIRES; sessionManager.add(session); return session;}const checkExist = (id) =&gt; { var promise = new Promise((resolve, reject) =&gt; { sessionManager.get(id, (session) =&gt; { if (session) { resolve(session); } }); }); return promise;}const parseCookie = (req) =&gt; { if (req.headers.cookie){ let cookies = {}; req.headers.cookie.split(&apos;;&apos;).forEach((cookie) =&gt; { let parts = cookie.split(&apos;=&apos;); cookies[ parts[0].trim() ] = ( parts[1] || &apos;&apos;).trim(); }) return cookies; } else { return null; }}const hackHead = (sessions, req, res) =&gt; { var writeHead = res.writeHead; res.writeHead = (status, headers) =&gt; { let cookies = req.headers.cookie; let session = KEY + &apos;=&apos; + sessions.id; cookies = Array.isArray(cookies) ? cookies.concat(session) : [cookies, session]; res.setHeader(&apos;Set-Cookie&apos;, cookies); res.writeHead = writeHead; return res.writeHead(status, headers); } return res.writeHead;}const sessionMiddleWare = (req, res) =&gt; { var promise = new Promise((resolve, reject) =&gt; { const cookies = parseCookie(req); if(!cookies || !cookies[KEY]) { const session = generate(user); res.writeHead = hackHead(session, req, res); const output = [req, res]; resolve(output); } else { checkExist(cookies[KEY]).then((session) =&gt; { let newSession; if (session[0]){ session = session[0]; if (session.expire &gt; (new Date()).getTime()) { newSession = session; newSession.expire = (new Date()).getTime() + EXPIRES; manager.update(newSession); } else { manager.delete(session.id); newSession = generate(user); } } else { newSession = generate(user); } return newSession; }).then((session) =&gt; { res.writeHead = hackHead(session, req, res); const output = [req, res]; resolve(output); }); } }); return promise;}const checkSession = (req, res, handler) =&gt; { sessionMiddleWare(req, res).then((output) =&gt; { handler(output[0], output[1]); });}"},{"title":"CORS和Cookies","permalink":"http://lovin0730.github.io/2016/08/27/cors-and-cookies/","text":"pixiv-ID: 56852068 &#x672C;&#x6B21;&#x7684;&#x9879;&#x76EE;&#x662F;&#x4E3A;&#x4E00;&#x4E2A;&#x77ED;&#x671F;&#x6D3B;&#x52A8;&#x642D;&#x5EFA;Node.js&#x670D;&#x52A1;&#x7AEF;&#xFF0C;&#x90E8;&#x7F72;&#x5728;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x540E;&#x53D1;&#x73B0;&#x540C;&#x4E8B;&#x5728;&#x81EA;&#x5DF1;&#x7684;&#x672C;&#x673A;&#x4F7F;&#x7528;&#x9700;&#x8981;&#x643A;&#x5E26;Cookie&#x7684;AJAX&#x8BF7;&#x6C42;&#x8C03;&#x7528;&#x63A5;&#x53E3;&#x7684;&#x65F6;&#x5019;,&#x53D7;&#x5230;&#x4E86;&#x540C;&#x6E90;&#x7B56;&#x7565;&#x7684;&#x9650;&#x5236;&#x3002;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x5728;&#x670D;&#x52A1;&#x7AEF;&#x5BF9;&#x8DE8;&#x57DF;&#x8BF7;&#x6C42;&#x5F00;&#x653E;&#x8BB8;&#x53EF;&#x3002; CORS&#x662F;&#x4E00;&#x4E2A;W3C&#x6807;&#x51C6;&#xFF0C; &#x5168;&#x79F0;&#x662F;&#x201C;&#x8DE8;&#x57DF;&#x8D44;&#x6E90;&#x5171;&#x4EAB;&#x201D;&#xFF08;Cross-origin resource sharing&#xFF09;&#x3002;&#x5B83;&#x5141;&#x8BB8;&#x4E86;&#x6D4F;&#x89C8;&#x5668;&#x5411;&#x8DE8;&#x6E90;&#x670D;&#x52A1;&#x5668;&#x53D1;&#x9001;AJAX&#x8BF7;&#x6C42;&#x3002;&#xFF08;&#x53D7;&#x9650;&#x4E8E;&#x540C;&#x6E90;&#x7B56;&#x7565;&#xFF0C;&#x4E00;&#x822C;&#x7684;AJAX&#x4E0D;&#x80FD;&#x8DE8;&#x57DF;&#xFF09;&#x3002; &#x8DE8;&#x57DF;AJAX&#x8BF7;&#x6C42;&#x7684;&#x53D1;&#x9001;&#x6E90;&#x9700;&#x8981;&#x5728;&#x670D;&#x52A1;&#x7AEF;&#x7684;&#x8BB8;&#x53EF;&#x540D;&#x5355;&#x4E4B;&#x4E2D;&#xFF0C;&#x56E0;&#x6B64;&#x9700;&#x8981;&#x670D;&#x52A1;&#x7AEF;&#x5BF9;&#x8BF7;&#x6C42;&#x6E90;&#x5F00;&#x653E;&#x8BB8;&#x53EF;&#x3002; &#x672C;&#x6B21;&#x9879;&#x76EE;&#x4E2D;&#x7684;&#x670D;&#x52A1;&#x7AEF;&#x8BED;&#x8A00;&#x662F;Node.js&#xFF0C;&#x4E00;&#x822C;&#x6765;&#x8BF4;&#x5F00;&#x653E;&#x8BB8;&#x53EF;&#x7684;&#x505A;&#x6CD5;&#x4E3A;&#x54CD;&#x5E94;&#x7684;&#x5934;&#x4FE1;&#x606F;&#x6DFB;&#x52A0;&#x4E00;&#x4E9B;&#x5B57;&#x6BB5;&#x3002; 123456res.setHeader(&apos;Access-Control-Allow-Origin&apos;, *);//&#x53EF;&#x4EE5;&#x63A5;&#x53D7;&#x7684;&#x6E90;&#xFF0C;*&#x8868;&#x793A;&#x4EFB;&#x610F;res.setHeader(&apos;Access-Control-Allow-Headers&apos;, &apos;X-Requested-With&apos;);//&#x9884;&#x68C0;&#x7684;&#x65F6;&#x5019;&#x4F7F;&#x7528;&#xFF0C;&#x6307;&#x660E;&#x8BF7;&#x6C42;&#x4E2D;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x7684;&#x81EA;&#x5B9A;&#x4E49;HTTP&#x8BF7;&#x6C42;&#x5934;res.setHeader(&apos;Access-Control-Allow-Methos&apos;, &apos;PUT, POST, GET, DELETE, OPTIONS&apos;);//&#x9884;&#x68C0;&#x7684;&#x65F6;&#x5019;&#x4F7F;&#x7528;&#xFF0C;&#x6307;&#x660E;&#x8D44;&#x6E90;&#x53EF;&#x4EE5;&#x88AB;&#x8BF7;&#x6C42;&#x7684;&#x65B9;&#x5F0F; &#x4F46;&#x662F;&#x5982;&#x679C;&#x5728;&#x8BF7;&#x6C42;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x9700;&#x8981;&#x643A;&#x5E26;Cookie&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x9700;&#x8981;&#x5728;&#x670D;&#x52A1;&#x7AEF;&#x548C;&#x5BA2;&#x6237;&#x7AEF;&#x4E24;&#x7AEF;&#x505A;&#x4E00;&#x4E9B;&#x5904;&#x7406; &#x5728;&#x5BA2;&#x6237;&#x7AEF;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x7ED9;XMLHTTPRequest&#x5BF9;&#x8C61;&#x5F00;&#x542F;withCredentials&#x5C5E;&#x6027;&#xFF0C;&#x4F8B;&#x5982;&#x4E0B;&#x9762;&#x6211;&#x5C01;&#x88C5;&#x7684;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;AJAX&#x8BF7;&#x6C42;&#x3002; 12345678910111213141516171819202122function AJAX(method, URL, async, type, callback, data) { var xhr = new XMLHttpRequest(); xhr.responseType = type; //&#x5F00;&#x542F;withCredentials&#x5C5E;&#x6027; xhr.withCredentials = true; xhr.onreadystatechange = function() { if (xhr.readyState == 4 &amp;&amp; xhr.status == 200) { var getRes = xhr.response; callback(getRes); } }; xhr.onerror = function (e) { console.error(e); }; xhr.open(method, URL, async); if (data) { xhr.setRequestHeader(&quot;Content-Type&quot;, &quot;application/x-www-form-urlencoded&quot;); xhr.send(data); } else { xhr.send(); }} &#x5728;&#x670D;&#x52A1;&#x7AEF;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x4E3A;&#x54CD;&#x5E94;&#x7684;&#x5934;&#x4FE1;&#x606F;&#x6DFB;&#x52A0;Access-Control-Allow-Credentials&#x3002;&#x8FD9;&#x65F6;&#x670D;&#x52A1;&#x7AEF;&#x5FC5;&#x987B;&#x5236;&#x5B9A;&#x8BF7;&#x6C42;&#x7684;&#x57DF;&#x540D;&#xFF0C;&#x4E0D;&#x518D;&#x80FD;&#x4F7F;&#x7528;&#x2019;*&#x2019;, &#x6211;&#x4EEC;&#x9700;&#x8981;&#x9488;&#x5BF9;&#x4E0D;&#x540C;&#x8BBF;&#x95EE;&#x8BBE;&#x5B9A;&#x8DE8;&#x6E90;&#x5141;&#x8BB8;&#x57DF;&#xFF0C;&#x8FD9;&#x65F6;HTTP&#x8BF7;&#x6C42;&#x5934;&#x7684;Referer&#x503C;&#x5C31;&#x5F88;&#x597D;&#x7528;&#x4E86;&#xFF0C;&#x5F53;&#x5728;&#x4E00;&#x4E2A;&#x57DF;&#x4E0B;&#x53D1;&#x8D77;&#x4E00;&#x4E2A;CORS&#x8BF7;&#x6C42;&#x65F6;&#xFF0C;HTTP&#x8BF7;&#x6C42;&#x5934;&#x7684;Referer&#x4F1A;&#x81EA;&#x52A8;&#x8BBE;&#x7F6E;&#x4E3A;&#x9875;&#x9762;&#x57DF;&#xFF0C;&#x6B64;&#x65F6;&#x53EA;&#x8981;&#x6211;&#x4EEC;&#x5728;&#x670D;&#x52A1;&#x7AEF;&#x6839;&#x636E;Referer&#x503C;&#x6784;&#x9020;&#x51FA;&#x76F8;&#x5E94;&#x7684;Access-Control-Allow-Origin&#x503C;&#x5373;&#x53EF;&#x3002; 1234567let origin = req.headers.referer;if (origin) { origin = origin.match(/^http:\\/\\/+[a-zA-Z0-9\\.]+(\\:[0-9]+)?/);}origin = origin ? origin[0] : &apos;your url&apos;;res.setHeader(&apos;Access-Control-Allow-Origin&apos;, origin);res.setHeader(&apos;Access-Control-Allow-Credentials&apos;, &apos;true&apos;); &#x8FD9;&#x6837;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x5C3D;&#x60C5;&#x4F7F;&#x7528;&#x5E26;Cookie&#x7684;&#x8DE8;&#x57DF;&#x4E86;&#x3002; &#x66F4;&#x591A;&#x5173;&#x4E8E;CORS&#x53EF;&#x4EE5;&#x9605;&#x8BFB;&#x672C;&#x7BC7;&#x4F7F;&#x7528;Referer&#x7684;&#x7075;&#x611F;&#x6765;&#x81EA;&#x8FD9;&#x91CC;"},{"title":"实现温度曲线过程中的思考","permalink":"http://lovin0730.github.io/2016/07/15/temperature-curve/","text":"pixiv-ID: 50140585 &#x4E0A;&#x5468;&#x63A5;&#x5230;&#x7684;&#x9700;&#x6C42;&#x662F;&#x5B9E;&#x73B0;QQ&#x6D4F;&#x89C8;&#x5668;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x6E29;&#x5EA6;&#x66F2;&#x7EBF;&#x3002;&#x5177;&#x4F53;&#x6765;&#x8BF4;&#x5C31;&#x662F;&#x4F20;&#x5165;&#x4E00;&#x7EC4;&#x6570;&#x636E;&#xFF0C;&#x6570;&#x636E;&#x5305;&#x62EC;6&#x5929;&#x7684;&#x5F53;&#x65E5;&#x6700;&#x9AD8;&#x6E29;&#x5EA6;&#x548C;&#x6700;&#x4F4E;&#x6E29;&#x5EA6;&#xFF0C;&#x7531;&#x6B64;&#x62DF;&#x5408;&#x51FA;&#x4E00;&#x6761;&#x66F2;&#x7EBF;&#x3002; &#x66F2;&#x7EBF;&#x4F7F;&#x7528;canvas&#x8FDB;&#x884C;&#x7ED8;&#x5236;&#xFF0C;&#x56E0;&#x6B64;&#x6709;&#x539F;&#x751F;&#x7684;&#x8D1D;&#x585E;&#x5C14;&#x66F2;&#x7EBF;api&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x3002;&#x6211;&#x4EEC;&#x5E94;&#x8BE5;&#x6700;&#x5927;&#x5316;&#x7684;&#x5229;&#x7528;&#x8FD9;&#x4E2A;&#x5148;&#x5929;&#x4F18;&#x52BF;&#xFF0C;&#x907F;&#x514D;&#x8FC7;&#x591A;&#x7684;&#x6570;&#x5B66;&#x8BA1;&#x7B97;&#x3002; &#x5728;&#x8FD9;&#x4E2A;&#x9700;&#x6C42;&#x4E2D;&#xFF0C;&#x6709;&#x4E24;&#x4E2A;&#x5F88;&#x6709;&#x8DA3;&#x7684;&#x70B9;&#xFF1A; &#x5982;&#x679C;&#x51FA;&#x73B0;&#x5929;&#x6C14;&#x53D8;&#x5316;&#x5F88;&#x5C0F;&#x7684;&#x60C5;&#x51B5;&#xFF1A;&#x6BD4;&#x5982;&#x524D;&#x56DB;&#x5929;&#x6C14;&#x6E29;&#x90FD;&#x4E3A;22&#xB0;~23&#xB0;&#xFF0C;&#x7B2C;&#x4E94;&#x5929;&#x7684;&#x53D8;&#x4E3A;23&#xB0;~24&#xB0;&#xFF0C;&#x90A3;&#x4E48;&#x66F2;&#x7EBF;&#x4E2D;&#x8FD9;&#x4E00;&#x53D8;&#x5316;&#x662F;&#x5426;&#x5E94;&#x8BE5;&#x8868;&#x73B0;&#x7684;&#x975E;&#x5E38;&#x660E;&#x663E;&#xFF1F; &#x7ED9;&#x5B9A;&#x7684;&#x6E29;&#x5EA6;&#x662F;&#x4E00;&#x4E2A;&#x533A;&#x95F4;&#xFF0C;&#x90A3;&#x4E48;&#x5982;&#x4F55;&#x5728;&#x8FD9;&#x4E2A;&#x533A;&#x95F4;&#x4E2D;&#x7528;&#x4E00;&#x6761;&#x5E73;&#x6ED1;&#x66F2;&#x7EBF;&#x8F83;&#x4E3A;&#x51C6;&#x786E;&#x7684;&#x63CF;&#x7ED8;&#x51FA;&#x53D8;&#x5316;&#xFF1F; &#x9700;&#x6C42;&#x7684;&#x8BBE;&#x8BA1;&#x7A3F;&#x5982;&#x4E0B;&#xFF1A; &#x7ECF;&#x8FC7;&#x601D;&#x8003;&#xFF0C;&#x4E2A;&#x4EBA;&#x8BA4;&#x4E3A;&#x5904;&#x7406;&#x4E0A;&#x8FF0;&#x4E24;&#x4E2A;&#x95EE;&#x9898;&#x7684;&#x529E;&#x6CD5;&#x662F;: &#x5982;&#x679C;&#x6E29;&#x5EA6;&#x53D8;&#x5316;&#x60C5;&#x51B5;&#x5F88;&#x5C0F;&#xFF0C;&#x90A3;&#x4E48;&#x66F2;&#x7EBF;&#x7684;&#x53D8;&#x5316;&#x4E5F;&#x4E0D;&#x5B9C;&#x8FC7;&#x5927;&#xFF0C;&#x4EE5;&#x514D;&#x7ED9;&#x957F;&#x671F;&#x7528;&#x6237;&#x9020;&#x6210;&#x56F0;&#x6270;&#x3002; &#x8FD9;&#x6761;&#x66F2;&#x7EBF;&#x4E0D;&#x91C7;&#x7528;&#x63CF;&#x70B9;-&#x8FDE;&#x7EBF;-&#x6298;&#x7EBF;&#x8F6C;&#x66F2;&#x7EBF;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x63CF;&#x7ED8;&#xFF0C;&#x4E5F;&#x4E0D;&#x91C7;&#x7528;&#x70B9;&#x62DF;&#x5408;&#x66F2;&#x7EBF;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x8FDB;&#x884C;&#xFF0C;&#x7406;&#x7531;&#x5982;&#x4E0B;&#xFF1A; &#x63CF;&#x70B9;-&#x8FDE;&#x7EBF;-&#x6298;&#x7EBF;&#x8F6C;&#x66F2;&#x7EBF;&#x9762;&#x5BF9;&#x7684;&#x4E00;&#x4E2A;&#x5F88;&#x68D8;&#x624B;&#x7684;&#x95EE;&#x9898;&#x5C31;&#x662F;&#x5BF9;&#x4E8E;&#x66F2;&#x7EBF;&#x66F2;&#x5EA6;&#x7684;&#x628A;&#x63E1;&#xFF0C;&#x800C;&#x4E14;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x7684;&#x5411;&#x91CF;&#x8BA1;&#x7B97;&#x53EF;&#x80FD;&#x4F1A;&#x5BF9;&#x6027;&#x80FD;&#x4EA7;&#x751F;&#x4E00;&#x4E9B;&#x5F71;&#x54CD;&#x3002; &#x70B9;&#x62DF;&#x5408;&#x66F2;&#x7EBF;&#x662F;&#x4E00;&#x4E2A;&#x7A33;&#x59A5;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x4F46;&#x662F;&#x9700;&#x8981;&#x9762;&#x5BF9;&#x7684;&#x95EE;&#x9898;&#x662F;&#x8D85;&#x5927;&#x7684;&#x8BA1;&#x7B97;&#x91CF;&#x3002;&#x800C;&#x4E14;&#x5BF9;&#x4E8E;&#x6C14;&#x6E29;&#x53D8;&#x5316;&#x5927;&#x7684;&#x57CE;&#x5E02;&#x5F88;&#x53EF;&#x80FD;&#x51FA;&#x73B0;&#x66F2;&#x7EBF;&#x504F;&#x79BB;&#x5176;&#x4E2D;&#x4E00;&#x70B9;&#x5F88;&#x8FDC;&#x7684;&#x60C5;&#x51B5;&#x3002; &#x7EFC;&#x4E0A;&#x6240;&#x8FF0;&#xFF0C;&#x6211;&#x91C7;&#x53D6;&#x4E86;&#x4E00;&#x79CD;&#x6298;&#x7EBF;&#x62DF;&#x5408;&#x66F2;&#x7EBF;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x8FD9;&#x4E2A;&#x65B9;&#x5F0F;&#x975E;&#x5E38;&#x6709;&#x8DA3;&#xFF0C;&#x7075;&#x611F;&#x6765;&#x81EA;&#x8FD9;&#x91CC; &#x4F46;&#x662F;&#x8FD9;&#x4E2A;&#x529E;&#x6CD5;&#x6709;&#x4E00;&#x4E2A;&#x5F88;&#x5927;&#x7684;&#x95EE;&#x9898;&#x5C31;&#x662F;&#xFF1A;&#x4E66;&#x5199;&#x4E0A;&#x4E0B;&#x6E29;&#x5EA6;&#x503C;&#x7684;&#x65F6;&#x5019;&#x5982;&#x4F55;&#x786E;&#x5B9A;&#x5728;&#x7EBF;&#x4E0A;&#x7684;&#x70B9;&#x7684;Y&#x5750;&#x6807;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x7B97;&#x6CD5;&#x53BB;&#x89E3;&#x51B3;&#x5B83;&#x3002; &#x56E0;&#x6B64;&#x4EE3;&#x7801;&#x6838;&#x5FC3;&#x5206;&#x4E3A;&#x4E09;&#x90E8;&#x5206;&#xFF1A; &#x7B2C;&#x4E00;&#x90E8;&#x5206;&#x662F;&#x5982;&#x4F55;&#x8BA9;&#x66F2;&#x7EBF;&#x53D8;&#x5316;&#x6839;&#x636E;&#x6E29;&#x5DEE;&#x5927;&#x5C0F;&#x8FDB;&#x884C;&#x9002;&#x5EA6;&#x7684;&#x53D8;&#x5316;&#xFF0C;&#x6E29;&#x5DEE;&#x5927;&#x53D8;&#x5316;&#x5927;&#xFF0C;&#x6E29;&#x5DEE;&#x5C0F;&#x53D8;&#x5316;&#x5C0F;&#x3002;&#x4E14;&#x80FD;&#x591F;&#x5BB9;&#x7EB3;&#x8DB3;&#x591F;&#x7684;&#x6E29;&#x5EA6;&#x53D8;&#x5316;&#x533A;&#x95F4;&#x3002; &#x7B2C;&#x4E8C;&#x90E8;&#x5206;&#x662F;&#x5982;&#x4F55;&#x628A;&#x6298;&#x7EBF;&#x62DF;&#x5408;&#x4E3A;&#x5E73;&#x6ED1;&#x66F2;&#x7EBF;&#x3002; &#x7B2C;&#x4E09;&#x90E8;&#x5206;&#x662F;&#x786E;&#x7ACB;&#x7B97;&#x6CD5;&#x6C42;&#x89E3;&#x7279;&#x5B9A;&#x70B9;&#x7684;Y&#x5750;&#x6807;&#x3002; &#x5904;&#x7406;&#x7B2C;&#x4E00;&#x90E8;&#x5206;&#x7684;&#x529E;&#x6CD5;&#x662F;&#x6839;&#x636E;&#x7ED9;&#x5B9A;&#x7684;&#x6570;&#x636E;&#x8BA1;&#x7B97;&#x51FA;&#x4E00;&#x4E2A;&#x53C2;&#x8003;&#x533A;&#x95F4;&#xFF0C;&#x7136;&#x540E;&#x6839;&#x636E;&#x8FD9;&#x4E2A;&#x53C2;&#x8003;&#x533A;&#x95F4;&#x6765;&#x63CF;&#x7ED8;&#x66F2;&#x7EBF;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x73B0;&#x5728;&#x7684;&#x6E29;&#x5EA6;&#x6570;&#x636E;&#x662F;&#x4E0A;&#x56FE;&#x8BBE;&#x8BA1;&#x56FE;&#x6240;&#x793A;&#x7684;&#x6E29;&#x5EA6;&#x6570;&#x636E;&#xFF0C;&#x90A3;&#x4E48;&#x7406;&#x60F3;&#x7684;&#x6E29;&#x5EA6;&#x533A;&#x95F4;&#x5C31;&#x662F;28~10&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x9996;&#x5148;&#x8981;&#x8BA1;&#x7B97;&#x5408;&#x7406;&#x6E29;&#x5EA6;&#x533A;&#x95F4;&#x3002;&#x5176;&#x6B21;&#xFF0C;&#x533A;&#x95F4;&#x8BA1;&#x7B97;&#x51FA;&#x6765;&#x4E4B;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x5728;canvas&#x4E0A;&#x7684;&#x5750;&#x6807;&#x548C;&#x6E29;&#x5EA6;&#x5728;&#x8FD9;&#x4E2A;&#x533A;&#x95F4;&#x4E2D;&#x7684;&#x4F4D;&#x7F6E;&#x662F;&#x6210;&#x6BD4;&#x4F8B;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x8981;&#x8BA1;&#x7B97;&#x6E29;&#x5EA6;&#x70B9;&#x5BF9;&#x5E94;canvas&#x753B;&#x5E03;&#x4E2D;&#x7684;&#x4F4D;&#x7F6E; 1234567891011121314151617181920212223242526272829303132333435363738394041424344var cfg = { canvaswidth: 660, //&#x753B;&#x5E03;&#x5BBD;&#x5EA6; canvasheight: 228, //&#x753B;&#x5E03;&#x9AD8;&#x5EA6; blankx: 0, //&#x66F2;&#x7EBF;&#x6A2A;&#x5411;&#x7559;&#x767D; blankt: 30, //&#x6587;&#x5B57;&#x6A2A;&#x5411;&#x7559;&#x767D; blanky: 35 //&#x66F2;&#x7EBF;&#x7EB5;&#x5411;&#x7559;&#x767D;};var setting = { linewidth: 1, //&#x66F2;&#x7EBF;&#x7C97;&#x7EC6; linecolor: &apos;#fff&apos;, //&#x66F2;&#x7EBF;&#x989C;&#x8272; base: 5, //&#x533A;&#x95F4;&#x57FA;&#x51C6;&#x503C; textsize: 24, //&#x6587;&#x5B57;&#x5927;&#x5C0F; textoffset: 34, //&#x6587;&#x5B57;&#x4E0E;&#x66F2;&#x7EBF;&#x8DDD;&#x79BB; textcolor: &apos;#fff&apos;, //&#x6587;&#x5B57;&#x989C;&#x8272; font: &apos;arial&apos; //&#x6587;&#x5B57;&#x5B57;&#x4F53;}var getdata = function(data) { var _getdata = [], _avarage; for (var _i = 0; _i &lt; data.length; _i++) { _avarage = (data[_i][0] + data[_i][1]) / 2; _getdata.push(_avarage); } return _getdata;}var choseRank = function(getData) { var _max = -Infinity, _min = Infinity, _res, _cur, _rank; for (var _i = 0; _i &lt; getData.length; _i++) { _cur = getData[_i]; if (_cur &gt; _max) { _max = _cur; } if (_cur &lt; _min) { _min = _cur; } } _res = _max - _min; _rank = Math.round(_res / setting.base) + 1; return _rank * setting.base;} &#x5904;&#x7406;&#x7B2C;&#x4E8C;&#x90E8;&#x5206;&#x7684;&#x529E;&#x6CD5;&#x5C31;&#x6765;&#x81EA;&#x4E8E;&#x4E0A;&#x8FF0;&#x90A3;&#x4E2A;&#x94FE;&#x63A5;&#x4E2D;&#x7684;&#x7075;&#x611F;&#x3002;&#x5047;&#x8BBE;&#x6211;&#x4EEC;&#x6709;&#x70B9;A&#x3001;B&#x3001;C&#x3001;D&#x3001;E&#x3002;&#x90A3;&#x4E48;&#x6211;&#x4EEC;&#x4EE5;A&#x4E3A;&#x8D77;&#x70B9;&#xFF0C;B&#x3001;C&#x7684;&#x4E2D;&#x70B9;&#x4E3A;&#x7EC8;&#x70B9;&#xFF0C;B&#x4E3A;&#x53C2;&#x8003;&#x70B9;&#x505A;&#x8D1D;&#x585E;&#x5C14;&#x66F2;&#x7EBF;;&#x7136;&#x540E;&#x63A5;&#x7740;&#x4EE5;C&#x3001;D&#x7684;&#x4E2D;&#x70B9;&#x4E3A;&#x7EC8;&#x70B9;&#xFF0C;C&#x4E3A;&#x53C2;&#x8003;&#x70B9;&#x505A;&#x8D1D;&#x585E;&#x5C14;&#x66F2;&#x7EBF;&#xFF0C;&#x4EE5;&#x6B64;&#x7C7B;&#x63A8;&#x3002;123456789101112131415161718192021222324252627282930313233343536373839404142var draw_MAIN = function(canvas, data) { var _dataGot = getData(data); var _rank = choseRank(_dataGot); var _totalPoint = _dataGot.length; var _sum = getSum(_dataGot); var _avr = Math.round(_sum / _totalPoint); var _low = _avr - _rank / 2, _high = _avr + _rank / 2, _interval = (cfg.canvasWidth - cfg.blankX * 2) / (_totalPoint - 1), _intervalT = (cfg.canvasWidth - cfg.blankT * 2) / (_totalPoint - 1), _curSupport, _cur, _next; var _curPoint = cfg.blankX; var getY = function(i) { return cfg.canvasHeight - cfg.blankY - (_dataGot[i] - _low) * (cfg.canvasHeight - cfg.blankY * 2) / _rank; } if (canvas.getContext) { var _ctx = canvas.getContext(&apos;2d&apos;); _ctx.imageSmoothingEnabled = true; _ctx.strokeStyle = setting.lineColor; _ctx.lineWidth = setting.lineWidth; _ctx.lineCap = &apos;round&apos;; _ctx.beginPath(); _ctx.moveTo(_curPoint, getY(0)); for (var _i = 0; _i &lt; _dataGot.length - 1; _i++) { _cur = getY(_i + 1); _next = getY(_i + 2); _curSupport = getSupportPoint(_cur, _next); if (_i &lt; _dataGot.length - 2) { _ctx.quadraticCurveTo(_curPoint + _interval, _cur, _curPoint + _interval * 1.5, _curSupport); } else if (_i &gt;= _dataGot.length - 2) { _ctx.quadraticCurveTo(_curPoint, getY(_i), _curPoint + _interval, _cur); } _curPoint += _interval; _ctx.stroke(); } }} &#x8FD9;&#x65F6;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x7B97;&#x6CD5;&#x6765;&#x8BA1;&#x7B97;&#x51FA;bezier-curve&#x4E0A;&#x7279;&#x5B9A;&#x70B9;&#x7684;&#x5750;&#x6807;&#xFF0C;canvas&#x6CA1;&#x6709;&#x7ED9;&#x6211;&#x4EEC;&#x63D0;&#x4F9B;&#x76F8;&#x5E94;&#x7684;api&#xFF0C;&#x9700;&#x8981;&#x6211;&#x4EEC;&#x6839;&#x636E;bezier&#x51FD;&#x6570;&#x81EA;&#x5DF1;&#x6765;&#x5B8C;&#x6210;&#xFF0C;&#x8FD9;&#x91CC;&#x6211;&#x653E;&#x4E0A;&#x4E24;&#x4E2A;&#x53C2;&#x8003;&#x94FE;&#x63A5; &#x8D1D;&#x585E;&#x5C14;&#x66F2;&#x7EBF;&#x521D;&#x63A2;stackoverflow&#x4E0A;&#x7684;&#x95EE;&#x9898; &#x6700;&#x540E;&#x5F97;&#x51FA;&#x7684;&#x51FD;&#x6570;&#x4E3A;&#xFF1A; 1234567891011121314151617181920212223var getYValues = function(start, control, end, X) { var _q1, _q2, _q3, _t, _y; _q1 = 2 * start.x - 2 * control.x; _q2 = Math.sqrt(5 * start.x * start.x - 10 * start.x * control.x + start.x * end.x - start.x * X + 2 * control.x * X + 4 * control.x * control.x ); _q3 = 2 * start.x - 4 * control.x + 2 * end.x; if (_q3 !== 0) { _t = (_q1 + _q2) / _q3; } else { _t = ( X - start.x) / (2*control.x - 2*start.x); } if (_t &lt; 0) { _t = -1 * _t; } _y = start.y * (1 - _t) * (1 - _t) + control.y * 2 * (1 - _t) * _t + end.y * _t * _t; return _y;} &#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;canvas&#x7ED8;&#x5236;&#x66F2;&#x7EBF;&#x4F1A;&#x4EA7;&#x751F;&#x952F;&#x9F7F;&#xFF0C;&#x9664;&#x4E86;&#x5F00;&#x542F;&#x6D4F;&#x89C8;&#x5668;&#x6297;&#x952F;&#x9F7F;&#x4EE5;&#x5916;&#xFF0C;&#x6309;&#x7167;&#x4E8C;&#x500D;&#x56FE;&#x6765;&#x7ED8;&#x5236;&#x7136;&#x540E;&#x518D;&#x7F29;&#x5C0F;&#x4E5F;&#x662F;&#x884C;&#x4E4B;&#x6709;&#x6548;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x8FD9;&#x91CC;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x7B28;&#x529E;&#x6CD5;&#xFF1A;1234567891011var setScale = function(num, cfg, setting) { cfg.canvasWidth *= num; cfg.canvasHeight *= num; cfg.blankX *= num; cfg.blankT *= num; cfg.blankY *= num; setting.lineWidth *= num; setting.base *= num; setting.textSize *= num; setting.textOffSet *= num;} &#x6240;&#x4EE5;&#x6700;&#x7EC8;&#x4EE3;&#x7801;&#x4E3A;:123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171function drawTemperature(canvas, data) { var cfg = { canvasWidth: 660, //&#x753B;&#x5E03;&#x5BBD;&#x5EA6; canvasHeight: 228, //&#x753B;&#x5E03;&#x9AD8;&#x5EA6; blankX: 0, //&#x66F2;&#x7EBF;&#x6A2A;&#x5411;&#x7559;&#x767D; blankT: 30, //&#x6587;&#x5B57;&#x6A2A;&#x5411;&#x7559;&#x767D; blankY: 35 //&#x66F2;&#x7EBF;&#x7EB5;&#x5411;&#x7559;&#x767D; }; var setting = { lineWidth: 1, //&#x66F2;&#x7EBF;&#x7C97;&#x7EC6; lineColor: &apos;#fff&apos;, //&#x66F2;&#x7EBF;&#x989C;&#x8272; base: 5, //&#x533A;&#x95F4;&#x57FA;&#x51C6;&#x503C; textSize: 24, //&#x6587;&#x5B57;&#x5927;&#x5C0F; textOffSet: 34, //&#x6587;&#x5B57;&#x4E0E;&#x66F2;&#x7EBF;&#x8DDD;&#x79BB; textColor: &apos;#fff&apos;, //&#x6587;&#x5B57;&#x989C;&#x8272; font: &apos;arial&apos; //&#x6587;&#x5B57;&#x5B57;&#x4F53; } var getData = function(data) { var _getData = [], _avarage; for (var _i = 0; _i &lt; data.length; _i++) { _avarage = (data[_i][0] + data[_i][1]) / 2; _getData.push(_avarage); } return _getData; } var choseRank = function(getData) { var _max = -Infinity, _min = Infinity, _res, _cur, _rank; for (var _i = 0; _i &lt; getData.length; _i++) { _cur = getData[_i]; if (_cur &gt; _max) { _max = _cur; } if (_cur &lt; _min) { _min = _cur; } } _res = _max - _min; _rank = Math.round(_res / setting.base) + 1; return _rank * setting.base; } var getYValues = function(start, control, end, X) { var _q1, _q2, _q3, _t, _y; _q1 = 2 * start.x - 2 * control.x; _q2 = Math.sqrt(5 * start.x * start.x - 10 * start.x * control.x + start.x * end.x - start.x * X + 2 * control.x * X + 4 * control.x * control.x ); _q3 = 2 * start.x - 4 * control.x + 2 * end.x; if (_q3 !== 0) { _t = (_q1 + _q2) / _q3; } else { _t = ( X - start.x) / (2*control.x - 2*start.x); } if (_t &lt; 0) { _t = -1 * _t; } _y = start.y * (1 - _t) * (1 - _t) + control.y * 2 * (1 - _t) * _t + end.y * _t * _t; return _y; } var setScale = function(num, cfg, setting) { cfg.canvasWidth *= num; cfg.canvasHeight *= num; cfg.blankX *= num; cfg.blankT *= num; cfg.blankY *= num; setting.lineWidth *= num; setting.base *= num; setting.textSize *= num; setting.textOffSet *= num; } var getSum = function(getData) { var _sum = 0; for (var _i = 0; _i &lt; getData.length; _i++) { _sum = _sum + getData[_i]; } return _sum; } var getSupportPoint = function(prev, next) { return (prev + next) / 2; } var draw_MAIN = function(canvas, data) { setScale(2, cfg, setting); var _dataGot = getData(data); var _rank = choseRank(_dataGot); var _totalPoint = _dataGot.length; var _sum = getSum(_dataGot); var _avr = Math.round(_sum / _totalPoint); var _low = _avr - _rank / 2, _high = _avr + _rank / 2, _interval = (cfg.canvasWidth - cfg.blankX * 2) / (_totalPoint - 1), _intervalT = (cfg.canvasWidth - cfg.blankT * 2) / (_totalPoint - 1), _start = {}, _control = {}, _end = {}, _Y, _curSupport, _cur, _next; var _curPoint = cfg.blankX; var _curPointT = cfg.blankT; var getY = function(i) { return cfg.canvasHeight - cfg.blankY - (_dataGot[i] - _low) * (cfg.canvasHeight - cfg.blankY * 2) / _rank; } if (canvas.getContext) { var _ctx = canvas.getContext(&apos;2d&apos;); _ctx.imageSmoothingEnabled = true; _ctx.strokeStyle = setting.lineColor; _ctx.lineWidth = setting.lineWidth; _ctx.lineCap = &apos;round&apos;; _ctx.font = setting.textSize + &apos;px &apos; + setting.font; _ctx.fillStyle = setting.textColor; _ctx.textAlign = &apos;center&apos;; _ctx.textBaseline = &apos;middle&apos;; _ctx.fillText(data[0][1] + &quot;&#xB0;&quot;, _curPointT, getY(0) - setting.textOffSet); _ctx.fillText(data[0][0] + &quot;&#xB0;&quot;, _curPointT, getY(0) + setting.textOffSet); _ctx.beginPath(); _ctx.moveTo(_curPoint, getY(0)); for (var _i = 0; _i &lt; _dataGot.length - 1; _i++) { _cur = getY(_i + 1); _next = getY(_i + 2); _curSupport = getSupportPoint(_cur, _next); if (_i === 0) { _start.x = _curPoint; _start.y = getY(0); _control.x = _curPoint + _interval; _control.y = _cur; _end.x = _curPoint + _interval * 1.5; _end.y = _curSupport; _Y = getYValues(_start, _control, _end, _curPoint + _interval); } else if (_i &lt; _dataGot.length - 2) { _start.x = _curPoint + _interval * 0.5; _start.y = getSupportPoint(getY(_i), getY(_i + 1)); _control.x = _curPoint + _interval; _control.y = _cur; _end.x = _curPoint + _interval * 1.5; _end.y = _curSupport; _Y = getYValues(_start, _control, _end, _control.x); } else if (_i &gt;= _dataGot.length - 2) { _Y = _cur; } if (_i &lt; _dataGot.length - 2) { _ctx.quadraticCurveTo(_curPoint + _interval, _cur, _curPoint + _interval * 1.5, _curSupport); } else if (_i &gt;= _dataGot.length - 2) { _ctx.quadraticCurveTo(_curPoint, getY(_i), _curPoint + _interval, _cur); } _curPoint += _interval; _ctx.stroke(); _curPointT += _intervalT; _ctx.fillText(data[_i + 1][1] + &quot;&#xB0;&quot;, _curPointT, _Y - setting.textOffSet); _ctx.fillText(data[_i + 1][0] + &quot;&#xB0;&quot;, _curPointT, _Y + setting.textOffSet); } } } draw_MAIN(canvas,data);}"}]}